{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';/**\n * ログインフォームコンポーネント\n * @param {object} props - プロパティ\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(_ref){let{setIsLoggedIn}=_ref;// ユーザー名とパスワードの状態を管理\nconst[password,setPassword]=useState('');// 画面遷移のためのnavigateフック\nconst navigate=useNavigate();/**\n   * フォーム送信時のハンドラ\n   * @param {object} e - イベントオブジェクト\n   */const handleSubmit=e=>{e.preventDefault();// デフォルトのフォーム送信を防ぐ\n// ここで実際の認証ロジックを実装します\n// 例: ユーザー名が 'user' でパスワードが 'password' の場合に認証成功とみなす\nif(password==='password'){setIsLoggedIn(true);// ログイン状態をtrueに設定\nnavigate('/home');// ログイン成功後、/home へ遷移\n}else{// 認証失敗時のメッセージ表示（alertの代わりにカスタムモーダルを使用することを推奨）\nalert('パスワードが異なります。');}};return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-screen bg-gray-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-6 text-center text-gray-800\",children:\"\\u30ED\\u30B0\\u30A4\\u30F3\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",htmlFor:\"password\",children:\"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true,className:\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline w-full transition duration-300 ease-in-out\",children:\"\\u30ED\\u30B0\\u30A4\\u30F3\"})]})]})});}export default Login;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","_ref","setIsLoggedIn","password","setPassword","navigate","handleSubmit","e","preventDefault","alert","className","children","onSubmit","htmlFor","type","id","value","onChange","target","required"],"sources":["C:/banpaku_2025/banpaku_web_Another-version/src/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\n/**\n * ログインフォームコンポーネント\n * @param {object} props - プロパティ\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\n */\nfunction Login({ setIsLoggedIn }) {\n  // ユーザー名とパスワードの状態を管理\n  const [password, setPassword] = useState('');\n  // 画面遷移のためのnavigateフック\n  const navigate = useNavigate();\n\n  /**\n   * フォーム送信時のハンドラ\n   * @param {object} e - イベントオブジェクト\n   */\n  const handleSubmit = (e) => {\n    e.preventDefault(); // デフォルトのフォーム送信を防ぐ\n\n    // ここで実際の認証ロジックを実装します\n    // 例: ユーザー名が 'user' でパスワードが 'password' の場合に認証成功とみなす\n    if ( password === 'password') {\n      setIsLoggedIn(true); // ログイン状態をtrueに設定\n      navigate('/home'); // ログイン成功後、/home へ遷移\n    } else {\n      // 認証失敗時のメッセージ表示（alertの代わりにカスタムモーダルを使用することを推奨）\n      alert('パスワードが異なります。');\n    }\n  };\n\n  \n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n      <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\n        <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">ログイン</h2>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n              パスワード:\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline w-full transition duration-300 ease-in-out\"\n          >\n            ログイン\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAG9C;AACA;AACA;AACA;AACA,GAJA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAKA,QAAS,CAAAC,KAAKA,CAAAC,IAAA,CAAoB,IAAnB,CAAEC,aAAc,CAAC,CAAAD,IAAA,CAC9B;AACA,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C;AACA,KAAM,CAAAW,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B;AACF;AACA;AACA,KACE,KAAM,CAAAW,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAE;AAEpB;AACA;AACA,GAAKL,QAAQ,GAAK,UAAU,CAAE,CAC5BD,aAAa,CAAC,IAAI,CAAC,CAAE;AACrBG,QAAQ,CAAC,OAAO,CAAC,CAAE;AACrB,CAAC,IAAM,CACL;AACAI,KAAK,CAAC,cAAc,CAAC,CACvB,CACF,CAAC,CAID,mBACEZ,IAAA,QAAKa,SAAS,CAAC,2DAA2D,CAAAC,QAAA,cACxEZ,KAAA,QAAKW,SAAS,CAAC,mDAAmD,CAAAC,QAAA,eAChEd,IAAA,OAAIa,SAAS,CAAC,mDAAmD,CAAAC,QAAA,CAAC,0BAAI,CAAI,CAAC,cAC3EZ,KAAA,SAAMa,QAAQ,CAAEN,YAAa,CAACI,SAAS,CAAC,WAAW,CAAAC,QAAA,eAEjDZ,KAAA,QAAAY,QAAA,eACEd,IAAA,UAAOa,SAAS,CAAC,4CAA4C,CAACG,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,iCAEjF,CAAO,CAAC,cACRd,IAAA,UACEiB,IAAI,CAAC,UAAU,CACfC,EAAE,CAAC,UAAU,CACbC,KAAK,CAAEb,QAAS,CAChBc,QAAQ,CAAGV,CAAC,EAAKH,WAAW,CAACG,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACRT,SAAS,CAAC,iIAAiI,CAC5I,CAAC,EACC,CAAC,cACNb,IAAA,WACEiB,IAAI,CAAC,QAAQ,CACbJ,SAAS,CAAC,4JAA4J,CAAAC,QAAA,CACvK,0BAED,CAAQ,CAAC,EACL,CAAC,EACJ,CAAC,CACH,CAAC,CAEV,CAEA,cAAe,CAAAX,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}