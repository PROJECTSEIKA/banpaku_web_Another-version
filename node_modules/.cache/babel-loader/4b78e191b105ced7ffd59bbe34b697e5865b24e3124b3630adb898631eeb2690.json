{"ast":null,"code":"var _jsxFileName = \"C:\\\\banpaku_2025\\\\banpaku\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from 'login.js'; // 正しいパスを確認\nimport Home from 'home.js'; // 正しいパスを確認\nimport './App.css'; // Tailwind CSSを適用するために必要（後述）\n\n/**\n * メインアプリケーションコンポーネント\n * ログイン状態とルーティングを管理\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // ログイン状態を管理するstate\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setIsLoggedIn: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Home, {\n            setIsLoggedIn: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Login","Home","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/banpaku_2025/banpaku/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from 'login.js'; // 正しいパスを確認\nimport Home from 'home.js' ;   // 正しいパスを確認\nimport './App.css'; // Tailwind CSSを適用するために必要（後述）\n\n/**\n * メインアプリケーションコンポーネント\n * ログイン状態とルーティングを管理\n */\nfunction App() {\n  // ログイン状態を管理するstate\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          {/* ルートパス (\"/\") はログインコンポーネントを表示 */}\n          <Route path=\"/\" element={<Login setIsLoggedIn={setIsLoggedIn} />} />\n\n          {/* \"/home\" パスはログイン状態に応じて表示を切り替える */}\n          <Route\n            path=\"/home\"\n            element={isLoggedIn ? <Home setIsLoggedIn={setIsLoggedIn} /> : <Navigate to=\"/\" />}\n          />\n\n          {/* 未定義のパスに対するリダイレクト */}\n          {/* どのパスにもマッチしない場合、ログインページにリダイレクトする */}\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,KAAK,MAAM,UAAU,CAAC,CAAC;AAC9B,OAAOC,IAAI,MAAM,SAAS,CAAE,CAAG;AAC/B,OAAO,WAAW,CAAC,CAAC;;AAEpB;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,oBACES,OAAA,CAACP,MAAM;IAAAY,QAAA,eACLL,OAAA;MAAKM,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBL,OAAA,CAACN,MAAM;QAAAW,QAAA,gBAELL,OAAA,CAACL,KAAK;UAACY,IAAI,EAAC,GAAG;UAACC,OAAO,eAAER,OAAA,CAACH,KAAK;YAACO,aAAa,EAAEA;UAAc;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGpEZ,OAAA,CAACL,KAAK;UACJY,IAAI,EAAC,OAAO;UACZC,OAAO,EAAEL,UAAU,gBAAGH,OAAA,CAACF,IAAI;YAACM,aAAa,EAAEA;UAAc;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGZ,OAAA,CAACJ,QAAQ;YAACiB,EAAE,EAAC;UAAG;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpF,CAAC,eAIFZ,OAAA,CAACL,KAAK;UAACY,IAAI,EAAC,GAAG;UAACC,OAAO,eAAER,OAAA,CAACJ,QAAQ;YAACiB,EAAE,EAAC;UAAG;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACV,EAAA,CAxBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}