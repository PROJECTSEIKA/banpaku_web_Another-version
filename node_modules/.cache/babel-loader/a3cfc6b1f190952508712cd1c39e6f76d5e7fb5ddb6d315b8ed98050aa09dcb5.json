{"ast":null,"code":"var _jsxFileName = \"C:\\\\banpaku_2025\\\\banpaku\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useMemo, useRef, useState } from \"react\";\n// import './style.css';\n// import {\n//   nowInSec,\n//   SkyWayAuthToken,\n//   SkyWayContext,\n//   SkyWayRoom,\n//   SkyWayStreamFactory,\n//   uuidV4,\n//   LocalP2PRoomMember,\n// } from '@skyway-sdk/room';\n\n// /**\n//  * ホーム画面コンポーネント\n//  * @param {object} props - プロパティ\n//  * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\n//  */\n// function Home({ setIsLoggedIn }) {\n//   // ルーム名\n//   const [roomName, setRoomName] = useState(\"\");\n//   // 自分の参加者情報 (ルームに参加すると設定されます)\n//   const [me, setMe] = useState(null);\n//   // SkyWayコンテキストのインスタンス\n//   const [skywayContext, setSkywayContext] = useState(null);\n//   // SkyWayルームのインスタンス\n//   const [skywayRoom, setSkywayRoom] = useState(null);\n//   // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\n//   const remoteVideoElements = useRef(new Map());\n//   // リモートビデオを表示するDOM要素への参照\n//   const robotDisplayRef = useRef(null);\n//   // ローカルストリームの参照を保持\n//   const localStreamRef = useRef(null);\n\n//   /**\n//    * ログアウトボタンクリック時のハンドラ\n//    */\n//   const handleLogout = () => {\n//     setIsLoggedIn(false); // ログイン状態をfalseに設定\n//   };\n\n//   // SkyWay App ID と Secret Key\n//   // 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\n//   // サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\n//   const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\n//   const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\n\n//   // SkyWay認証トークンの生成\n//   const token = useMemo(() => {\n//     if (appId == null || secretKey == null) return undefined;\n\n//     return new SkyWayAuthToken({\n//       jti: uuidV4(), // JWT ID\n//       iat: nowInSec(), // 発行時刻\n//       exp: nowInSec() + 60 * 60 * 24, // 有効期限 (24時間)\n//       version: 3,\n//       scope: {\n//         appId: appId,\n//         rooms: [\n//           {\n//             name: \"*\", // すべてのルーム名に適用\n//             methods: [\"create\", \"close\", \"updateMetadata\"], // ルーム操作の権限\n//             member: {\n//               name: \"*\", // すべてのメンバーに適用\n//               methods: [\"publish\", \"subscribe\", \"updateMetadata\"] // メンバー操作の権限\n//             }\n//           }],\n//         turn: {\n//           enabled: true // TURNサーバーの使用を許可 (NAT越えのため)\n//         }\n//       }\n//     }).encode(secretKey);\n\n//   }, [appId, secretKey]);\n\n//   /**\n//    * SkyWayContextの初期化とクリーンアップを行うuseEffect\n//    * トークンが利用可能になったときに一度だけ実行されます。\n//    */\n//   useEffect(() => {\n//     if (!token) return;\n\n//     let currentContext;\n//     const initContext = async () => {\n//       try {\n//         currentContext = await SkyWayContext.Create(token);\n//         setSkywayContext(currentContext);\n//         console.log(\"SkyWayContext created successfully.\");\n//       } catch (error) {\n//         console.error(\"Failed to create SkyWayContext:\", error);\n//       }\n//     };\n\n//     initContext();\n\n//     // コンポーネントのアンマウント時にコンテキストを破棄\n//     return () => {\n//       if (currentContext) {\n//         currentContext.dispose();\n//         console.log(\"SkyWayContext disposed.\");\n//       }\n//     };\n//   }, [token]); // tokenが変更されたときにのみ実行\n\n//   /**\n//    * リモートストリームをDOMに追加するヘルパー関数\n//    * @param {MediaStream} stream - 追加するメディアストリーム\n//    * @param {string} memberId - ストリームのパブリッシャーのメンバーID\n//    */\n//   const attachRemoteStream = (stream, memberId) => {\n//     if (robotDisplayRef.current) {\n//       const video = document.createElement(\"video\");\n//       video.autoplay = true; // 自動再生\n//       video.playsInline = true; // インライン再生 (iOSなどで必要)\n//       video.className = \"remote-video\"; // スタイリング用のクラス\n//       video.dataset.memberId = memberId; // メンバーIDをデータ属性に保存\n//       stream.attach(video); // ストリームをビデオ要素のソースに設定\n//       robotDisplayRef.current.appendChild(video);\n//       remoteVideoElements.current.set(memberId, video);\n//       console.log(`Attached stream from ${memberId} to DOM.`);\n//     }\n//   };\n\n//   /**\n//    * ルームに参加するハンドラ\n//    * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\n//    */\n//   const handleJoinRoom = async () => {\n//     if (!skywayContext) {\n//       console.error(\"SkyWayContext is not initialized. Please wait or check token.\");\n//       return;\n//     }\n//     if (!roomName) {\n//       console.error(\"Room name is empty. Please enter a room name to join.\");\n//       return;\n//     }\n//     if (skywayRoom && me) {\n//       console.warn(\"Already in a room. Please leave the current room first.\");\n//       return;\n//     }\n\n//     try {\n//       // 指定されたルーム名でP2Pルームを作成または検索\n//       const room = await SkyWayRoom.FindOrCreate(skywayContext, {\n//         type: \"p2p\", // P2Pルームタイプ\n//         name: roomName,\n//       });\n//       setSkywayRoom(room);\n//       console.log(`SkyWayRoom '${roomName}' found or created.`);\n\n//       // ルームに参加し、自分のメンバー情報を取得\n//       const localMember = await room.join();\n//       setMe(localMember);\n//       console.log(`Joined room '${roomName}' as member ID: ${localMember.id}`);\n\n//       // 自分のカメラとマイクのストリームを作成し、公開\n//       const { audio, video } = await SkyWayStreamFactory.createMicrophoneAudioAndCameraStream();\n//       localStreamRef.current = video; // ローカルストリームを保存\n//       await localMember.publish(video);\n//       await localMember.publish(audio);\n//       console.log(\"Published local camera and microphone stream.\");\n\n//       // --- 既存のストリームを購読するロジック (ここが追加・修正された部分) ---\n//       // ルーム内の既存の公開ストリームをすべて購読する\n//       for (const publication of room.publications) {\n//         // 自分のストリームは購読しない\n//         if (localMember.id === publication.publisher.id) {\n//           continue;\n//         }\n//         try {\n//           const { stream } = await localMember.subscribe(publication.id);\n//           console.log(`Subscribed to existing stream from ${publication.publisher.id}`);\n//           attachRemoteStream(stream, publication.publisher.id);\n//         } catch (subscribeError) {\n//           console.error(`Failed to subscribe to existing stream from ${publication.publisher.id}:`, subscribeError);\n//         }\n//       }\n\n//       // --- ルームイベントリスナーの設定 ---\n\n//       // メンバーがルームに参加したときのイベント\n//       room.onMemberJoined.add((e) => {\n//         console.log(`Member joined: ${e.member.id}`);\n//       });\n\n//       // メンバーがルームを離脱したときのイベント\n//       room.onMemberLeft.add((e) => {\n//         console.log(`Member left: ${e.member.id}`);\n//         // 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\n//         const videoElement = remoteVideoElements.current.get(e.member.id);\n//         if (videoElement && robotDisplayRef.current) {\n//           robotDisplayRef.current.removeChild(videoElement);\n//           remoteVideoElements.current.delete(e.member.id);\n//           console.log(`Removed video for member ${e.member.id}`);\n//         }\n//       });\n\n//       // ストリームが公開されたときのイベント\n//       room.onStreamPublished.add(async (e) => {\n//         console.log(`Stream published by ${e.publication.publisher.id}`);\n//         // 自分のストリームは購読しない\n//         if (localMember.id !== e.publication.publisher.id) {\n//           try {\n//             // リモートストリームを購読\n//             const { stream } = await localMember.subscribe(e.publication.id);\n//             console.log(`Subscribed to stream from ${e.publication.publisher.id}`);\n//             attachRemoteStream(stream, e.publication.publisher.id);\n//           } catch (subscribeError) {\n//             console.error(`Failed to subscribe to stream from ${e.publication.publisher.id}:`, subscribeError);\n//           }\n//         } else {\n//           console.log(`Skipping subscription for own stream: ${e.publication.publisher.id}`);\n//         }\n//       });\n\n//       // ストリームが非公開になったときのイベント\n//       room.onStreamUnpublished.add((e) => {\n//         console.log(`Stream unpublished by ${e.publication.publisher.id}`);\n//         // 該当ストリームのビデオ要素をDOMから削除し、Mapからも削除\n//         const videoElement = remoteVideoElements.current.get(e.publication.publisher.id);\n//         if (videoElement && robotDisplayRef.current) {\n//           robotDisplayRef.current.removeChild(videoElement);\n//           remoteVideoElements.current.delete(e.publication.publisher.id);\n//           console.log(`Removed unpublished video for member ${e.publication.publisher.id}`);\n//         }\n//       });\n\n//     } catch (error) {\n//       console.error(\"Failed to join room:\", error);\n//       // エラー発生時に状態をリセットして再試行可能にする\n//       setSkywayRoom(null);\n//       setMe(null);\n//       // エラー時に既存のビデオ要素をクリーンアップ\n//       if (robotDisplayRef.current) {\n//         Array.from(robotDisplayRef.current.children).forEach(child => {\n//           if (child.tagName === 'VIDEO') {\n//             robotDisplayRef.current.removeChild(child);\n//           }\n//         });\n//       }\n//       remoteVideoElements.current.clear();\n//       if (localStreamRef.current) {\n//         localStreamRef.current.stop(); // ローカルストリームを停止\n//         localStreamRef.current = null;\n//       }\n//     }\n//   };\n\n//   /**\n//    * ルームから退出するハンドラ\n//    */\n//   const handleLeaveRoom = async () => {\n//     if (skywayRoom && me) {\n//       try {\n//         // ローカルストリームを停止し、公開を解除\n//         if (localStreamRef.current) {\n//           localStreamRef.current.stop();\n//           localStreamRef.current = null;\n//           console.log(\"Stopped local stream.\");\n//         }\n//         await me.leave(); // ルームから退出\n//         console.log(`Left room '${roomName}'`);\n//         skywayRoom.close(); // ルームを閉じる (これはルームの作成者のみが効果的です)\n//         console.log(\"SkyWay Room closed.\");\n//       } catch (error) {\n//         console.error(\"Failed to leave room:\", error);\n//       } finally {\n//         // 状態をリセット\n//         setMe(null);\n//         setSkywayRoom(null);\n//         // すべてのリモートビデオ要素をDOMから削除\n//         if (robotDisplayRef.current) {\n//           Array.from(robotDisplayRef.current.children).forEach(child => {\n//             if (child.tagName === 'VIDEO') {\n//               robotDisplayRef.current.removeChild(child);\n//             }\n//           });\n//         }\n//         remoteVideoElements.current.clear();\n//       }\n//     }\n//   };\n//   //モーションを操作するボタンを押した時の処理\n//   const  handleSend = async () => {\n\n//   };\n\n//   return (\n//     <>\n//       <div className=\"header\">\n//         <div className=\"header-left\">\n//           <button className=\"motion-btn\">モーション</button>\n//           <span className=\"robot-status\">\n//             操作しているロボット：RX78-myakumyaku\n//           </span>\n//         </div>\n//         <div className=\"header-right\">\n//           <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\n//           <button className=\"voice-btn\">ボイス</button>\n//         </div>\n//       </div>\n//       <div className=\"main-container\">\n//         <div className=\"side-panel\">\n//           <div className=\"side-panel-content\">\n//             <button onClick={handleSend} className=\"side-btn\">こんにちは</button>\n//             <button onClick={handleSend} className=\"side-btn\">バイバイ</button>\n//             <button onClick={handleSend} className=\"side-btn\">ペコリ</button>\n//             <button onClick={handleSend} className=\"side-btn\">バタバタ</button>\n//             <button onClick={handleSend} className=\"side-btn\">うえをむく</button>\n//             <button onClick={handleSend} className=\"side-btn\">したをむく</button>\n//             <button onClick={handleSend} className=\"side-btn\">みぎをむく</button>\n//             <button onClick={handleSend} className=\"side-btn\">ひだりをむく</button>\n//             <button onClick={handleSend} className=\"side-btn\">うなずく</button>\n//             <button onClick={handleSend} className=\"side-btn\">かしげる</button>\n//             <button onClick={handleSend} className=\"side-btn\">まわる</button>\n//             <button onClick={handleSend} className=\"side-btn\">ジャンプ</button>\n//             <button onClick={handleSend} className=\"side-btn\">ダンス</button>\n//             <button onClick={handleSend} className=\"side-btn\">おじぎ</button>\n//             <button onClick={handleSend} className=\"side-btn\">きをつけ</button>\n//             <button onClick={handleSend} className=\"side-btn\">休め</button>\n//           </div>\n//         </div>\n//         <div className=\"main-area\">\n//           <div className=\"room-controls\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"ルーム名を入力\"\n//               value={roomName}\n//               onChange={(e) => setRoomName(e.target.value)}\n//               className=\"room-input\"\n//               disabled={!!me} // ルーム参加中は入力不可にする\n//             />\n//             {!me ? ( // ルームに参加していない場合\n//               <button onClick={handleJoinRoom} className=\"join-room-btn\" disabled={!skywayContext || !roomName}>\n//                 ルームに参加\n//               </button>\n//             ) : ( // ルームに参加している場合\n//               <button onClick={handleLeaveRoom} className=\"leave-room-btn\">\n//                 ルームを退出\n//               </button>\n//             )}\n//           </div>\n//           <div className=\"robot-display\" ref={robotDisplayRef}>\n//             {/* リモートのビデオストリームがここに動的に追加されます */}\n//             {me ? (\n//               <div className=\"room-info\">\n//                 ルームID: {roomName} / 自分のID: {me.id}\n//               </div>\n//             ) : (\n//               <p>ルームに参加してください</p>\n//             )}\n//           </div>\n//         </div>\n//         <div className=\"side-panel right\">\n//           <div className=\"side-panel-content\">\n//             <button className=\"side-btn\">こんにちは</button>\n//             <button className=\"side-btn\">どこからきたの？</button>\n//             <button className=\"side-btn\">バイバイ</button>\n//             <button className=\"side-btn\">○○していますか？</button>\n//             <button className=\"side-btn\">ありがとう</button>\n//             <button className=\"side-btn\">いいね</button>\n//             <button className=\"side-btn\">おおきに</button>\n//             <button className=\"side-btn\">すごい</button>\n//             <button className=\"side-btn\">がんばれ</button>\n//             <button className=\"side-btn\">よろしく</button>\n//             <button className=\"side-btn\">お疲れ様</button>\n//             <button className=\"side-btn\">いいお天気</button>\n//             <button className=\"side-btn\">暑いですね</button>\n//             <button className=\"side-btn\">寒いですね</button>\n//             <button className=\"side-btn\">楽しい</button>\n//             <button className=\"side-btn\">面白い</button>\n//             <button className=\"side-btn\">すてき</button>\n//             <button className=\"side-btn\">かわいい</button>\n//             <button className=\"side-btn\">かっこいい</button>\n//             <button className=\"side-btn\">また明日</button>\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"bottom-controls\">\n//         <button className=\"control-btn ai-btn\">🤖 AIでいあんON</button>\n//         <button className=\"control-btn mic-btn\" id=\"micBtn\">\n//           🎤\n//         </button>\n//         <button className=\"control-btn manual-btn\" id=\"manualBtn\">\n//           📋 マニュアル\n//         </button>\n//         <button className=\"control-btn greeting-btn\" id=\"languageBtn\">\n//           👋 にほんご\n//         </button>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default Home;\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport './style.css'; // style.cssを再度有効化\nimport { nowInSec, SkyWayAuthToken, SkyWayContext, SkyWayRoom, SkyWayStreamFactory, uuidV4, LocalP2PRoomMember } from '@skyway-sdk/room';\n\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({\n  setIsLoggedIn\n}) {\n  _s();\n  // ルーム名\n  const [roomName, setRoomName] = useState(\"\");\n  // 自分の参加者情報 (ルームに参加すると設定されます)\n  const [me, setMe] = useState(null);\n  // SkyWayコンテキストのインスタンス\n  const [skywayContext, setSkywayContext] = useState(null);\n  // SkyWayルームのインスタンス\n  const [skywayRoom, setSkywayRoom] = useState(null);\n  // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\n  const remoteVideoElements = useRef(new Map());\n  // リモートビデオを表示するDOM要素への参照\n  const robotDisplayRef = useRef(null);\n  // ローカルストリームの参照を保持\n  const localStreamRef = useRef(null);\n  // 受信したメッセージを表示するための状態\n  const [receivedMessages, setReceivedMessages] = useState([]);\n\n  /**\r\n   * ログアウトボタンクリック時のハンドラ\r\n   */\n  const handleLogout = () => {\n    setIsLoggedIn(false); // ログイン状態をfalseに設定\n  };\n\n  // SkyWay App ID と Secret Key\n  // 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\n  // サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\n  const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\n  const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\n\n  // SkyWay認証トークンの生成\n  const token = useMemo(() => {\n    if (appId == null || secretKey == null) return undefined;\n    return new SkyWayAuthToken({\n      jti: uuidV4(),\n      // JWT ID\n      iat: nowInSec(),\n      // 発行時刻\n      exp: nowInSec() + 60 * 60 * 24,\n      // 有効期限 (24時間)\n      version: 3,\n      scope: {\n        appId: appId,\n        rooms: [{\n          name: \"*\",\n          // すべてのルーム名に適用\n          methods: [\"create\", \"close\", \"updateMetadata\"],\n          // ルーム操作の権限\n          member: {\n            name: \"*\",\n            // すべてのメンバーに適用\n            methods: [\"publish\", \"subscribe\", \"updateMetadata\"] // メンバー操作の権限\n          }\n        }],\n        turn: {\n          enabled: true // TURNサーバーの使用を許可 (NAT越えのため)\n        }\n      }\n    }).encode(secretKey);\n  }, [appId, secretKey]);\n\n  /**\r\n   * SkyWayContextの初期化とクリーンアップを行うuseEffect\r\n   * トークンが利用可能になったときに一度だけ実行されます。\r\n   */\n  useEffect(() => {\n    if (!token) return;\n    let currentContext;\n    const initContext = async () => {\n      try {\n        currentContext = await SkyWayContext.Create(token);\n        setSkywayContext(currentContext);\n        console.log(\"SkyWayContext created successfully.\");\n      } catch (error) {\n        console.error(\"Failed to create SkyWayContext:\", error);\n      }\n    };\n    initContext();\n\n    // コンポーネントのアンマウント時にコンテキストを破棄\n    return () => {\n      if (currentContext) {\n        currentContext.dispose();\n        console.log(\"SkyWayContext disposed.\");\n      }\n    };\n  }, [token]); // tokenが変更されたときにのみ実行\n\n  /**\r\n   * リモートストリームをDOMに追加するヘルパー関数\r\n   * @param {MediaStream} stream - 追加するメディアストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\n  const attachRemoteStream = (stream, memberId) => {\n    if (robotDisplayRef.current) {\n      const video = document.createElement(\"video\");\n      video.autoplay = true; // 自動再生\n      video.playsInline = true; // インライン再生 (iOSなどで必要)\n      video.className = \"remote-video\"; // スタイリング用のクラス\n      video.dataset.memberId = memberId; // メンバーIDをデータ属性に保存\n      stream.attach(video); // ストリームをビデオ要素のソースに設定\n      robotDisplayRef.current.appendChild(video);\n      remoteVideoElements.current.set(memberId, video);\n      console.log(`Attached stream from ${memberId} to DOM.`);\n    }\n  };\n\n  /**\r\n   * ルームに参加するハンドラ\r\n   * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\r\n   */\n  const handleJoinRoom = async () => {\n    if (!skywayContext) {\n      console.error(\"SkyWayContext is not initialized. Please wait or check token.\");\n      return;\n    }\n    if (!roomName) {\n      console.error(\"Room name is empty. Please enter a room name to join.\");\n      return;\n    }\n    if (skywayRoom && me) {\n      console.warn(\"Already in a room. Please leave the current room first.\");\n      return;\n    }\n    try {\n      // 指定されたルーム名でP2Pルームを作成または検索\n      const room = await SkyWayRoom.FindOrCreate(skywayContext, {\n        type: \"p2p\",\n        // P2Pルームタイプ\n        name: roomName\n      });\n\n      // roomオブジェクトが有効であることを確認\n      if (!room) {\n        console.error(\"SkyWayRoom.FindOrCreate returned null or undefined room.\");\n        throw new Error(\"Failed to create or find SkyWayRoom.\");\n      }\n      setSkywayRoom(room);\n      console.log(`SkyWayRoom '${roomName}' found or created.`);\n\n      // ルームに参加し、自分のメンバー情報を取得\n      const localMember = await room.join();\n      // localMemberが有効であることを確認\n      if (!localMember) {\n        console.error(\"room.join() returned null or undefined localMember.\");\n        throw new Error(\"Failed to join the room.\");\n      }\n      setMe(localMember);\n      console.log(`Joined room '${roomName}' as member ID: ${localMember.id}`);\n\n      // 自分のカメラとマイクのストリームを作成し、公開\n      const {\n        audio,\n        video\n      } = await SkyWayStreamFactory.createMicrophoneAudioAndCameraStream();\n      localStreamRef.current = video; // ローカルストリームを保存\n      await localMember.publish(video);\n      await localMember.publish(audio);\n      console.log(\"Published local camera and microphone stream.\");\n\n      // --- 既存のストリームを購読するロジック ---\n      // ルーム内の既存の公開ストリームをすべて購読する\n      for (const publication of room.publications) {\n        // 自分のストリームは購読しない\n        if (localMember.id === publication.publisher.id) {\n          continue;\n        }\n        try {\n          const {\n            stream\n          } = await localMember.subscribe(publication.id);\n          console.log(`Subscribed to existing stream from ${publication.publisher.id}`);\n          attachRemoteStream(stream, publication.publisher.id);\n        } catch (subscribeError) {\n          console.error(`Failed to subscribe to existing stream from ${publication.publisher.id}:`, subscribeError);\n        }\n      }\n\n      // --- ルームイベントリスナーの設定 ---\n\n      // メンバーがルームに参加したときのイベント\n      if (room.onMemberJoined) {\n        room.onMemberJoined.add(e => {\n          console.log(`Member joined: ${e.member.id}`);\n        });\n      }\n      // else ブロックは削除されました\n\n      // メンバーがルームを離脱したときのイベント\n      if (room.onMemberLeft) {\n        room.onMemberLeft.add(e => {\n          console.log(`Member left: ${e.member.id}`);\n          // 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\n          const videoElement = remoteVideoElements.current.get(e.member.id);\n          if (videoElement && robotDisplayRef.current) {\n            robotDisplayRef.current.removeChild(videoElement);\n            remoteVideoElements.current.delete(e.member.id);\n            console.log(`Removed video for member ${e.member.id}`);\n          }\n        });\n      }\n      // else ブロックは削除されました\n\n      // ストリームが公開されたときのイベント\n      if (room.onStreamPublished) {\n        room.onStreamPublished.add(async e => {\n          console.log(`Stream published by ${e.publication.publisher.id}`);\n          // 自分のストリームは購読しない\n          if (localMember.id !== e.publication.publisher.id) {\n            try {\n              // リモートストリームを購読\n              const {\n                stream\n              } = await localMember.subscribe(e.publication.id);\n              console.log(`Subscribed to stream from ${e.publication.publisher.id}`);\n              attachRemoteStream(stream, e.publication.publisher.id);\n            } catch (subscribeError) {\n              console.error(`Failed to subscribe to stream from ${e.publication.publisher.id}:`, subscribeError);\n            }\n          } else {\n            console.log(`Skipping subscription for own stream: ${e.publication.publisher.id}`);\n          }\n        });\n      }\n      // else ブロックは削除されました\n\n      // ストリームが非公開になったときのイベント\n      if (room.onStreamUnpublished) {\n        room.onStreamUnpublished.add(e => {\n          console.log(`Stream unpublished by ${e.publication.publisher.id}`);\n          // 該当ストリームのビデオ要素をDOMから削除し、Mapからも削除\n          const videoElement = remoteVideoElements.current.get(e.publication.publisher.id);\n          if (videoElement && robotDisplayRef.current) {\n            robotDisplayRef.current.removeChild(videoElement);\n            remoteVideoElements.current.delete(e.publication.publisher.id);\n            console.log(`Removed unpublished video for member ${e.publication.publisher.id}`);\n          }\n        });\n      }\n      // else ブロックは削除されました\n\n      // データが公開されたときのイベント\n      if (room.onDataPublished) {\n        room.onDataPublished.add(e => {\n          console.log(`Data published by ${e.publication.publisher.id}:`, e.data);\n          // 受信したメッセージを状態に追加\n          setReceivedMessages(prevMessages => [...prevMessages, {\n            senderId: e.publication.publisher.id,\n            message: e.data\n          }]);\n        });\n      }\n      // else ブロックは削除されました\n    } catch (error) {\n      console.error(\"Failed to join room:\", error);\n      // エラー発生時に状態をリセットして再試行可能にする\n      setSkywayRoom(null);\n      setMe(null);\n      // エラー時に既存のビデオ要素をクリーンアップ\n      if (robotDisplayRef.current) {\n        Array.from(robotDisplayRef.current.children).forEach(child => {\n          if (child.tagName === 'VIDEO') {\n            robotDisplayRef.current.removeChild(child);\n          }\n        });\n      }\n      remoteVideoElements.current.clear();\n      if (localStreamRef.current) {\n        localStreamRef.current.stop(); // ローカルストリームを停止\n        localStreamRef.current = null;\n      }\n    }\n  };\n\n  /**\r\n   * ルームから退出するハンドラ\r\n   */\n  const handleLeaveRoom = async () => {\n    if (skywayRoom && me) {\n      try {\n        // ローカルストリームを停止し、公開を解除\n        if (localStreamRef.current) {\n          localStreamRef.current.stop();\n          localStreamRef.current = null;\n          console.log(\"Stopped local stream.\");\n        }\n        await me.leave(); // ルームから退出\n        console.log(`Left room '${roomName}'`);\n        skywayRoom.close(); // ルームを閉じる (これはルームの作成者のみが効果的です)\n        console.log(\"SkyWay Room closed.\");\n      } catch (error) {\n        console.error(\"Failed to leave room:\", error);\n      } finally {\n        // 状態をリセット\n        setMe(null);\n        setSkywayRoom(null);\n        setReceivedMessages([]); // 受信メッセージもクリア\n        // すべてのリモートビデオ要素をDOMから削除\n        if (robotDisplayRef.current) {\n          Array.from(robotDisplayRef.current.children).forEach(child => {\n            if (child.tagName === 'VIDEO') {\n              robotDisplayRef.current.removeChild(child);\n            }\n          });\n        }\n        remoteVideoElements.current.clear();\n      }\n    }\n  };\n\n  /**\r\n   * モーションを操作するボタンを押した時の処理\r\n   * @param {string} message - 送信するメッセージ (ボタンのテキスト)\r\n   */\n  const handleSend = async message => {\n    if (me && skywayRoom) {\n      try {\n        // me.sendData() を使用してデータを送信\n        await me.sendData({\n          data: message\n        });\n        console.log(`Sent message: \"${message}\"`);\n        // 送信したメッセージも自身の画面に表示\n        setReceivedMessages(prevMessages => [...prevMessages, {\n          senderId: me.id,\n          message: message,\n          isLocal: true\n        }]);\n      } catch (error) {\n        console.error(\"Failed to send data:\", error);\n      }\n    } else {\n      console.warn(\"Cannot send message: Not in a room or 'me' object is not available.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col font-inter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"motion-btn\",\n          children: \"\\u30E2\\u30FC\\u30B7\\u30E7\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"robot-status\",\n          children: \"\\u64CD\\u4F5C\\u3057\\u3066\\u3044\\u308B\\u30ED\\u30DC\\u30C3\\u30C8\\uFF1ARX78-myakumyaku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"voice-btn\",\n          children: \"\\u30DC\\u30A4\\u30B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-panel-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('こんにちは'),\n            className: \"side-btn\",\n            children: \"\\u3053\\u3093\\u306B\\u3061\\u306F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('バイバイ'),\n            className: \"side-btn\",\n            children: \"\\u30D0\\u30A4\\u30D0\\u30A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('ペコリ'),\n            className: \"side-btn\",\n            children: \"\\u30DA\\u30B3\\u30EA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('バタバタ'),\n            className: \"side-btn\",\n            children: \"\\u30D0\\u30BF\\u30D0\\u30BF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('うえをむく'),\n            className: \"side-btn\",\n            children: \"\\u3046\\u3048\\u3092\\u3080\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('したをむく'),\n            className: \"side-btn\",\n            children: \"\\u3057\\u305F\\u3092\\u3080\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('みぎをむく'),\n            className: \"side-btn\",\n            children: \"\\u307F\\u304E\\u3092\\u3080\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('ひだりをむく'),\n            className: \"side-btn\",\n            children: \"\\u3072\\u3060\\u308A\\u3092\\u3080\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('うなずく'),\n            className: \"side-btn\",\n            children: \"\\u3046\\u306A\\u305A\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('かしげる'),\n            className: \"side-btn\",\n            children: \"\\u304B\\u3057\\u3052\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('まわる'),\n            className: \"side-btn\",\n            children: \"\\u307E\\u308F\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('ジャンプ'),\n            className: \"side-btn\",\n            children: \"\\u30B8\\u30E3\\u30F3\\u30D7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('ダンス'),\n            className: \"side-btn\",\n            children: \"\\u30C0\\u30F3\\u30B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('おじぎ'),\n            className: \"side-btn\",\n            children: \"\\u304A\\u3058\\u304E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('きをつけ'),\n            className: \"side-btn\",\n            children: \"\\u304D\\u3092\\u3064\\u3051\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('休め'),\n            className: \"side-btn\",\n            children: \"\\u4F11\\u3081\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u30EB\\u30FC\\u30E0\\u540D\\u3092\\u5165\\u529B\",\n            value: roomName,\n            onChange: e => setRoomName(e.target.value),\n            className: \"room-input\",\n            disabled: !!me // ルーム参加中は入力不可にする\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this), !me ?\n          /*#__PURE__*/\n          // ルームに参加していない場合\n          _jsxDEV(\"button\", {\n            onClick: handleJoinRoom,\n            className: \"join-room-btn\",\n            disabled: !skywayContext || !roomName,\n            children: \"\\u30EB\\u30FC\\u30E0\\u306B\\u53C2\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 15\n          }, this) :\n          /*#__PURE__*/\n          // ルームに参加している場合\n          _jsxDEV(\"button\", {\n            onClick: handleLeaveRoom,\n            className: \"leave-room-btn\",\n            children: \"\\u30EB\\u30FC\\u30E0\\u3092\\u9000\\u51FA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"robot-display\",\n          ref: robotDisplayRef,\n          children: [me ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room-info\",\n            children: [\"\\u30EB\\u30FC\\u30E0ID: \", roomName, \" / \\u81EA\\u5206\\u306EID: \", me.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u30EB\\u30FC\\u30E0\\u306B\\u53C2\\u52A0\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"received-messages-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u53D7\\u4FE1\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 15\n            }, this), receivedMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: receivedMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: msg.isLocal ? 'local-message' : 'remote-message',\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [msg.isLocal ? '自分' : msg.senderId.substring(0, 8), \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 23\n                }, this), \" \", msg.message]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-panel right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-panel-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('こんにちは'),\n            className: \"side-btn\",\n            children: \"\\u3053\\u3093\\u306B\\u3061\\u306F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('どこからきたの？'),\n            className: \"side-btn\",\n            children: \"\\u3069\\u3053\\u304B\\u3089\\u304D\\u305F\\u306E\\uFF1F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('バイバイ'),\n            className: \"side-btn\",\n            children: \"\\u30D0\\u30A4\\u30D0\\u30A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('○○していますか？'),\n            className: \"side-btn\",\n            children: \"\\u25CB\\u25CB\\u3057\\u3066\\u3044\\u307E\\u3059\\u304B\\uFF1F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('ありがとう'),\n            className: \"side-btn\",\n            children: \"\\u3042\\u308A\\u304C\\u3068\\u3046\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('いいね'),\n            className: \"side-btn\",\n            children: \"\\u3044\\u3044\\u306D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('おおきに'),\n            className: \"side-btn\",\n            children: \"\\u304A\\u304A\\u304D\\u306B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('すごい'),\n            className: \"side-btn\",\n            children: \"\\u3059\\u3054\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('がんばれ'),\n            className: \"side-btn\",\n            children: \"\\u304C\\u3093\\u3070\\u308C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('よろしく'),\n            className: \"side-btn\",\n            children: \"\\u3088\\u308D\\u3057\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('お疲れ様'),\n            className: \"side-btn\",\n            children: \"\\u304A\\u75B2\\u308C\\u69D8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('いいお天気'),\n            className: \"side-btn\",\n            children: \"\\u3044\\u3044\\u304A\\u5929\\u6C17\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('暑いですね'),\n            className: \"side-btn\",\n            children: \"\\u6691\\u3044\\u3067\\u3059\\u306D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('寒いですね'),\n            className: \"side-btn\",\n            children: \"\\u5BD2\\u3044\\u3067\\u3059\\u306D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('楽しい'),\n            className: \"side-btn\",\n            children: \"\\u697D\\u3057\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('面白い'),\n            className: \"side-btn\",\n            children: \"\\u9762\\u767D\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('すてき'),\n            className: \"side-btn\",\n            children: \"\\u3059\\u3066\\u304D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('かわいい'),\n            className: \"side-btn\",\n            children: \"\\u304B\\u308F\\u3044\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('かっこいい'),\n            className: \"side-btn\",\n            children: \"\\u304B\\u3063\\u3053\\u3044\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend('また明日'),\n            className: \"side-btn\",\n            children: \"\\u307E\\u305F\\u660E\\u65E5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn ai-btn\",\n        children: \"\\uD83E\\uDD16 AI\\u3067\\u3044\\u3042\\u3093ON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn mic-btn\",\n        id: \"micBtn\",\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn manual-btn\",\n        id: \"manualBtn\",\n        children: \"\\uD83D\\uDCCB \\u30DE\\u30CB\\u30E5\\u30A2\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn greeting-btn\",\n        id: \"languageBtn\",\n        children: \"\\uD83D\\uDC4B \\u306B\\u307B\\u3093\\u3054\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 740,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"W9C4A4VUAixX9foUwHQ1OcK6ZYI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","nowInSec","SkyWayAuthToken","SkyWayContext","SkyWayRoom","SkyWayStreamFactory","uuidV4","LocalP2PRoomMember","jsxDEV","_jsxDEV","Home","setIsLoggedIn","_s","roomName","setRoomName","me","setMe","skywayContext","setSkywayContext","skywayRoom","setSkywayRoom","remoteVideoElements","Map","robotDisplayRef","localStreamRef","receivedMessages","setReceivedMessages","handleLogout","appId","secretKey","token","undefined","jti","iat","exp","version","scope","rooms","name","methods","member","turn","enabled","encode","currentContext","initContext","Create","console","log","error","dispose","attachRemoteStream","stream","memberId","current","video","document","createElement","autoplay","playsInline","className","dataset","attach","appendChild","set","handleJoinRoom","warn","room","FindOrCreate","type","Error","localMember","join","id","audio","createMicrophoneAudioAndCameraStream","publish","publication","publications","publisher","subscribe","subscribeError","onMemberJoined","add","e","onMemberLeft","videoElement","get","removeChild","delete","onStreamPublished","onStreamUnpublished","onDataPublished","data","prevMessages","senderId","message","Array","from","children","forEach","child","tagName","clear","stop","handleLeaveRoom","leave","close","handleSend","sendData","isLocal","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","target","disabled","ref","length","map","msg","index","substring","_c","$RefreshReg$"],"sources":["C:/banpaku_2025/banpaku/src/home.js"],"sourcesContent":["\r\n\r\n\r\n// import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\n// import './style.css';\r\n// import {\r\n//   nowInSec,\r\n//   SkyWayAuthToken,\r\n//   SkyWayContext,\r\n//   SkyWayRoom,\r\n//   SkyWayStreamFactory,\r\n//   uuidV4,\r\n//   LocalP2PRoomMember,\r\n// } from '@skyway-sdk/room';\r\n\r\n// /**\r\n//  * ホーム画面コンポーネント\r\n//  * @param {object} props - プロパティ\r\n//  * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n//  */\r\n// function Home({ setIsLoggedIn }) {\r\n//   // ルーム名\r\n//   const [roomName, setRoomName] = useState(\"\");\r\n//   // 自分の参加者情報 (ルームに参加すると設定されます)\r\n//   const [me, setMe] = useState(null);\r\n//   // SkyWayコンテキストのインスタンス\r\n//   const [skywayContext, setSkywayContext] = useState(null);\r\n//   // SkyWayルームのインスタンス\r\n//   const [skywayRoom, setSkywayRoom] = useState(null);\r\n//   // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\r\n//   const remoteVideoElements = useRef(new Map());\r\n//   // リモートビデオを表示するDOM要素への参照\r\n//   const robotDisplayRef = useRef(null);\r\n//   // ローカルストリームの参照を保持\r\n//   const localStreamRef = useRef(null);\r\n\r\n\r\n//   /**\r\n//    * ログアウトボタンクリック時のハンドラ\r\n//    */\r\n//   const handleLogout = () => {\r\n//     setIsLoggedIn(false); // ログイン状態をfalseに設定\r\n//   };\r\n\r\n//   // SkyWay App ID と Secret Key\r\n//   // 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\r\n//   // サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\r\n//   const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\r\n//   const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\r\n\r\n//   // SkyWay認証トークンの生成\r\n//   const token = useMemo(() => {\r\n//     if (appId == null || secretKey == null) return undefined;\r\n\r\n//     return new SkyWayAuthToken({\r\n//       jti: uuidV4(), // JWT ID\r\n//       iat: nowInSec(), // 発行時刻\r\n//       exp: nowInSec() + 60 * 60 * 24, // 有効期限 (24時間)\r\n//       version: 3,\r\n//       scope: {\r\n//         appId: appId,\r\n//         rooms: [\r\n//           {\r\n//             name: \"*\", // すべてのルーム名に適用\r\n//             methods: [\"create\", \"close\", \"updateMetadata\"], // ルーム操作の権限\r\n//             member: {\r\n//               name: \"*\", // すべてのメンバーに適用\r\n//               methods: [\"publish\", \"subscribe\", \"updateMetadata\"] // メンバー操作の権限\r\n//             }\r\n//           }],\r\n//         turn: {\r\n//           enabled: true // TURNサーバーの使用を許可 (NAT越えのため)\r\n//         }\r\n//       }\r\n//     }).encode(secretKey);\r\n\r\n//   }, [appId, secretKey]);\r\n\r\n//   /**\r\n//    * SkyWayContextの初期化とクリーンアップを行うuseEffect\r\n//    * トークンが利用可能になったときに一度だけ実行されます。\r\n//    */\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n\r\n//     let currentContext;\r\n//     const initContext = async () => {\r\n//       try {\r\n//         currentContext = await SkyWayContext.Create(token);\r\n//         setSkywayContext(currentContext);\r\n//         console.log(\"SkyWayContext created successfully.\");\r\n//       } catch (error) {\r\n//         console.error(\"Failed to create SkyWayContext:\", error);\r\n//       }\r\n//     };\r\n\r\n//     initContext();\r\n\r\n//     // コンポーネントのアンマウント時にコンテキストを破棄\r\n//     return () => {\r\n//       if (currentContext) {\r\n//         currentContext.dispose();\r\n//         console.log(\"SkyWayContext disposed.\");\r\n//       }\r\n//     };\r\n//   }, [token]); // tokenが変更されたときにのみ実行\r\n\r\n//   /**\r\n//    * リモートストリームをDOMに追加するヘルパー関数\r\n//    * @param {MediaStream} stream - 追加するメディアストリーム\r\n//    * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n//    */\r\n//   const attachRemoteStream = (stream, memberId) => {\r\n//     if (robotDisplayRef.current) {\r\n//       const video = document.createElement(\"video\");\r\n//       video.autoplay = true; // 自動再生\r\n//       video.playsInline = true; // インライン再生 (iOSなどで必要)\r\n//       video.className = \"remote-video\"; // スタイリング用のクラス\r\n//       video.dataset.memberId = memberId; // メンバーIDをデータ属性に保存\r\n//       stream.attach(video); // ストリームをビデオ要素のソースに設定\r\n//       robotDisplayRef.current.appendChild(video);\r\n//       remoteVideoElements.current.set(memberId, video);\r\n//       console.log(`Attached stream from ${memberId} to DOM.`);\r\n//     }\r\n//   };\r\n\r\n//   /**\r\n//    * ルームに参加するハンドラ\r\n//    * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\r\n//    */\r\n//   const handleJoinRoom = async () => {\r\n//     if (!skywayContext) {\r\n//       console.error(\"SkyWayContext is not initialized. Please wait or check token.\");\r\n//       return;\r\n//     }\r\n//     if (!roomName) {\r\n//       console.error(\"Room name is empty. Please enter a room name to join.\");\r\n//       return;\r\n//     }\r\n//     if (skywayRoom && me) {\r\n//       console.warn(\"Already in a room. Please leave the current room first.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       // 指定されたルーム名でP2Pルームを作成または検索\r\n//       const room = await SkyWayRoom.FindOrCreate(skywayContext, {\r\n//         type: \"p2p\", // P2Pルームタイプ\r\n//         name: roomName,\r\n//       });\r\n//       setSkywayRoom(room);\r\n//       console.log(`SkyWayRoom '${roomName}' found or created.`);\r\n\r\n//       // ルームに参加し、自分のメンバー情報を取得\r\n//       const localMember = await room.join();\r\n//       setMe(localMember);\r\n//       console.log(`Joined room '${roomName}' as member ID: ${localMember.id}`);\r\n\r\n//       // 自分のカメラとマイクのストリームを作成し、公開\r\n//       const { audio, video } = await SkyWayStreamFactory.createMicrophoneAudioAndCameraStream();\r\n//       localStreamRef.current = video; // ローカルストリームを保存\r\n//       await localMember.publish(video);\r\n//       await localMember.publish(audio);\r\n//       console.log(\"Published local camera and microphone stream.\");\r\n\r\n//       // --- 既存のストリームを購読するロジック (ここが追加・修正された部分) ---\r\n//       // ルーム内の既存の公開ストリームをすべて購読する\r\n//       for (const publication of room.publications) {\r\n//         // 自分のストリームは購読しない\r\n//         if (localMember.id === publication.publisher.id) {\r\n//           continue;\r\n//         }\r\n//         try {\r\n//           const { stream } = await localMember.subscribe(publication.id);\r\n//           console.log(`Subscribed to existing stream from ${publication.publisher.id}`);\r\n//           attachRemoteStream(stream, publication.publisher.id);\r\n//         } catch (subscribeError) {\r\n//           console.error(`Failed to subscribe to existing stream from ${publication.publisher.id}:`, subscribeError);\r\n//         }\r\n//       }\r\n\r\n//       // --- ルームイベントリスナーの設定 ---\r\n\r\n//       // メンバーがルームに参加したときのイベント\r\n//       room.onMemberJoined.add((e) => {\r\n//         console.log(`Member joined: ${e.member.id}`);\r\n//       });\r\n\r\n//       // メンバーがルームを離脱したときのイベント\r\n//       room.onMemberLeft.add((e) => {\r\n//         console.log(`Member left: ${e.member.id}`);\r\n//         // 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\r\n//         const videoElement = remoteVideoElements.current.get(e.member.id);\r\n//         if (videoElement && robotDisplayRef.current) {\r\n//           robotDisplayRef.current.removeChild(videoElement);\r\n//           remoteVideoElements.current.delete(e.member.id);\r\n//           console.log(`Removed video for member ${e.member.id}`);\r\n//         }\r\n//       });\r\n\r\n//       // ストリームが公開されたときのイベント\r\n//       room.onStreamPublished.add(async (e) => {\r\n//         console.log(`Stream published by ${e.publication.publisher.id}`);\r\n//         // 自分のストリームは購読しない\r\n//         if (localMember.id !== e.publication.publisher.id) {\r\n//           try {\r\n//             // リモートストリームを購読\r\n//             const { stream } = await localMember.subscribe(e.publication.id);\r\n//             console.log(`Subscribed to stream from ${e.publication.publisher.id}`);\r\n//             attachRemoteStream(stream, e.publication.publisher.id);\r\n//           } catch (subscribeError) {\r\n//             console.error(`Failed to subscribe to stream from ${e.publication.publisher.id}:`, subscribeError);\r\n//           }\r\n//         } else {\r\n//           console.log(`Skipping subscription for own stream: ${e.publication.publisher.id}`);\r\n//         }\r\n//       });\r\n\r\n//       // ストリームが非公開になったときのイベント\r\n//       room.onStreamUnpublished.add((e) => {\r\n//         console.log(`Stream unpublished by ${e.publication.publisher.id}`);\r\n//         // 該当ストリームのビデオ要素をDOMから削除し、Mapからも削除\r\n//         const videoElement = remoteVideoElements.current.get(e.publication.publisher.id);\r\n//         if (videoElement && robotDisplayRef.current) {\r\n//           robotDisplayRef.current.removeChild(videoElement);\r\n//           remoteVideoElements.current.delete(e.publication.publisher.id);\r\n//           console.log(`Removed unpublished video for member ${e.publication.publisher.id}`);\r\n//         }\r\n//       });\r\n\r\n//     } catch (error) {\r\n//       console.error(\"Failed to join room:\", error);\r\n//       // エラー発生時に状態をリセットして再試行可能にする\r\n//       setSkywayRoom(null);\r\n//       setMe(null);\r\n//       // エラー時に既存のビデオ要素をクリーンアップ\r\n//       if (robotDisplayRef.current) {\r\n//         Array.from(robotDisplayRef.current.children).forEach(child => {\r\n//           if (child.tagName === 'VIDEO') {\r\n//             robotDisplayRef.current.removeChild(child);\r\n//           }\r\n//         });\r\n//       }\r\n//       remoteVideoElements.current.clear();\r\n//       if (localStreamRef.current) {\r\n//         localStreamRef.current.stop(); // ローカルストリームを停止\r\n//         localStreamRef.current = null;\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   /**\r\n//    * ルームから退出するハンドラ\r\n//    */\r\n//   const handleLeaveRoom = async () => {\r\n//     if (skywayRoom && me) {\r\n//       try {\r\n//         // ローカルストリームを停止し、公開を解除\r\n//         if (localStreamRef.current) {\r\n//           localStreamRef.current.stop();\r\n//           localStreamRef.current = null;\r\n//           console.log(\"Stopped local stream.\");\r\n//         }\r\n//         await me.leave(); // ルームから退出\r\n//         console.log(`Left room '${roomName}'`);\r\n//         skywayRoom.close(); // ルームを閉じる (これはルームの作成者のみが効果的です)\r\n//         console.log(\"SkyWay Room closed.\");\r\n//       } catch (error) {\r\n//         console.error(\"Failed to leave room:\", error);\r\n//       } finally {\r\n//         // 状態をリセット\r\n//         setMe(null);\r\n//         setSkywayRoom(null);\r\n//         // すべてのリモートビデオ要素をDOMから削除\r\n//         if (robotDisplayRef.current) {\r\n//           Array.from(robotDisplayRef.current.children).forEach(child => {\r\n//             if (child.tagName === 'VIDEO') {\r\n//               robotDisplayRef.current.removeChild(child);\r\n//             }\r\n//           });\r\n//         }\r\n//         remoteVideoElements.current.clear();\r\n//       }\r\n//     }\r\n//   };\r\n//   //モーションを操作するボタンを押した時の処理\r\n//   const  handleSend = async () => {\r\n\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"header\">\r\n//         <div className=\"header-left\">\r\n//           <button className=\"motion-btn\">モーション</button>\r\n//           <span className=\"robot-status\">\r\n//             操作しているロボット：RX78-myakumyaku\r\n//           </span>\r\n//         </div>\r\n//         <div className=\"header-right\">\r\n//           <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\r\n//           <button className=\"voice-btn\">ボイス</button>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"main-container\">\r\n//         <div className=\"side-panel\">\r\n//           <div className=\"side-panel-content\">\r\n//             <button onClick={handleSend} className=\"side-btn\">こんにちは</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">バイバイ</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">ペコリ</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">バタバタ</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">うえをむく</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">したをむく</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">みぎをむく</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">ひだりをむく</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">うなずく</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">かしげる</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">まわる</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">ジャンプ</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">ダンス</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">おじぎ</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">きをつけ</button>\r\n//             <button onClick={handleSend} className=\"side-btn\">休め</button>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"main-area\">\r\n//           <div className=\"room-controls\">\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"ルーム名を入力\"\r\n//               value={roomName}\r\n//               onChange={(e) => setRoomName(e.target.value)}\r\n//               className=\"room-input\"\r\n//               disabled={!!me} // ルーム参加中は入力不可にする\r\n//             />\r\n//             {!me ? ( // ルームに参加していない場合\r\n//               <button onClick={handleJoinRoom} className=\"join-room-btn\" disabled={!skywayContext || !roomName}>\r\n//                 ルームに参加\r\n//               </button>\r\n//             ) : ( // ルームに参加している場合\r\n//               <button onClick={handleLeaveRoom} className=\"leave-room-btn\">\r\n//                 ルームを退出\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//           <div className=\"robot-display\" ref={robotDisplayRef}>\r\n//             {/* リモートのビデオストリームがここに動的に追加されます */}\r\n//             {me ? (\r\n//               <div className=\"room-info\">\r\n//                 ルームID: {roomName} / 自分のID: {me.id}\r\n//               </div>\r\n//             ) : (\r\n//               <p>ルームに参加してください</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"side-panel right\">\r\n//           <div className=\"side-panel-content\">\r\n//             <button className=\"side-btn\">こんにちは</button>\r\n//             <button className=\"side-btn\">どこからきたの？</button>\r\n//             <button className=\"side-btn\">バイバイ</button>\r\n//             <button className=\"side-btn\">○○していますか？</button>\r\n//             <button className=\"side-btn\">ありがとう</button>\r\n//             <button className=\"side-btn\">いいね</button>\r\n//             <button className=\"side-btn\">おおきに</button>\r\n//             <button className=\"side-btn\">すごい</button>\r\n//             <button className=\"side-btn\">がんばれ</button>\r\n//             <button className=\"side-btn\">よろしく</button>\r\n//             <button className=\"side-btn\">お疲れ様</button>\r\n//             <button className=\"side-btn\">いいお天気</button>\r\n//             <button className=\"side-btn\">暑いですね</button>\r\n//             <button className=\"side-btn\">寒いですね</button>\r\n//             <button className=\"side-btn\">楽しい</button>\r\n//             <button className=\"side-btn\">面白い</button>\r\n//             <button className=\"side-btn\">すてき</button>\r\n//             <button className=\"side-btn\">かわいい</button>\r\n//             <button className=\"side-btn\">かっこいい</button>\r\n//             <button className=\"side-btn\">また明日</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"bottom-controls\">\r\n//         <button className=\"control-btn ai-btn\">🤖 AIでいあんON</button>\r\n//         <button className=\"control-btn mic-btn\" id=\"micBtn\">\r\n//           🎤\r\n//         </button>\r\n//         <button className=\"control-btn manual-btn\" id=\"manualBtn\">\r\n//           📋 マニュアル\r\n//         </button>\r\n//         <button className=\"control-btn greeting-btn\" id=\"languageBtn\">\r\n//           👋 にほんご\r\n//         </button>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Home;\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport './style.css'; // style.cssを再度有効化\r\nimport {\r\n  nowInSec,\r\n  SkyWayAuthToken,\r\n  SkyWayContext,\r\n  SkyWayRoom,\r\n  SkyWayStreamFactory,\r\n  uuidV4,\r\n  LocalP2PRoomMember,\r\n} from '@skyway-sdk/room';\r\n\r\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\r\nfunction Home({ setIsLoggedIn }) {\r\n  // ルーム名\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  // 自分の参加者情報 (ルームに参加すると設定されます)\r\n  const [me, setMe] = useState(null);\r\n  // SkyWayコンテキストのインスタンス\r\n  const [skywayContext, setSkywayContext] = useState(null);\r\n  // SkyWayルームのインスタンス\r\n  const [skywayRoom, setSkywayRoom] = useState(null);\r\n  // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\r\n  const remoteVideoElements = useRef(new Map());\r\n  // リモートビデオを表示するDOM要素への参照\r\n  const robotDisplayRef = useRef(null);\r\n  // ローカルストリームの参照を保持\r\n  const localStreamRef = useRef(null);\r\n  // 受信したメッセージを表示するための状態\r\n  const [receivedMessages, setReceivedMessages] = useState([]);\r\n\r\n\r\n  /**\r\n   * ログアウトボタンクリック時のハンドラ\r\n   */\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false); // ログイン状態をfalseに設定\r\n  };\r\n\r\n  // SkyWay App ID と Secret Key\r\n  // 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\r\n  // サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\r\n  const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\r\n  const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\r\n\r\n  // SkyWay認証トークンの生成\r\n  const token = useMemo(() => {\r\n    if (appId == null || secretKey == null) return undefined;\r\n\r\n    return new SkyWayAuthToken({\r\n      jti: uuidV4(), // JWT ID\r\n      iat: nowInSec(), // 発行時刻\r\n      exp: nowInSec() + 60 * 60 * 24, // 有効期限 (24時間)\r\n      version: 3,\r\n      scope: {\r\n        appId: appId,\r\n        rooms: [\r\n          {\r\n            name: \"*\", // すべてのルーム名に適用\r\n            methods: [\"create\", \"close\", \"updateMetadata\"], // ルーム操作の権限\r\n            member: {\r\n              name: \"*\", // すべてのメンバーに適用\r\n              methods: [\"publish\", \"subscribe\", \"updateMetadata\"] // メンバー操作の権限\r\n            }\r\n          }],\r\n        turn: {\r\n          enabled: true // TURNサーバーの使用を許可 (NAT越えのため)\r\n        }\r\n      }\r\n    }).encode(secretKey);\r\n\r\n  }, [appId, secretKey]);\r\n\r\n  /**\r\n   * SkyWayContextの初期化とクリーンアップを行うuseEffect\r\n   * トークンが利用可能になったときに一度だけ実行されます。\r\n   */\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    let currentContext;\r\n    const initContext = async () => {\r\n      try {\r\n        currentContext = await SkyWayContext.Create(token);\r\n        setSkywayContext(currentContext);\r\n        console.log(\"SkyWayContext created successfully.\");\r\n      } catch (error) {\r\n        console.error(\"Failed to create SkyWayContext:\", error);\r\n      }\r\n    };\r\n\r\n    initContext();\r\n\r\n    // コンポーネントのアンマウント時にコンテキストを破棄\r\n    return () => {\r\n      if (currentContext) {\r\n        currentContext.dispose();\r\n        console.log(\"SkyWayContext disposed.\");\r\n      }\r\n    };\r\n  }, [token]); // tokenが変更されたときにのみ実行\r\n\r\n  /**\r\n   * リモートストリームをDOMに追加するヘルパー関数\r\n   * @param {MediaStream} stream - 追加するメディアストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\r\n  const attachRemoteStream = (stream, memberId) => {\r\n    if (robotDisplayRef.current) {\r\n      const video = document.createElement(\"video\");\r\n      video.autoplay = true; // 自動再生\r\n      video.playsInline = true; // インライン再生 (iOSなどで必要)\r\n      video.className = \"remote-video\"; // スタイリング用のクラス\r\n      video.dataset.memberId = memberId; // メンバーIDをデータ属性に保存\r\n      stream.attach(video); // ストリームをビデオ要素のソースに設定\r\n      robotDisplayRef.current.appendChild(video);\r\n      remoteVideoElements.current.set(memberId, video);\r\n      console.log(`Attached stream from ${memberId} to DOM.`);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ルームに参加するハンドラ\r\n   * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\r\n   */\r\n  const handleJoinRoom = async () => {\r\n    if (!skywayContext) {\r\n      console.error(\"SkyWayContext is not initialized. Please wait or check token.\");\r\n      return;\r\n    }\r\n    if (!roomName) {\r\n      console.error(\"Room name is empty. Please enter a room name to join.\");\r\n      return;\r\n    }\r\n    if (skywayRoom && me) {\r\n      console.warn(\"Already in a room. Please leave the current room first.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 指定されたルーム名でP2Pルームを作成または検索\r\n      const room = await SkyWayRoom.FindOrCreate(skywayContext, {\r\n        type: \"p2p\", // P2Pルームタイプ\r\n        name: roomName,\r\n      });\r\n\r\n      // roomオブジェクトが有効であることを確認\r\n      if (!room) {\r\n        console.error(\"SkyWayRoom.FindOrCreate returned null or undefined room.\");\r\n        throw new Error(\"Failed to create or find SkyWayRoom.\");\r\n      }\r\n\r\n      setSkywayRoom(room);\r\n      console.log(`SkyWayRoom '${roomName}' found or created.`);\r\n\r\n      // ルームに参加し、自分のメンバー情報を取得\r\n      const localMember = await room.join();\r\n      // localMemberが有効であることを確認\r\n      if (!localMember) {\r\n        console.error(\"room.join() returned null or undefined localMember.\");\r\n        throw new Error(\"Failed to join the room.\");\r\n      }\r\n      setMe(localMember);\r\n      console.log(`Joined room '${roomName}' as member ID: ${localMember.id}`);\r\n\r\n      // 自分のカメラとマイクのストリームを作成し、公開\r\n      const { audio, video } = await SkyWayStreamFactory.createMicrophoneAudioAndCameraStream();\r\n      localStreamRef.current = video; // ローカルストリームを保存\r\n      await localMember.publish(video);\r\n      await localMember.publish(audio);\r\n      console.log(\"Published local camera and microphone stream.\");\r\n\r\n      // --- 既存のストリームを購読するロジック ---\r\n      // ルーム内の既存の公開ストリームをすべて購読する\r\n      for (const publication of room.publications) {\r\n        // 自分のストリームは購読しない\r\n        if (localMember.id === publication.publisher.id) {\r\n          continue;\r\n        }\r\n        try {\r\n          const { stream } = await localMember.subscribe(publication.id);\r\n          console.log(`Subscribed to existing stream from ${publication.publisher.id}`);\r\n          attachRemoteStream(stream, publication.publisher.id);\r\n        } catch (subscribeError) {\r\n          console.error(`Failed to subscribe to existing stream from ${publication.publisher.id}:`, subscribeError);\r\n        }\r\n      }\r\n\r\n      // --- ルームイベントリスナーの設定 ---\r\n\r\n      // メンバーがルームに参加したときのイベント\r\n      if (room.onMemberJoined) {\r\n        room.onMemberJoined.add((e) => {\r\n          console.log(`Member joined: ${e.member.id}`);\r\n        });\r\n      }\r\n      // else ブロックは削除されました\r\n\r\n      // メンバーがルームを離脱したときのイベント\r\n      if (room.onMemberLeft) {\r\n        room.onMemberLeft.add((e) => {\r\n          console.log(`Member left: ${e.member.id}`);\r\n          // 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\r\n          const videoElement = remoteVideoElements.current.get(e.member.id);\r\n          if (videoElement && robotDisplayRef.current) {\r\n            robotDisplayRef.current.removeChild(videoElement);\r\n            remoteVideoElements.current.delete(e.member.id);\r\n            console.log(`Removed video for member ${e.member.id}`);\r\n          }\r\n        });\r\n      }\r\n      // else ブロックは削除されました\r\n\r\n      // ストリームが公開されたときのイベント\r\n      if (room.onStreamPublished) {\r\n        room.onStreamPublished.add(async (e) => {\r\n          console.log(`Stream published by ${e.publication.publisher.id}`);\r\n          // 自分のストリームは購読しない\r\n          if (localMember.id !== e.publication.publisher.id) {\r\n            try {\r\n              // リモートストリームを購読\r\n              const { stream } = await localMember.subscribe(e.publication.id);\r\n              console.log(`Subscribed to stream from ${e.publication.publisher.id}`);\r\n              attachRemoteStream(stream, e.publication.publisher.id);\r\n            } catch (subscribeError) {\r\n              console.error(`Failed to subscribe to stream from ${e.publication.publisher.id}:`, subscribeError);\r\n            }\r\n          } else {\r\n            console.log(`Skipping subscription for own stream: ${e.publication.publisher.id}`);\r\n          }\r\n        });\r\n      }\r\n      // else ブロックは削除されました\r\n\r\n      // ストリームが非公開になったときのイベント\r\n      if (room.onStreamUnpublished) {\r\n        room.onStreamUnpublished.add((e) => {\r\n          console.log(`Stream unpublished by ${e.publication.publisher.id}`);\r\n          // 該当ストリームのビデオ要素をDOMから削除し、Mapからも削除\r\n          const videoElement = remoteVideoElements.current.get(e.publication.publisher.id);\r\n          if (videoElement && robotDisplayRef.current) {\r\n            robotDisplayRef.current.removeChild(videoElement);\r\n            remoteVideoElements.current.delete(e.publication.publisher.id);\r\n            console.log(`Removed unpublished video for member ${e.publication.publisher.id}`);\r\n          }\r\n        });\r\n      }\r\n      // else ブロックは削除されました\r\n\r\n      // データが公開されたときのイベント\r\n      if (room.onDataPublished) {\r\n        room.onDataPublished.add((e) => {\r\n          console.log(`Data published by ${e.publication.publisher.id}:`, e.data);\r\n          // 受信したメッセージを状態に追加\r\n          setReceivedMessages(prevMessages => [...prevMessages, { senderId: e.publication.publisher.id, message: e.data }]);\r\n        });\r\n      }\r\n      // else ブロックは削除されました\r\n\r\n    } catch (error) {\r\n      console.error(\"Failed to join room:\", error);\r\n      // エラー発生時に状態をリセットして再試行可能にする\r\n      setSkywayRoom(null);\r\n      setMe(null);\r\n      // エラー時に既存のビデオ要素をクリーンアップ\r\n      if (robotDisplayRef.current) {\r\n        Array.from(robotDisplayRef.current.children).forEach(child => {\r\n          if (child.tagName === 'VIDEO') {\r\n            robotDisplayRef.current.removeChild(child);\r\n          }\r\n        });\r\n      }\r\n      remoteVideoElements.current.clear();\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.stop(); // ローカルストリームを停止\r\n        localStreamRef.current = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ルームから退出するハンドラ\r\n   */\r\n  const handleLeaveRoom = async () => {\r\n    if (skywayRoom && me) {\r\n      try {\r\n        // ローカルストリームを停止し、公開を解除\r\n        if (localStreamRef.current) {\r\n          localStreamRef.current.stop();\r\n          localStreamRef.current = null;\r\n          console.log(\"Stopped local stream.\");\r\n        }\r\n        await me.leave(); // ルームから退出\r\n        console.log(`Left room '${roomName}'`);\r\n        skywayRoom.close(); // ルームを閉じる (これはルームの作成者のみが効果的です)\r\n        console.log(\"SkyWay Room closed.\");\r\n      } catch (error) {\r\n        console.error(\"Failed to leave room:\", error);\r\n      } finally {\r\n        // 状態をリセット\r\n        setMe(null);\r\n        setSkywayRoom(null);\r\n        setReceivedMessages([]); // 受信メッセージもクリア\r\n        // すべてのリモートビデオ要素をDOMから削除\r\n        if (robotDisplayRef.current) {\r\n          Array.from(robotDisplayRef.current.children).forEach(child => {\r\n            if (child.tagName === 'VIDEO') {\r\n              robotDisplayRef.current.removeChild(child);\r\n            }\r\n          });\r\n        }\r\n        remoteVideoElements.current.clear();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * モーションを操作するボタンを押した時の処理\r\n   * @param {string} message - 送信するメッセージ (ボタンのテキスト)\r\n   */\r\n  const handleSend = async (message) => {\r\n    if (me && skywayRoom) {\r\n      try {\r\n        // me.sendData() を使用してデータを送信\r\n        await me.sendData({ data: message });\r\n        console.log(`Sent message: \"${message}\"`);\r\n        // 送信したメッセージも自身の画面に表示\r\n        setReceivedMessages(prevMessages => [...prevMessages, { senderId: me.id, message: message, isLocal: true }]);\r\n      } catch (error) {\r\n        console.error(\"Failed to send data:\", error);\r\n      }\r\n    } else {\r\n      console.warn(\"Cannot send message: Not in a room or 'me' object is not available.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col font-inter\">\r\n      <div className=\"header\">\r\n        <div className=\"header-left\">\r\n          <button className=\"motion-btn\">モーション</button>\r\n          <span className=\"robot-status\">\r\n            操作しているロボット：RX78-myakumyaku\r\n          </span>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\r\n          <button className=\"voice-btn\">ボイス</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-container\">\r\n        <div className=\"side-panel\">\r\n          <div className=\"side-panel-content\">\r\n            <button onClick={() => handleSend('こんにちは')} className=\"side-btn\">こんにちは</button>\r\n            <button onClick={() => handleSend('バイバイ')} className=\"side-btn\">バイバイ</button>\r\n            <button onClick={() => handleSend('ペコリ')} className=\"side-btn\">ペコリ</button>\r\n            <button onClick={() => handleSend('バタバタ')} className=\"side-btn\">バタバタ</button>\r\n            <button onClick={() => handleSend('うえをむく')} className=\"side-btn\">うえをむく</button>\r\n            <button onClick={() => handleSend('したをむく')} className=\"side-btn\">したをむく</button>\r\n            <button onClick={() => handleSend('みぎをむく')} className=\"side-btn\">みぎをむく</button>\r\n            <button onClick={() => handleSend('ひだりをむく')} className=\"side-btn\">ひだりをむく</button>\r\n            <button onClick={() => handleSend('うなずく')} className=\"side-btn\">うなずく</button>\r\n            <button onClick={() => handleSend('かしげる')} className=\"side-btn\">かしげる</button>\r\n            <button onClick={() => handleSend('まわる')} className=\"side-btn\">まわる</button>\r\n            <button onClick={() => handleSend('ジャンプ')} className=\"side-btn\">ジャンプ</button>\r\n            <button onClick={() => handleSend('ダンス')} className=\"side-btn\">ダンス</button>\r\n            <button onClick={() => handleSend('おじぎ')} className=\"side-btn\">おじぎ</button>\r\n            <button onClick={() => handleSend('きをつけ')} className=\"side-btn\">きをつけ</button>\r\n            <button onClick={() => handleSend('休め')} className=\"side-btn\">休め</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"main-area\">\r\n          <div className=\"room-controls\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"ルーム名を入力\"\r\n              value={roomName}\r\n              onChange={(e) => setRoomName(e.target.value)}\r\n              className=\"room-input\"\r\n              disabled={!!me} // ルーム参加中は入力不可にする\r\n            />\r\n            {!me ? ( // ルームに参加していない場合\r\n              <button onClick={handleJoinRoom} className=\"join-room-btn\" disabled={!skywayContext || !roomName}>\r\n                ルームに参加\r\n              </button>\r\n            ) : ( // ルームに参加している場合\r\n              <button onClick={handleLeaveRoom} className=\"leave-room-btn\">\r\n                ルームを退出\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className=\"robot-display\" ref={robotDisplayRef}>\r\n            {/* リモートのビデオストリームがここに動的に追加されます */}\r\n            {me ? (\r\n              <div className=\"room-info\">\r\n                ルームID: {roomName} / 自分のID: {me.id}\r\n              </div>\r\n            ) : (\r\n              <p>ルームに参加してください</p>\r\n            )}\r\n            {/* 受信メッセージ表示 */}\r\n            <div className=\"received-messages-display\">\r\n              <h3>受信メッセージ:</h3>\r\n              {receivedMessages.length === 0 ? (\r\n                <p>メッセージはありません</p>\r\n              ) : (\r\n                <ul>\r\n                  {receivedMessages.map((msg, index) => (\r\n                    <li key={index} className={msg.isLocal ? 'local-message' : 'remote-message'}>\r\n                      <strong>{msg.isLocal ? '自分' : msg.senderId.substring(0, 8)}:</strong> {msg.message}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"side-panel right\">\r\n          <div className=\"side-panel-content\">\r\n            <button onClick={() => handleSend('こんにちは')} className=\"side-btn\">こんにちは</button>\r\n            <button onClick={() => handleSend('どこからきたの？')} className=\"side-btn\">どこからきたの？</button>\r\n            <button onClick={() => handleSend('バイバイ')} className=\"side-btn\">バイバイ</button>\r\n            <button onClick={() => handleSend('○○していますか？')} className=\"side-btn\">○○していますか？</button>\r\n            <button onClick={() => handleSend('ありがとう')} className=\"side-btn\">ありがとう</button>\r\n            <button onClick={() => handleSend('いいね')} className=\"side-btn\">いいね</button>\r\n            <button onClick={() => handleSend('おおきに')} className=\"side-btn\">おおきに</button>\r\n            <button onClick={() => handleSend('すごい')} className=\"side-btn\">すごい</button>\r\n            <button onClick={() => handleSend('がんばれ')} className=\"side-btn\">がんばれ</button>\r\n            <button onClick={() => handleSend('よろしく')} className=\"side-btn\">よろしく</button>\r\n            <button onClick={() => handleSend('お疲れ様')} className=\"side-btn\">お疲れ様</button>\r\n            <button onClick={() => handleSend('いいお天気')} className=\"side-btn\">いいお天気</button>\r\n            <button onClick={() => handleSend('暑いですね')} className=\"side-btn\">暑いですね</button>\r\n            <button onClick={() => handleSend('寒いですね')} className=\"side-btn\">寒いですね</button>\r\n            <button onClick={() => handleSend('楽しい')} className=\"side-btn\">楽しい</button>\r\n            <button onClick={() => handleSend('面白い')} className=\"side-btn\">面白い</button>\r\n            <button onClick={() => handleSend('すてき')} className=\"side-btn\">すてき</button>\r\n            <button onClick={() => handleSend('かわいい')} className=\"side-btn\">かわいい</button>\r\n            <button onClick={() => handleSend('かっこいい')} className=\"side-btn\">かっこいい</button>\r\n            <button onClick={() => handleSend('また明日')} className=\"side-btn\">また明日</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom-controls\">\r\n        <button className=\"control-btn ai-btn\">🤖 AIでいあんON</button>\r\n        <button className=\"control-btn mic-btn\" id=\"micBtn\">\r\n          🎤\r\n        </button>\r\n        <button className=\"control-btn manual-btn\" id=\"manualBtn\">\r\n          📋 マニュアル\r\n        </button>\r\n        <button className=\"control-btn greeting-btn\" id=\"languageBtn\">\r\n          👋 にほんご\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnE,OAAO,aAAa,CAAC,CAAC;AACtB,SACEC,QAAQ,EACRC,eAAe,EACfC,aAAa,EACbC,UAAU,EACVC,mBAAmB,EACnBC,MAAM,EACNC,kBAAkB,QACb,kBAAkB;;AAEzB;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,SAASC,IAAIA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA,MAAM,CAACe,EAAE,EAAEC,KAAK,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAClC;EACA,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxD;EACA,MAAM,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}