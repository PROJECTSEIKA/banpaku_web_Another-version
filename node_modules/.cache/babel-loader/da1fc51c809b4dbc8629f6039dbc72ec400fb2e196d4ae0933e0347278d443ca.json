{"ast":null,"code":"var _jsxFileName = \"C:\\\\banpaku_2025\\\\banpaku\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport './style.css'; // style.cssを再度有効化\nimport { nowInSec, SkyWayAuthToken, SkyWayContext, SkyWayRoom, SkyWayStreamFactory, uuidV4, RemoteDataStream,\n// RemoteDataStreamをインポート\nRemoteVideoStream,\n// RemoteVideoStreamをインポート\nRemoteAudioStream,\n// RemoteAudioStreamをインポート\nPublication // Publicationをインポート\n} from '@skyway-sdk/room';\n\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home({\n  setIsLoggedIn\n}) {\n  _s();\n  // ルーム名\n  const [roomName, setRoomName] = useState(\"\");\n  // 自分の参加者情報 (ルームに参加すると設定されます)\n  const [me, setMe] = useState(null);\n  // SkyWayコンテキストのインスタンス\n  const [skywayContext, setSkywayContext] = useState(null);\n  // SkyWayルームのインスタンス\n  const [skywayRoom, setSkywayRoom] = useState(null);\n  // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\n  const remoteVideoElements = useRef(new Map());\n  // リモートビデオを表示するDOM要素への参照\n  const robotDisplayRef = useRef(null);\n  // ローカルストリームの参照を保持\n  const localStreamRef = useRef(null);\n  // オーディオストリームの Publication を保持\n  const audioPublicationRef = useRef(null);\n  // 現在のAIモード\n  const [isAiModeOn, setIsAiModeOn] = useState(false);\n  // マイクミュート状態\n  const [isMuted, setIsMuted] = useState(true);\n  // 音声入力の実行中状態を管理\n  const [isMoveInProgress, setIsMoveInProgress] = useState(false);\n  // AIから提案された候補を管理\n  const [aiSuggestions, setAiSuggestions] = useState([]);\n\n  // SkyWay認証トークンを生成\n  const generateToken = () => {\n    return new SkyWayAuthToken({\n      jti: uuidV4(),\n      iat: nowInSec(),\n      exp: nowInSec() + 60 * 60 * 24,\n      scope: {\n        app: {\n          id: 'b1480f7d-0114-41d5-b664-92e10507a2a6',\n          turn: true,\n          actions: ['read', 'write'],\n          channels: [{\n            id: '*',\n            name: '*',\n            actions: ['read', 'write'],\n            members: [{\n              id: '*',\n              name: '*',\n              actions: ['read', 'write']\n            }],\n            sfuBots: [{\n              actions: ['read', 'write']\n            }]\n          }]\n        }\n      }\n    }).encode();\n  };\n\n  // SkyWay SDKの初期化\n  useEffect(() => {\n    const initSkyWay = async () => {\n      try {\n        const token = generateToken();\n        const context = await SkyWayContext.Create(token);\n        setSkywayContext(context);\n        console.log(\"SkyWay Context created.\");\n      } catch (error) {\n        console.error(\"Failed to create SkyWay context:\", error);\n      }\n    };\n    initSkyWay();\n  }, []);\n\n  // ログイン状態をログアウトに設定\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n\n  // ストリームをDOM要素にアタッチする関数\n  const attachRemoteStream = (stream, memberId) => {\n    // リモートビデオを表示するDOM要素が存在し、かつストリームがメディアストリームの場合のみ処理を実行\n    if (robotDisplayRef.current && (stream instanceof RemoteVideoStream || stream instanceof RemoteAudioStream)) {\n      console.log(`Attaching stream from member ${memberId}.`);\n\n      // 既存のビデオ要素があれば削除\n      const existingVideo = remoteVideoElements.current.get(memberId);\n      if (existingVideo) {\n        console.log(`Removing existing video for member ${memberId}.`);\n        if (existingVideo.srcObject) {\n          // srcObjectをnullにして参照を解放\n          existingVideo.srcObject = null;\n        }\n        existingVideo.remove();\n        remoteVideoElements.current.delete(memberId);\n      }\n      const video = document.createElement('video');\n      video.playsInline = true;\n      video.autoplay = true;\n      video.muted = false; // デフォルトでミュート解除\n      video.classList.add('remote-video', 'object-cover'); // CSSクラスを追加\n      video.dataset.memberId = memberId;\n      stream.attach(video); // ストリームをビデオ要素のソースに設定\n      robotDisplayRef.current.appendChild(video);\n      remoteVideoElements.current.set(memberId, video);\n      console.log(`Successfully attached stream from member ${memberId} to DOM.`);\n    } else {\n      console.warn(`Attempted to attach non-media stream or robotDisplayRef is null for member ${memberId}.`);\n    }\n  };\n\n  // データストリームを処理する関数\n  const handleDataStream = (dataStream, memberId) => {\n    console.log(`Received data stream from member ${memberId}.`);\n    dataStream.onData.add(data => {\n      console.log(`Received data:`, data);\n      // 受け取ったデータをパース\n      try {\n        const parsedData = JSON.parse(data);\n        if (parsedData.type === 'suggestion' && Array.isArray(parsedData.suggestions)) {\n          console.log(\"Received AI suggestions:\", parsedData.suggestions);\n          setAiSuggestions(parsedData.suggestions);\n        } else if (parsedData.type === 'isMoveInProgress') {\n          console.log(\"Received move status:\", parsedData.value);\n          setIsMoveInProgress(parsedData.value);\n        }\n      } catch (error) {\n        console.error(\"Failed to parse received data:\", error);\n      }\n    });\n  };\n\n  // ルームへの参加\n  const handleJoinRoom = async () => {\n    if (!skywayContext || !roomName) {\n      console.error(\"Context or room name is missing.\");\n      return;\n    }\n    console.log(`Joining room: ${roomName}`);\n    try {\n      const room = await SkyWayRoom.FindOrCreate(skywayContext, {\n        name: roomName,\n        type: 'sfu'\n      });\n      setSkywayRoom(room);\n      setMe(room.localPerson);\n      console.log(`Joined room: ${roomName} as member ${room.localPerson.id}`);\n\n      // ルーム内のイベントリスナーを設定\n      // ストリームが公開されたときの処理\n      room.onStreamPublished.add(e => {\n        console.log(`Stream published event for publication ID: ${e.publication.id}`);\n        const {\n          publication\n        } = e;\n        // publication.subscribe()でストリームを購読\n        publication.subscribe().then(stream => {\n          if (stream instanceof RemoteVideoStream || stream instanceof RemoteAudioStream) {\n            console.log(`Subscribed to remote media stream.`);\n            attachRemoteStream(stream, publication.publisher.id);\n          } else if (stream instanceof RemoteDataStream) {\n            console.log(`Subscribed to remote data stream.`);\n            handleDataStream(stream, publication.publisher.id);\n          }\n        }).catch(err => {\n          console.error(`Failed to subscribe to publication ${publication.id}:`, err);\n        });\n      });\n\n      // ストリームの公開が停止されたときの処理\n      room.onStreamUnpublished.add(e => {\n        console.log(`Stream unpublished event for publication ID: ${e.publication.id}`);\n        const video = remoteVideoElements.current.get(e.publication.publisher.id);\n        if (video) {\n          console.log(`Removing video for member ${e.publication.publisher.id}.`);\n          if (video.srcObject) {\n            video.srcObject = null;\n          }\n          video.remove();\n          remoteVideoElements.current.delete(e.publication.publisher.id);\n        }\n      });\n\n      // 既存のストリームを購読\n      room.publications.forEach(publication => {\n        publication.subscribe().then(stream => {\n          if (stream instanceof RemoteVideoStream || stream instanceof RemoteAudioStream) {\n            console.log(`Subscribed to existing remote media stream.`);\n            attachRemoteStream(stream, publication.publisher.id);\n          } else if (stream instanceof RemoteDataStream) {\n            console.log(`Subscribed to existing remote data stream.`);\n            handleDataStream(stream, publication.publisher.id);\n          }\n        }).catch(err => {\n          console.error(`Failed to subscribe to existing publication ${publication.id}:`, err);\n        });\n      });\n\n      // ローカルマイクからオーディオストリームを取得\n      const {\n        audio\n      } = await SkyWayStreamFactory.CreateMicrophoneAudioStream();\n      localStreamRef.current = audio;\n      audio.track.enabled = isMuted; // 最初はミュート状態\n      const publication = await room.localPerson.publish(audio);\n      audioPublicationRef.current = publication;\n      console.log(\"Local audio stream published.\");\n    } catch (error) {\n      console.error(\"Failed to join room:\", error);\n    }\n  };\n\n  // ルームからの退出\n  const handleLeaveRoom = async () => {\n    if (skywayRoom) {\n      console.log(\"Leaving room...\");\n      try {\n        await skywayRoom.close();\n        setMe(null);\n        setSkywayRoom(null);\n        setAiSuggestions([]);\n        // ビデオ要素のクリーンアップ\n        if (robotDisplayRef.current) {\n          Array.from(robotDisplayRef.current.children).forEach(child => {\n            if (child.tagName === 'VIDEO') {\n              if (child.srcObject) {\n                child.srcObject.getTracks().forEach(track => track.stop()); // トラックを停止してリソースを解放\n                child.srcObject = null;\n              }\n              child.remove();\n            }\n          });\n        }\n        remoteVideoElements.current.clear();\n        console.log(\"Successfully left the room and cleaned up resources.\");\n      } catch (error) {\n        console.error(\"Failed to leave room:\", error);\n      }\n    }\n  };\n\n  // マイクのミュート/ミュート解除\n  const handleMute = () => {\n    if (audioPublicationRef.current) {\n      const newMuteState = !isMuted;\n      audioPublicationRef.current.track.enabled = !newMuteState;\n      setIsMuted(newMuteState);\n      console.log(`Microphone is now ${newMuteState ? 'muted' : 'unmuted'}.`);\n    }\n  };\n\n  // AIモードの切り替え\n  const handleAiModeToggle = () => {\n    setIsAiModeOn(!isAiModeOn);\n    setAiSuggestions([]);\n    console.log(`AI mode is now ${!isAiModeOn ? 'ON' : 'OFF'}.`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"\\u30ED\\u30DC\\u30C3\\u30C8\\u30B3\\u30DF\\u30E5\\u30CB\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: !me ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"join-title\",\n          children: \"\\u30EB\\u30FC\\u30E0\\u306B\\u53C2\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u30EB\\u30FC\\u30E0\\u540D\\u3092\\u5165\\u529B\",\n            value: roomName,\n            onChange: e => setRoomName(e.target.value),\n            className: \"room-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleJoinRoom,\n            className: \"join-btn\",\n            children: \"\\u53C2\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"robot-display-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"robot-display\",\n            ref: robotDisplayRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), isAiModeOn && aiSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-suggestion-container\",\n          children: aiSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ai-suggestion-btn\",\n            disabled: isMoveInProgress,\n            onClick: () => console.log(\"Suggestion clicked:\", suggestion),\n            children: suggestion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-btn ai-btn ${isAiModeOn ? 'ai-mode-on' : ''}`,\n            onClick: handleAiModeToggle,\n            disabled: !me,\n            children: [\"\\uD83E\\uDD16 AI\\u30E2\\u30FC\\u30C9 \", isAiModeOn ? 'ON' : 'OFF']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-btn mic-btn ${isMuted ? 'muted' : ''}`,\n            onClick: handleMute,\n            id: \"micBtn\",\n            disabled: !me || !audioPublicationRef.current || isAiModeOn,\n            children: isMuted ? '🔇 マイクミュート' : '🎤 マイクON'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn manual-btn\",\n            id: \"manualBtn\",\n            disabled: isAiModeOn || isMoveInProgress,\n            children: \"\\uD83D\\uDCCB \\u30DE\\u30CB\\u30E5\\u30A2\\u30EB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn leave-btn\",\n            onClick: handleLeaveRoom,\n            children: \"\\uD83D\\uDEAA \\u9000\\u51FA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"U3oFqswTOdCP+gl0VRdp6m77ixY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","nowInSec","SkyWayAuthToken","SkyWayContext","SkyWayRoom","SkyWayStreamFactory","uuidV4","RemoteDataStream","RemoteVideoStream","RemoteAudioStream","Publication","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","setIsLoggedIn","_s","roomName","setRoomName","me","setMe","skywayContext","setSkywayContext","skywayRoom","setSkywayRoom","remoteVideoElements","Map","robotDisplayRef","localStreamRef","audioPublicationRef","isAiModeOn","setIsAiModeOn","isMuted","setIsMuted","isMoveInProgress","setIsMoveInProgress","aiSuggestions","setAiSuggestions","generateToken","jti","iat","exp","scope","app","id","turn","actions","channels","name","members","sfuBots","encode","initSkyWay","token","context","Create","console","log","error","handleLogout","attachRemoteStream","stream","memberId","current","existingVideo","get","srcObject","remove","delete","video","document","createElement","playsInline","autoplay","muted","classList","add","dataset","attach","appendChild","set","warn","handleDataStream","dataStream","onData","data","parsedData","JSON","parse","type","Array","isArray","suggestions","value","handleJoinRoom","room","FindOrCreate","localPerson","onStreamPublished","e","publication","subscribe","then","publisher","catch","err","onStreamUnpublished","publications","forEach","audio","CreateMicrophoneAudioStream","track","enabled","publish","handleLeaveRoom","close","from","children","child","tagName","getTracks","stop","clear","handleMute","newMuteState","handleAiModeToggle","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","target","ref","length","map","suggestion","index","disabled","_c","$RefreshReg$"],"sources":["C:/banpaku_2025/banpaku/src/home.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport './style.css'; // style.cssを再度有効化\r\nimport {\r\n  nowInSec,\r\n  SkyWayAuthToken,\r\n  SkyWayContext,\r\n  SkyWayRoom,\r\n  SkyWayStreamFactory,\r\n  uuidV4,\r\n  RemoteDataStream, // RemoteDataStreamをインポート\r\n  RemoteVideoStream, // RemoteVideoStreamをインポート\r\n  RemoteAudioStream, // RemoteAudioStreamをインポート\r\n  Publication, // Publicationをインポート\r\n} from '@skyway-sdk/room';\r\n\r\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\r\nfunction Home({ setIsLoggedIn }) {\r\n  // ルーム名\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  // 自分の参加者情報 (ルームに参加すると設定されます)\r\n  const [me, setMe] = useState(null);\r\n  // SkyWayコンテキストのインスタンス\r\n  const [skywayContext, setSkywayContext] = useState(null);\r\n  // SkyWayルームのインスタンス\r\n  const [skywayRoom, setSkywayRoom] = useState(null);\r\n  // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\r\n  const remoteVideoElements = useRef(new Map());\r\n  // リモートビデオを表示するDOM要素への参照\r\n  const robotDisplayRef = useRef(null);\r\n  // ローカルストリームの参照を保持\r\n  const localStreamRef = useRef(null);\r\n  // オーディオストリームの Publication を保持\r\n  const audioPublicationRef = useRef(null);\r\n  // 現在のAIモード\r\n  const [isAiModeOn, setIsAiModeOn] = useState(false);\r\n  // マイクミュート状態\r\n  const [isMuted, setIsMuted] = useState(true);\r\n  // 音声入力の実行中状態を管理\r\n  const [isMoveInProgress, setIsMoveInProgress] = useState(false);\r\n  // AIから提案された候補を管理\r\n  const [aiSuggestions, setAiSuggestions] = useState([]);\r\n\r\n  // SkyWay認証トークンを生成\r\n  const generateToken = () => {\r\n    return new SkyWayAuthToken({\r\n      jti: uuidV4(),\r\n      iat: nowInSec(),\r\n      exp: nowInSec() + 60 * 60 * 24,\r\n      scope: {\r\n        app: {\r\n          id: 'b1480f7d-0114-41d5-b664-92e10507a2a6',\r\n          turn: true,\r\n          actions: ['read', 'write'],\r\n          channels: [\r\n            {\r\n              id: '*',\r\n              name: '*',\r\n              actions: ['read', 'write'],\r\n              members: [\r\n                {\r\n                  id: '*',\r\n                  name: '*',\r\n                  actions: ['read', 'write'],\r\n                },\r\n              ],\r\n              sfuBots: [\r\n                {\r\n                  actions: ['read', 'write'],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }).encode();\r\n  };\r\n\r\n  // SkyWay SDKの初期化\r\n  useEffect(() => {\r\n    const initSkyWay = async () => {\r\n      try {\r\n        const token = generateToken();\r\n        const context = await SkyWayContext.Create(token);\r\n        setSkywayContext(context);\r\n        console.log(\"SkyWay Context created.\");\r\n      } catch (error) {\r\n        console.error(\"Failed to create SkyWay context:\", error);\r\n      }\r\n    };\r\n    initSkyWay();\r\n  }, []);\r\n\r\n  // ログイン状態をログアウトに設定\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  // ストリームをDOM要素にアタッチする関数\r\n  const attachRemoteStream = (stream, memberId) => {\r\n    // リモートビデオを表示するDOM要素が存在し、かつストリームがメディアストリームの場合のみ処理を実行\r\n    if (robotDisplayRef.current && (stream instanceof RemoteVideoStream || stream instanceof RemoteAudioStream)) {\r\n      console.log(`Attaching stream from member ${memberId}.`);\r\n\r\n      // 既存のビデオ要素があれば削除\r\n      const existingVideo = remoteVideoElements.current.get(memberId);\r\n      if (existingVideo) {\r\n        console.log(`Removing existing video for member ${memberId}.`);\r\n        if (existingVideo.srcObject) {\r\n          // srcObjectをnullにして参照を解放\r\n          existingVideo.srcObject = null;\r\n        }\r\n        existingVideo.remove();\r\n        remoteVideoElements.current.delete(memberId);\r\n      }\r\n\r\n      const video = document.createElement('video');\r\n      video.playsInline = true;\r\n      video.autoplay = true;\r\n      video.muted = false; // デフォルトでミュート解除\r\n      video.classList.add('remote-video', 'object-cover'); // CSSクラスを追加\r\n      video.dataset.memberId = memberId;\r\n\r\n      stream.attach(video); // ストリームをビデオ要素のソースに設定\r\n      robotDisplayRef.current.appendChild(video);\r\n      remoteVideoElements.current.set(memberId, video);\r\n      console.log(`Successfully attached stream from member ${memberId} to DOM.`);\r\n    } else {\r\n      console.warn(`Attempted to attach non-media stream or robotDisplayRef is null for member ${memberId}.`);\r\n    }\r\n  };\r\n\r\n  // データストリームを処理する関数\r\n  const handleDataStream = (dataStream, memberId) => {\r\n    console.log(`Received data stream from member ${memberId}.`);\r\n    dataStream.onData.add((data) => {\r\n      console.log(`Received data:`, data);\r\n      // 受け取ったデータをパース\r\n      try {\r\n        const parsedData = JSON.parse(data);\r\n        if (parsedData.type === 'suggestion' && Array.isArray(parsedData.suggestions)) {\r\n          console.log(\"Received AI suggestions:\", parsedData.suggestions);\r\n          setAiSuggestions(parsedData.suggestions);\r\n        } else if (parsedData.type === 'isMoveInProgress') {\r\n          console.log(\"Received move status:\", parsedData.value);\r\n          setIsMoveInProgress(parsedData.value);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to parse received data:\", error);\r\n      }\r\n    });\r\n  };\r\n\r\n  // ルームへの参加\r\n  const handleJoinRoom = async () => {\r\n    if (!skywayContext || !roomName) {\r\n      console.error(\"Context or room name is missing.\");\r\n      return;\r\n    }\r\n    console.log(`Joining room: ${roomName}`);\r\n    try {\r\n      const room = await SkyWayRoom.FindOrCreate(skywayContext, { name: roomName, type: 'sfu' });\r\n      setSkywayRoom(room);\r\n      setMe(room.localPerson);\r\n      console.log(`Joined room: ${roomName} as member ${room.localPerson.id}`);\r\n\r\n      // ルーム内のイベントリスナーを設定\r\n      // ストリームが公開されたときの処理\r\n      room.onStreamPublished.add((e) => {\r\n        console.log(`Stream published event for publication ID: ${e.publication.id}`);\r\n        const { publication } = e;\r\n        // publication.subscribe()でストリームを購読\r\n        publication.subscribe().then(stream => {\r\n          if (stream instanceof RemoteVideoStream || stream instanceof RemoteAudioStream) {\r\n            console.log(`Subscribed to remote media stream.`);\r\n            attachRemoteStream(stream, publication.publisher.id);\r\n          } else if (stream instanceof RemoteDataStream) {\r\n            console.log(`Subscribed to remote data stream.`);\r\n            handleDataStream(stream, publication.publisher.id);\r\n          }\r\n        }).catch(err => {\r\n          console.error(`Failed to subscribe to publication ${publication.id}:`, err);\r\n        });\r\n      });\r\n\r\n      // ストリームの公開が停止されたときの処理\r\n      room.onStreamUnpublished.add((e) => {\r\n        console.log(`Stream unpublished event for publication ID: ${e.publication.id}`);\r\n        const video = remoteVideoElements.current.get(e.publication.publisher.id);\r\n        if (video) {\r\n          console.log(`Removing video for member ${e.publication.publisher.id}.`);\r\n          if (video.srcObject) {\r\n            video.srcObject = null;\r\n          }\r\n          video.remove();\r\n          remoteVideoElements.current.delete(e.publication.publisher.id);\r\n        }\r\n      });\r\n      \r\n      // 既存のストリームを購読\r\n      room.publications.forEach(publication => {\r\n        publication.subscribe().then(stream => {\r\n          if (stream instanceof RemoteVideoStream || stream instanceof RemoteAudioStream) {\r\n            console.log(`Subscribed to existing remote media stream.`);\r\n            attachRemoteStream(stream, publication.publisher.id);\r\n          } else if (stream instanceof RemoteDataStream) {\r\n            console.log(`Subscribed to existing remote data stream.`);\r\n            handleDataStream(stream, publication.publisher.id);\r\n          }\r\n        }).catch(err => {\r\n          console.error(`Failed to subscribe to existing publication ${publication.id}:`, err);\r\n        });\r\n      });\r\n\r\n      // ローカルマイクからオーディオストリームを取得\r\n      const { audio } = await SkyWayStreamFactory.CreateMicrophoneAudioStream();\r\n      localStreamRef.current = audio;\r\n      audio.track.enabled = isMuted; // 最初はミュート状態\r\n      const publication = await room.localPerson.publish(audio);\r\n      audioPublicationRef.current = publication;\r\n      console.log(\"Local audio stream published.\");\r\n      \r\n    } catch (error) {\r\n      console.error(\"Failed to join room:\", error);\r\n    }\r\n  };\r\n\r\n  // ルームからの退出\r\n  const handleLeaveRoom = async () => {\r\n    if (skywayRoom) {\r\n      console.log(\"Leaving room...\");\r\n      try {\r\n        await skywayRoom.close();\r\n        setMe(null);\r\n        setSkywayRoom(null);\r\n        setAiSuggestions([]);\r\n        // ビデオ要素のクリーンアップ\r\n        if (robotDisplayRef.current) {\r\n          Array.from(robotDisplayRef.current.children).forEach(child => {\r\n            if (child.tagName === 'VIDEO') {\r\n              if (child.srcObject) {\r\n                child.srcObject.getTracks().forEach(track => track.stop()); // トラックを停止してリソースを解放\r\n                child.srcObject = null;\r\n              }\r\n              child.remove();\r\n            }\r\n          });\r\n        }\r\n        remoteVideoElements.current.clear();\r\n        console.log(\"Successfully left the room and cleaned up resources.\");\r\n      } catch (error) {\r\n        console.error(\"Failed to leave room:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // マイクのミュート/ミュート解除\r\n  const handleMute = () => {\r\n    if (audioPublicationRef.current) {\r\n      const newMuteState = !isMuted;\r\n      audioPublicationRef.current.track.enabled = !newMuteState;\r\n      setIsMuted(newMuteState);\r\n      console.log(`Microphone is now ${newMuteState ? 'muted' : 'unmuted'}.`);\r\n    }\r\n  };\r\n\r\n  // AIモードの切り替え\r\n  const handleAiModeToggle = () => {\r\n    setIsAiModeOn(!isAiModeOn);\r\n    setAiSuggestions([]);\r\n    console.log(`AI mode is now ${!isAiModeOn ? 'ON' : 'OFF'}.`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <header className=\"header\">\r\n        <h1 className=\"title\">ロボットコミュニケーション</h1>\r\n        <button className=\"logout-btn\" onClick={handleLogout}>ログアウト</button>\r\n      </header>\r\n      <main className=\"main-content\">\r\n        {!me ? (\r\n          <div className=\"join-form-container\">\r\n            <h2 className=\"join-title\">ルームに参加</h2>\r\n            <div className=\"room-input-group\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"ルーム名を入力\"\r\n                value={roomName}\r\n                onChange={(e) => setRoomName(e.target.value)}\r\n                className=\"room-input\"\r\n              />\r\n              <button onClick={handleJoinRoom} className=\"join-btn\">参加</button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"robot-display-container\">\r\n              <div className=\"robot-display\" ref={robotDisplayRef}>\r\n                {/* リモートストリーム映像がここに追加されます */}\r\n              </div>\r\n            </div>\r\n            {isAiModeOn && aiSuggestions.length > 0 && (\r\n              <div className=\"ai-suggestion-container\">\r\n                {aiSuggestions.map((suggestion, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className=\"ai-suggestion-btn\"\r\n                    disabled={isMoveInProgress}\r\n                    onClick={() => console.log(\"Suggestion clicked:\", suggestion)}\r\n                  >\r\n                    {suggestion}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n            <div className=\"bottom-controls\">\r\n              <button\r\n                className={`control-btn ai-btn ${isAiModeOn ? 'ai-mode-on' : ''}`}\r\n                onClick={handleAiModeToggle}\r\n                disabled={!me}\r\n              >\r\n                🤖 AIモード {isAiModeOn ? 'ON' : 'OFF'}\r\n              </button>\r\n              <button\r\n                className={`control-btn mic-btn ${isMuted ? 'muted' : ''}`}\r\n                onClick={handleMute}\r\n                id=\"micBtn\"\r\n                disabled={!me || !audioPublicationRef.current || isAiModeOn}\r\n              >\r\n                {isMuted ? '🔇 マイクミュート' : '🎤 マイクON'}\r\n              </button>\r\n              <button className=\"control-btn manual-btn\" id=\"manualBtn\" disabled={isAiModeOn || isMoveInProgress}>\r\n                📋 マニュアル\r\n              </button>\r\n              <button\r\n                className=\"control-btn leave-btn\"\r\n                onClick={handleLeaveRoom}\r\n              >\r\n                🚪 退出\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}