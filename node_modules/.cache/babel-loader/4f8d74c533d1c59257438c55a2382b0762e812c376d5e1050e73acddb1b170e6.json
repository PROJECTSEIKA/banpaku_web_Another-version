{"ast":null,"code":"import React,{useEffect,useMemo,useRef,useState}from\"react\";import'./style.css';// style.cssを再度有効化\nimport{nowInSec,SkyWayAuthToken,SkyWayContext,SkyWayRoom,SkyWayStreamFactory,uuidV4,LocalP2PRoomMember,RemoteDataStream,// RemoteDataStreamをインポート\nRemoteVideoStream,// RemoteVideoStreamをインポート\nRemoteAudioStream// RemoteAudioStreamをインポート\n}from'@skyway-sdk/room';/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Home(_ref){let{setIsLoggedIn}=_ref;// ルーム名\nconst[roomName,setRoomName]=useState(\"\");// 自分の参加者情報 (ルームに参加すると設定されます)\nconst[me,setMe]=useState(null);// SkyWayコンテキストのインスタンス\nconst[skywayContext,setSkywayContext]=useState(null);// SkyWayルームのインスタンス\nconst[skywayRoom,setSkywayRoom]=useState(null);// リモートビデオ要素を管理するためのMap (memberId -> videoElement)\nconst remoteVideoElements=useRef(new Map());// リモートビデオを表示するDOM要素への参照\nconst robotDisplayRef=useRef(null);// ローカルストリームの参照を保持\nconst localStreamRef=useRef(null);// 受信したメッセージを表示するための状態\nconst[receivedMessages,setReceivedMessages]=useState([]);// 送信したデータストリームの参照を保持\nconst localDataStreamRef=useRef(null);// LocalDataStreamの参照を保持\n// マイクの状態を表示するための状態 (ミュート状態を管理)\nconst[isMuted,setIsMuted]=useState(false);// オーディオストリームのPublicationを保持するための参照\nconst audioPublicationRef=useRef(null);// 現在の言語状態 ('japanese' または 'english')\nconst[currentLanguage,setCurrentLanguage]=useState('japanese');// AIモードがONかどうかを管理する状態\nconst[isAiModeOn,setIsAiModeOn]=useState(false);// AIからの提案を保持する状態\n// { key: 'ai_suggestion_1', text: '提案内容' } の形式で格納\nconst[aiSuggestions,setAiSuggestions]=useState([null,null]);// 2つの提案を保持するため、初期値をnullで埋める\n// モーションが進行中かどうかを管理する状態\nconst[isMoveInProgress,setIsMoveInProgress]=useState(false);// メッセージとモーションの多言語マッピング\nconst messages=useMemo(()=>({hello:{japanese:'リセット',english:'Hello'},goodbye:{japanese:'決めポーズ',english:'Goodbye'},bow:{japanese:'バイバイ',english:'Bow'},flap:{japanese:'YES',english:'Flap'},lookUp:{japanese:'NO',english:'Look up'},lookDown:{japanese:'右手を上げる',english:'Look down'},lookRight:{japanese:'右手を下げる',english:'Look right'},lookLeft:{japanese:'左手を上げる',english:'Look left'},nod:{japanese:'左手を下げる',english:'Nod'},tiltHead:{japanese:'上を向く',english:'Tilt head'},spin:{japanese:'下を向く',english:'Spin'},jump:{japanese:'右を向く',english:'Jump'},dance:{japanese:'左を向く',english:'Dance'},bowDeep:{japanese:'パタパタ',english:'Deep bow'},doingSomething:{japanese:'こんにちは',english:'Hello'},thankYou:{japanese:'バイバイ',english:'Thank you'},good:{japanese:'ようこそ',english:'Good'},ookini:{japanese:'ありがとう',english:'Thank you (Kansai dialect)'},amazing:{japanese:'楽しんでね',english:'Amazing'}}),[]);/**\r\n   * ログアウトボタンクリック時のハンドラ\r\n   */const handleLogout=()=>{setIsLoggedIn(false);// ログイン状態をfalseに設定\n};// SkyWay App ID と Secret Key\n// 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\n// サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\nconst appId=useMemo(()=>\"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\",[]);const secretKey=useMemo(()=>\"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\",[]);// SkyWay認証トークンの生成\nconst token=useMemo(()=>{if(appId==null||secretKey==null)return undefined;return new SkyWayAuthToken({jti:uuidV4(),// JWT ID\niat:nowInSec(),// 発行時刻\nexp:nowInSec()+60*60*24,// 有効期限 (24時間)\nversion:3,scope:{appId:appId,rooms:[{name:\"*\",// すべてのルーム名に適用\nmethods:[\"create\",\"close\",\"updateMetadata\"],// ルーム操作の権限\nmember:{name:\"*\",// すべてのメンバーに適用\nmethods:[\"publish\",\"subscribe\",\"updateMetadata\"]// メンバー操作の権限\n}}],turn:{enabled:true// TURNサーバーの使用を許可 (NAT越えのため)\n}}}).encode(secretKey);},[appId,secretKey]);/**\r\n   * SkyWayContextの初期化とクリーンアップを行うuseEffect\r\n   * トークンが利用可能になったときに一度だけ実行されます。\r\n   */useEffect(()=>{if(!token)return;let currentContext;const initContext=async()=>{try{currentContext=await SkyWayContext.Create(token);setSkywayContext(currentContext);console.log(\"SkyWayContext created successfully.\");}catch(error){console.error(\"Failed to create SkyWayContext:\",error);}};initContext();// コンポーネントのアンマウント時にコンテキストを破棄\nreturn()=>{if(currentContext){currentContext.dispose();console.log(\"SkyWayContext disposed.\");}};},[token]);// tokenが変更されたときにのみ実行\n/**\r\n   * リモートストリームをDOMに追加するヘルパー関数\r\n   * @param {RemoteVideoStream | RemoteAudioStream} stream - 追加するメディアストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */const attachRemoteStream=(stream,memberId)=>{if(robotDisplayRef.current&&(stream instanceof RemoteVideoStream||stream instanceof RemoteAudioStream)){const video=document.createElement(\"video\");video.autoplay=true;// 自動再生\nvideo.playsInline=true;// インライン再生 (iOSなどで必要)\nvideo.className=\"remote-video object-cover\";// スタイリング用のクラスとobject-coverを追加\nvideo.dataset.memberId=memberId;// メンバーIDをデータ属性に保存\nstream.attach(video);// ストリームをビデオ要素のソースに設定\nrobotDisplayRef.current.appendChild(video);remoteVideoElements.current.set(memberId,video);console.log(\"Attached stream from \".concat(memberId,\" to DOM.\"));}else{console.warn(\"Attempted to attach non-media stream or robotDisplayRef is null for member \".concat(memberId,\".\"));}};/**\r\n   * データストリームの受信を処理するヘルパー関数\r\n   * @param {RemoteDataStream} stream - 受信するデータストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */const handleDataStream=(stream,memberId)=>{if(stream instanceof RemoteDataStream){stream.onData.add(data=>{console.log(\"Received data from \".concat(memberId,\":\"),data);// 受信したメッセージを状態に追加\nsetReceivedMessages(prevMessages=>[...prevMessages,{senderId:memberId,message:data}]);// \"move_finish\" シグナルをチェック\nif(data===\"move_finish\"){console.log(\"Received 'move_finish' signal. Enabling side panel buttons.\");setIsMoveInProgress(false);// モーション終了\n}// AI提案のフォーマットをチェック\n// 新しいフォーマット \"ai_assist_1:data:ai_assist_2:data\" を解析\nconst aiCombinedSuggestionRegex=/^ai_assist_1:(.*):ai_assist_2:(.*)$/;const combinedMatch=String(data).match(aiCombinedSuggestionRegex);if(combinedMatch){const suggestion1Content=combinedMatch[1];// キャプチャグループ1が最初の提案\nconst suggestion2Content=combinedMatch[2];// キャプチャグループ2が2番目の提案\nsetAiSuggestions([{key:'ai_suggestion_1',text:suggestion1Content},{key:'ai_suggestion_2',text:suggestion2Content}]);console.log(\"Received combined AI suggestions.\");}else{// 以前の単一提案フォーマットも考慮する場合（もし両方のフォーマットが混在する可能性があるなら）\nconst aiSingleSuggestionRegex=/^ai_assist_(\\d+):(.*)$/;const singleMatch=String(data).match(aiSingleSuggestionRegex);if(singleMatch){const suggestionNumber=parseInt(singleMatch[1],10);const suggestionContent=singleMatch[2];if(suggestionNumber===1||suggestionNumber===2){setAiSuggestions(prevSuggestions=>{const newSuggestions=[...prevSuggestions];newSuggestions[suggestionNumber-1]={key:\"ai_suggestion_\".concat(suggestionNumber),text:suggestionContent};return newSuggestions;});console.log(\"Received single AI suggestion \".concat(suggestionNumber,\".\"));}}}});console.log(\"Listening for data from \".concat(memberId,\".\"));}else{console.warn(\"Attempted to handle non-data stream as data stream for member \".concat(memberId,\".\"));}};/**\r\n   * ルームに参加するハンドラ\r\n   * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\r\n   */const handleJoinRoom=async()=>{if(!skywayContext){console.error(\"SkyWayContext is not initialized. Please wait or check token.\");return;}if(!roomName){console.error(\"Room name is empty. Please enter a room name to join.\");return;}if(skywayRoom&&me){console.warn(\"Already in a room. Please leave the current room first.\");return;}try{// 指定されたルーム名でP2Pルームを作成または検索\nconst room=await SkyWayRoom.FindOrCreate(skywayContext,{type:\"p2p\",// P2Pルームタイプ\nname:roomName});// roomオブジェクトが有効であることを確認\nif(!room){console.error(\"SkyWayRoom.FindOrCreate returned null or undefined room.\");throw new Error(\"Failed to create or find SkyWayRoom.\");}setSkywayRoom(room);console.log(\"SkyWayRoom '\".concat(roomName,\"' found or created.\"));// ルームに参加し、自分のメンバー情報を取得\nconst localMember=await room.join();// localMemberが有効であることを確認\nif(!localMember){console.error(\"room.join() returned null or undefined localMember.\");throw new Error(\"Failed to join the room.\");}setMe(localMember);console.log(\"Joined room '\".concat(roomName,\"' as member ID: \").concat(localMember.id));// ルームIDと自分のIDをコンソールに表示\nconsole.log(\"Room ID: \".concat(roomName,\" / My ID: \").concat(localMember.id));// 自分のカメラとマイクのストリームを作成し、公開\nconst{audio,video}=await SkyWayStreamFactory.createMicrophoneAudioAndCameraStream();localStreamRef.current=video;// ローカルビデオストリームを保存\nawait localMember.publish(video);const publication_audio=await localMember.publish(audio);audioPublicationRef.current=publication_audio;// オーディオPublicationを保存\nsetIsMuted(false);console.log(\"Published local camera and microphone stream.\");// 自分のデータストリームを作成し、公開\nconst dataStream=await SkyWayStreamFactory.createDataStream();localDataStreamRef.current=dataStream;// ローカルデータストリームを保存\nawait localMember.publish(dataStream);console.log(\"Published local data stream.\");// ルーム参加時はボタンを有効にする（モーションはまだ始まっていないため）\nsetIsMoveInProgress(false);// --- 既存のストリームを購読するロジック ---\n// ルーム内の既存の公開ストリームをすべて購読する\nfor(const publication of room.publications){// 自分のストリームは購読しない\nif(localMember.id===publication.publisher.id){continue;}try{const{stream}=await localMember.subscribe(publication.id);console.log(\"Subscribed to existing stream from \".concat(publication.publisher.id,\", type: \").concat(publication.contentType));if(publication.contentType==='video'||publication.contentType==='audio'){attachRemoteStream(stream,publication.publisher.id);}else if(publication.contentType==='data'){handleDataStream(stream,publication.publisher.id);}else{console.warn(\"Unknown stream content type: \".concat(publication.contentType,\" from \").concat(publication.publisher.id));}}catch(subscribeError){console.error(\"Failed to subscribe to existing stream from \".concat(publication.publisher.id,\":\"),subscribeError);}}// --- ルームイベントリスナーの設定 ---\n// メンバーがルームに参加したときのイベント\nif(room.onMemberJoined){room.onMemberJoined.add(e=>{console.log(\"Member joined: \".concat(e.member.id));});}else{console.error(\"room.onMemberJoined is undefined. This is unexpected.\");}// メンバーがルームを離脱したときのイベント\nif(room.onMemberLeft){room.onMemberLeft.add(e=>{console.log(\"Member left: \".concat(e.member.id));// 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\nconst videoElement=remoteVideoElements.current.get(e.member.id);if(videoElement&&robotDisplayRef.current){robotDisplayRef.current.removeChild(videoElement);remoteVideoElements.current.delete(e.member.id);console.log(\"Removed video for member \".concat(e.member.id));}// データストリーム関連のクリーンアップもここに追加可能ですが、\n// onDataリスナーはストリームが閉じられると自動的に停止します。\n});}else{console.error(\"room.onMemberLeft is undefined. This is unexpected.\");}// ストリームが公開されたときのイベント\nif(room.onStreamPublished){room.onStreamPublished.add(async e=>{console.log(\"Stream published by \".concat(e.publication.publisher.id,\", type: \").concat(e.publication.contentType));// 自分のストリームは購読しない\nif(localMember.id!==e.publication.publisher.id){try{// リモートストリームを購読\nconst{stream}=await localMember.subscribe(e.publication.id);console.log(\"Subscribed to stream from \".concat(e.publication.publisher.id));if(e.publication.contentType==='video'||e.publication.contentType==='audio'){attachRemoteStream(stream,e.publication.publisher.id);}else if(e.publication.contentType==='data'){handleDataStream(stream,e.publication.publisher.id);}else{console.warn(\"Unknown stream content type: \".concat(e.publication.contentType,\" from \").concat(e.publication.publisher.id));}}catch(subscribeError){console.error(\"Failed to subscribe to stream from \".concat(e.publication.publisher.id,\":\"),subscribeError);}}else{console.log(\"Skipping subscription for own stream: \".concat(e.publication.publisher.id));}});}else{console.error(\"room.onStreamPublished is undefined. This is unexpected.\");}// ストリームが非公開になったときのイベント\nif(room.onStreamUnpublished){room.onStreamUnpublished.add(e=>{console.log(\"Stream unpublished by \".concat(e.publication.publisher.id));// 該当ストリームのビデオ要素をDOMから削除し、Mapからも削除\nconst videoElement=remoteVideoElements.current.get(e.publication.publisher.id);if(videoElement&&robotDisplayRef.current){robotDisplayRef.current.removeChild(videoElement);remoteVideoElements.current.delete(e.publication.publisher.id);console.log(\"Removed unpublished video for member \".concat(e.publication.publisher.id));}});}else{console.error(\"room.onStreamUnpublished is undefined. This is unexpected.\");}}catch(error){console.error(\"Failed to join room:\",error);// エラー発生時に状態をリセットして再試行可能にする\nsetSkywayRoom(null);setMe(null);// エラー時に既存のビデオ要素をクリーンアップ\nif(robotDisplayRef.current){Array.from(robotDisplayRef.current.children).forEach(child=>{if(child.tagName==='VIDEO'){// ビデオ要素のsrcObjectをクリアし、トラックを停止\nif(child.srcObject&&typeof child.srcObject.getTracks==='function'){child.srcObject.getTracks().forEach(track=>track.stop());child.srcObject=null;}child.remove();// DOMから要素を削除\n}});}remoteVideoElements.current.clear();if(localStreamRef.current){// LocalVideoStreamのstop()メソッドを呼び出す\nif(typeof localStreamRef.current.stop==='function'){localStreamRef.current.stop();console.log(\"Stopped local media stream during join error cleanup.\");}else{console.warn(\"localStreamRef.current is not a valid LocalVideoStream or stop is not a function during join error cleanup.\");}localStreamRef.current=null;}// LocalDataStreamは自動的にクリーンアップされるため、明示的なclose()は不要\nlocalDataStreamRef.current=null;// 参照をクリア\nconsole.log(\"Local data stream reference cleared during join error cleanup.\");// ミュート状態もリセット\nsetIsMuted(false);audioPublicationRef.current=null;setIsMoveInProgress(false);// エラー時もモーション状態をリセット\n}};/**\r\n   * ルームから退出するハンドラ\r\n   */const handleLeaveRoom=async()=>{if(skywayRoom&&me){try{// ローカルストリームを停止し、公開を解除\nif(localStreamRef.current){// LocalVideoStreamのstop()メソッドを呼び出す\nif(typeof localStreamRef.current.stop==='function'){localStreamRef.current.stop();console.log(\"Stopped local media stream.\");}else{console.warn(\"localStreamRef.current is not a valid LocalVideoStream or stop is not a function during leave.\");}localStreamRef.current=null;}// LocalDataStreamは自動的にクリーンアップされるため、明示的なclose()は不要\nlocalDataStreamRef.current=null;// 参照をクリア\nconsole.log(\"Local data stream reference cleared.\");// オーディオPublicationの参照をクリア\naudioPublicationRef.current=null;setIsMuted(false);// ミュート状態をリセット\nawait me.leave();// ルームから退出\nconsole.log(\"Left room '\".concat(roomName,\"'\"));// ルーム退出をコンソールに表示\nconsole.log(\"Left room: \".concat(roomName));// room.dispose()を使用\nif(skywayRoom){await skywayRoom.dispose();// ルームを閉じる (これはルームの作成者のみが効果的です)\nconsole.log(\"SkyWay Room disposed.\");}// SkyWay SDKに関するすべての操作が不要になった場合にcontext.dispose()を呼び出す\n// このコンポーネントがアンマウントされる際にuseEffectのクリーンアップ関数で処理されるため、ここでは呼び出さない\n}catch(error){console.error(\"Failed to leave room:\",error);}finally{// 状態をリセット\nsetMe(null);setSkywayRoom(null);setReceivedMessages([]);// 受信メッセージもクリア\n// すべてのリモートビデオ要素をDOMから削除\nif(robotDisplayRef.current){Array.from(robotDisplayRef.current.children).forEach(child=>{if(child.tagName==='VIDEO'){// ビデオ要素のsrcObjectをクリアし、トラックを停止\nif(child.srcObject&&typeof child.srcObject.getTracks==='function'){child.srcObject.getTracks().forEach(track=>track.stop());child.srcObject=null;}child.remove();// DOMから要素を削除\n}});}remoteVideoElements.current.clear();// AIモードもオフにする\nsetIsAiModeOn(false);setAiSuggestions([null,null]);// 提案もクリア\nsetIsMoveInProgress(false);// ルーム退出時もモーション状態をリセット\n}}};/**\r\n   * モーションを操作するボタンを押した時の処理\r\n   * @param {string | object} messageOrKey - 送信するメッセージのキー (messagesオブジェクトのキー) またはAI提案オブジェクト\r\n   */const handleSend=async messageOrKey=>{if(me&&skywayRoom&&localDataStreamRef.current){try{let messageToSend;let shouldSetMoveInProgress=false;// モーション進行中フラグを制御するための新しい変数\nif(typeof messageOrKey==='string'){// サイドボタンからの送信の場合、直接メッセージ文字列を使用\nif(messageOrKey.startsWith(\"template_motion_\")){messageToSend=messageOrKey;shouldSetMoveInProgress=true;// モーションコマンドの場合のみフラグを立てる\n}else if(messageOrKey.startsWith(\"template_voice_\")){messageToSend=messageOrKey;// ボイスコマンドの場合はshouldSetMoveInProgressをtrueにしない\n}else{var _messages$messageOrKe;// 既存のmessagesオブジェクトからのルックアップ (AI提案以外でキーが渡された場合など)\nmessageToSend=(_messages$messageOrKe=messages[messageOrKey])===null||_messages$messageOrKe===void 0?void 0:_messages$messageOrKe[currentLanguage];}}else if(typeof messageOrKey==='object'&&messageOrKey.text){// AI提案ボタンからの送信\n// ここでAI提案のキーに基づいて特定のシグナルを送信する\nif(messageOrKey.key==='ai_suggestion_1'){messageToSend=\"ai_assist_1\";// 変更: \"ai_suggestion_1_selected\" から \"ai_assist_1\" へ\n}else if(messageOrKey.key==='ai_suggestion_2'){messageToSend=\"ai_assist_2\";// 変更: \"ai_suggestion_2_selected\" から \"ai_assist_2\" へ\n}else{console.warn(\"Unknown AI suggestion key:\",messageOrKey.key);return;// 未知のキーの場合は送信せずに終了\n}// AI提案の場合はshouldSetMoveInProgressをtrueにしない\n}if(!messageToSend){console.warn(\"Message to send is empty or not found.\");return;}localDataStreamRef.current.write(messageToSend);console.log(\"Sent message: \\\"\".concat(messageToSend,\"\\\"\"));// 送信したメッセージも自身の画面に表示\nsetReceivedMessages(prevMessages=>[...prevMessages,{senderId:me.id,message:messageToSend,isLocal:true}]);setAiSuggestions([null,null]);// 送信したら提案をクリア\n// shouldSetMoveInProgressがtrueの場合のみモーション進行中状態にする\nif(shouldSetMoveInProgress){setIsMoveInProgress(true);}// AI提案やボイスコマンドの場合は、isMoveInProgressは変更しない\n// (以前のモーションが進行中であればそのまま、そうでなければfalseのまま)\n}catch(error){console.error(\"Failed to send data:\",error);}}else{console.warn(\"Cannot send message: Not in a room, 'me' object is not available, or data stream is not ready.\");}};/**\r\n   * マイクのミュート/ミュート解除を切り替えるハンドラ\r\n   */const handleMute=async()=>{console.log(\"start\");if(!audioPublicationRef.current){console.warn(\"Audio publication not available. Cannot toggle mute.\");return;}try{if(isMuted){// 現在ミュート状態なら、ミュートを解除\nawait audioPublicationRef.current.enable();console.log(\"Microphone unmuted.\");}else{// 現在ミュート状態でないなら、ミュート\nawait audioPublicationRef.current.disable();console.log(\"Microphone muted.\");}setIsMuted(!isMuted);// ミュート状態をトグル\n}catch(error){console.error(\"Failed to toggle microphone mute state:\",error);}};// AIモードが変更されたときにシグナルを送信するためのフラグ\nconst isInitialAiModeRender=useRef(true);/**\r\n   * AIモードの状態変更を監視し、シグナルを送信するuseEffect\r\n   */useEffect(()=>{// 初回レンダリング時はシグナルを送信しない\nif(isInitialAiModeRender.current){isInitialAiModeRender.current=false;return;}// me オブジェクトとデータストリームが利用可能であることを確認\nif(!me||!localDataStreamRef.current){return;}if(isAiModeOn){// AIモードがONになったら、AIに提案を要求するメッセージを送信\nlocalDataStreamRef.current.write(\"ai_assist_on\");console.log(\"Sent AI_MODE_REQUEST_SUGGESTIONS signal.\");setAiSuggestions([null,null]);// 新しいセッションのために提案をクリア\n}else{// AIモードがOFFになったら提案をクリアし、AIモード終了のシグナルを送信\nlocalDataStreamRef.current.write(\"ai_assist_off\");console.log(\"Sent AI_MODE_OFF_SIGNAL.\");setAiSuggestions([null,null]);// 提案をクリア\n}},[isAiModeOn,me,localDataStreamRef]);// isAiModeOn, me, localDataStreamRef の変更に反応\n/**\r\n   * 言語を切り替えるハンドラ\r\n   */const handleToggleLanguage=()=>{setCurrentLanguage(prevLang=>prevLang==='japanese'?'english':'japanese');};/**\r\n   * AIモードを切り替えるハンドラ\r\n   * この関数はAIモードの状態をトグルするのみで、シグナル送信はuseEffectに任せる\r\n   */const handleAiModeToggle=()=>{setIsAiModeOn(prev=>!prev);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"motion-btn\",disabled:isAiModeOn||isMoveInProgress,children:\"\\u30E2\\u30FC\\u30B7\\u30E7\\u30F3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"robot-status\",children:\"\\u64CD\\u4F5C\\u3057\\u3066\\u3044\\u308B\\u30ED\\u30DC\\u30C3\\u30C8\\uFF1ARX78-myakumyaku\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-right\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"logout-btn\",children:\"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"}),/*#__PURE__*/_jsx(\"button\",{className:\"voice-btn\",disabled:isAiModeOn||isMoveInProgress,children:\"\\u30DC\\u30A4\\u30B9\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"side-panel\",children:/*#__PURE__*/_jsx(\"div\",{className:\"side-panel-content\",children:Object.keys(messages).slice(0,17).map(key=>/*#__PURE__*/// 左側のボタン数を調整\n_jsxs(\"button\",{// 左側のボタンは \"template_motion_〇〇\" 形式で送信\nonClick:()=>handleSend(\"template_motion_\".concat(messages[key].japanese)),className:\"side-btn\",disabled:isAiModeOn||!me||isMoveInProgress// AIモード中、未参加、モーション中は無効化\n,children:[messages[key].japanese,\" \"]},key))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-area\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"room-controls\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u30EB\\u30FC\\u30E0\\u540D\\u3092\\u5165\\u529B\",value:roomName,onChange:e=>setRoomName(e.target.value),className:\"room-input\",disabled:!!me// ルーム参加中は入力不可にする\n}),!me?/*#__PURE__*/// ルームに参加していない場合\n_jsx(\"button\",{onClick:handleJoinRoom,className:\"join-room-btn\",disabled:!skywayContext||!roomName,children:\"\\u30EB\\u30FC\\u30E0\\u306B\\u53C2\\u52A0\"}):/*#__PURE__*/// ルームに参加している場合\n_jsx(\"button\",{onClick:handleLeaveRoom,className:\"leave-room-btn\",children:\"\\u30EB\\u30FC\\u30E0\\u3092\\u9000\\u51FA\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"robot-display\",ref:robotDisplayRef,children:(aiSuggestions[0]||aiSuggestions[1])&&/*#__PURE__*/_jsxs(\"div\",{className:\"ai-suggestions\",children:[aiSuggestions[0]&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSend(aiSuggestions[0]),className:\"ai-suggestion-btn\",disabled:isMoveInProgress// モーション中は無効化\n,children:aiSuggestions[0].text}),aiSuggestions[1]&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSend(aiSuggestions[1]),className:\"ai-suggestion-btn\",disabled:isMoveInProgress// モーション中は無効化\n,children:aiSuggestions[1].text})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"side-panel right\",children:/*#__PURE__*/_jsx(\"div\",{className:\"side-panel-content\",children:Object.keys(messages).slice(14).map(key=>/*#__PURE__*/// 右側のボタン数を調整\n_jsxs(\"button\",{// 右側のボタンは \"template_voice_〇〇\" 形式で送信\nonClick:()=>handleSend(\"template_voice_\".concat(messages[key].japanese)),className:\"side-btn\",disabled:isAiModeOn||!me||isMoveInProgress// AIモード中、未参加、モーション中は無効化\n,children:[messages[key].japanese,\" \"]},key))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bottom-controls\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"control-btn ai-btn \".concat(isAiModeOn?'ai-mode-on':''),onClick:handleAiModeToggle,disabled:!me// ルームに参加していない場合は無効\n,children:[\"\\uD83E\\uDD16 AI\\u30E2\\u30FC\\u30C9 \",isAiModeOn?'ON':'OFF']}),/*#__PURE__*/_jsxs(\"button\",{className:\"control-btn mic-btn \".concat(isMuted?'muted':'')// ミュート状態に応じてクラスを追加\n,onClick:handleMute,id:\"micBtn\",disabled:!me||!audioPublicationRef.current||isAiModeOn// ルームに参加していない、またはオーディオが公開されていない、AIモード中は無効\n,children:[isMuted?'🔇 マイクミュート':'🎤 マイクON',\" \"]}),/*#__PURE__*/_jsx(\"button\",{className:\"control-btn manual-btn\",id:\"manualBtn\",disabled:isAiModeOn||isMoveInProgress,children:\"\\uD83D\\uDCCB \\u30DE\\u30CB\\u30E5\\u30A2\\u30EB\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"control-btn greeting-btn\",id:\"languageBtn\",onClick:handleToggleLanguage// 言語切り替えハンドラを設定\n,disabled:isAiModeOn||isMoveInProgress// AIモード中、モーション中は無効化\n,children:[\"\\uD83D\\uDC4B \",currentLanguage==='japanese'?'にほんご':'English',\" \"]})]})]});}export default Home;","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","nowInSec","SkyWayAuthToken","SkyWayContext","SkyWayRoom","SkyWayStreamFactory","uuidV4","LocalP2PRoomMember","RemoteDataStream","RemoteVideoStream","RemoteAudioStream","jsx","_jsx","jsxs","_jsxs","Home","_ref","setIsLoggedIn","roomName","setRoomName","me","setMe","skywayContext","setSkywayContext","skywayRoom","setSkywayRoom","remoteVideoElements","Map","robotDisplayRef","localStreamRef","receivedMessages","setReceivedMessages","localDataStreamRef","isMuted","setIsMuted","audioPublicationRef","currentLanguage","setCurrentLanguage","isAiModeOn","setIsAiModeOn","aiSuggestions","setAiSuggestions","isMoveInProgress","setIsMoveInProgress","messages","hello","japanese","english","goodbye","bow","flap","lookUp","lookDown","lookRight","lookLeft","nod","tiltHead","spin","jump","dance","bowDeep","doingSomething","thankYou","good","ookini","amazing","handleLogout","appId","secretKey","token","undefined","jti","iat","exp","version","scope","rooms","name","methods","member","turn","enabled","encode","currentContext","initContext","Create","console","log","error","dispose","attachRemoteStream","stream","memberId","current","video","document","createElement","autoplay","playsInline","className","dataset","attach","appendChild","set","concat","warn","handleDataStream","onData","add","data","prevMessages","senderId","message","aiCombinedSuggestionRegex","combinedMatch","String","match","suggestion1Content","suggestion2Content","key","text","aiSingleSuggestionRegex","singleMatch","suggestionNumber","parseInt","suggestionContent","prevSuggestions","newSuggestions","handleJoinRoom","room","FindOrCreate","type","Error","localMember","join","id","audio","createMicrophoneAudioAndCameraStream","publish","publication_audio","dataStream","createDataStream","publication","publications","publisher","subscribe","contentType","subscribeError","onMemberJoined","e","onMemberLeft","videoElement","get","removeChild","delete","onStreamPublished","onStreamUnpublished","Array","from","children","forEach","child","tagName","srcObject","getTracks","track","stop","remove","clear","handleLeaveRoom","leave","handleSend","messageOrKey","messageToSend","shouldSetMoveInProgress","startsWith","_messages$messageOrKe","write","isLocal","handleMute","enable","disable","isInitialAiModeRender","handleToggleLanguage","prevLang","handleAiModeToggle","prev","disabled","onClick","Object","keys","slice","map","placeholder","value","onChange","target","ref"],"sources":["C:/banpaku_2025/banpaku/src/home.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport './style.css'; // style.cssを再度有効化\r\nimport {\r\n  nowInSec,\r\n  SkyWayAuthToken,\r\n  SkyWayContext,\r\n  SkyWayRoom,\r\n  SkyWayStreamFactory,\r\n  uuidV4,\r\n  LocalP2PRoomMember,\r\n  RemoteDataStream, // RemoteDataStreamをインポート\r\n  RemoteVideoStream, // RemoteVideoStreamをインポート\r\n  RemoteAudioStream, // RemoteAudioStreamをインポート\r\n} from '@skyway-sdk/room';\r\n\r\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\r\nfunction Home({ setIsLoggedIn }) {\r\n  // ルーム名\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  // 自分の参加者情報 (ルームに参加すると設定されます)\r\n  const [me, setMe] = useState(null);\r\n  // SkyWayコンテキストのインスタンス\r\n  const [skywayContext, setSkywayContext] = useState(null);\r\n  // SkyWayルームのインスタンス\r\n  const [skywayRoom, setSkywayRoom] = useState(null);\r\n  // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\r\n  const remoteVideoElements = useRef(new Map());\r\n  // リモートビデオを表示するDOM要素への参照\r\n  const robotDisplayRef = useRef(null);\r\n  // ローカルストリームの参照を保持\r\n  const localStreamRef = useRef(null);\r\n  // 受信したメッセージを表示するための状態\r\n  const [receivedMessages, setReceivedMessages] = useState([]);\r\n  // 送信したデータストリームの参照を保持\r\n  const localDataStreamRef = useRef(null); // LocalDataStreamの参照を保持\r\n  // マイクの状態を表示するための状態 (ミュート状態を管理)\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  // オーディオストリームのPublicationを保持するための参照\r\n  const audioPublicationRef = useRef(null);\r\n  // 現在の言語状態 ('japanese' または 'english')\r\n  const [currentLanguage, setCurrentLanguage] = useState('japanese');\r\n  // AIモードがONかどうかを管理する状態\r\n  const [isAiModeOn, setIsAiModeOn] = useState(false);\r\n  // AIからの提案を保持する状態\r\n  // { key: 'ai_suggestion_1', text: '提案内容' } の形式で格納\r\n  const [aiSuggestions, setAiSuggestions] = useState([null, null]); // 2つの提案を保持するため、初期値をnullで埋める\r\n  // モーションが進行中かどうかを管理する状態\r\n  const [isMoveInProgress, setIsMoveInProgress] = useState(false);\r\n\r\n\r\n  // メッセージとモーションの多言語マッピング\r\n  const messages = useMemo(() => ({\r\n    hello: {\r\n      japanese: 'リセット',\r\n      english: 'Hello'\r\n    },\r\n    goodbye: {\r\n      japanese: '決めポーズ',\r\n      english: 'Goodbye'\r\n    },\r\n    bow: {\r\n      japanese: 'バイバイ',\r\n      english: 'Bow'\r\n    },\r\n    flap: {\r\n      japanese: 'YES',\r\n      english: 'Flap'\r\n    },\r\n    lookUp: {\r\n      japanese: 'NO',\r\n      english: 'Look up'\r\n    },\r\n    lookDown: {\r\n      japanese: '右手を上げる',\r\n      english: 'Look down'\r\n    },\r\n    lookRight: {\r\n      japanese: '右手を下げる',\r\n      english: 'Look right'\r\n    },\r\n    lookLeft: {\r\n      japanese: '左手を上げる',\r\n      english: 'Look left'\r\n    },\r\n    nod: {\r\n      japanese: '左手を下げる',\r\n      english: 'Nod'\r\n    },\r\n    tiltHead: {\r\n      japanese: '上を向く',\r\n      english: 'Tilt head'\r\n    },\r\n    spin: {\r\n      japanese: '下を向く',\r\n      english: 'Spin'\r\n    },\r\n    jump: {\r\n      japanese: '右を向く',\r\n      english: 'Jump'\r\n    },\r\n    dance: {\r\n      japanese: '左を向く',\r\n      english: 'Dance'\r\n    },\r\n    bowDeep: {\r\n      japanese: 'パタパタ',\r\n      english: 'Deep bow'\r\n    },\r\n    doingSomething: {\r\n      japanese: 'こんにちは',\r\n      english: 'Hello'\r\n    },\r\n    thankYou: {\r\n      japanese: 'バイバイ',\r\n      english: 'Thank you'\r\n    },\r\n    good: {\r\n      japanese: 'ようこそ',\r\n      english: 'Good'\r\n    },\r\n    ookini: {\r\n      japanese: 'ありがとう',\r\n      english: 'Thank you (Kansai dialect)'\r\n    },\r\n    amazing: {\r\n      japanese: '楽しんでね',\r\n      english: 'Amazing'\r\n    }\r\n  }), []);\r\n\r\n\r\n  /**\r\n   * ログアウトボタンクリック時のハンドラ\r\n   */\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false); // ログイン状態をfalseに設定\r\n  };\r\n\r\n  // SkyWay App ID と Secret Key\r\n  // 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\r\n  // サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\r\n  const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\r\n  const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\r\n\r\n  // SkyWay認証トークンの生成\r\n  const token = useMemo(() => {\r\n    if (appId == null || secretKey == null) return undefined;\r\n\r\n    return new SkyWayAuthToken({\r\n      jti: uuidV4(), // JWT ID\r\n      iat: nowInSec(), // 発行時刻\r\n      exp: nowInSec() + 60 * 60 * 24, // 有効期限 (24時間)\r\n      version: 3,\r\n      scope: {\r\n        appId: appId,\r\n        rooms: [\r\n          {\r\n            name: \"*\", // すべてのルーム名に適用\r\n            methods: [\"create\", \"close\", \"updateMetadata\"], // ルーム操作の権限\r\n            member: {\r\n              name: \"*\", // すべてのメンバーに適用\r\n              methods: [\"publish\", \"subscribe\", \"updateMetadata\"] // メンバー操作の権限\r\n            }\r\n          }],\r\n        turn: {\r\n          enabled: true // TURNサーバーの使用を許可 (NAT越えのため)\r\n        }\r\n      }\r\n    }).encode(secretKey);\r\n\r\n  }, [appId, secretKey]);\r\n\r\n  /**\r\n   * SkyWayContextの初期化とクリーンアップを行うuseEffect\r\n   * トークンが利用可能になったときに一度だけ実行されます。\r\n   */\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    let currentContext;\r\n    const initContext = async () => {\r\n      try {\r\n        currentContext = await SkyWayContext.Create(token);\r\n        setSkywayContext(currentContext);\r\n        console.log(\"SkyWayContext created successfully.\");\r\n      } catch (error) {\r\n        console.error(\"Failed to create SkyWayContext:\", error);\r\n      }\r\n    };\r\n\r\n    initContext();\r\n\r\n    // コンポーネントのアンマウント時にコンテキストを破棄\r\n    return () => {\r\n      if (currentContext) {\r\n        currentContext.dispose();\r\n        console.log(\"SkyWayContext disposed.\");\r\n      }\r\n    };\r\n  }, [token]); // tokenが変更されたときにのみ実行\r\n\r\n  /**\r\n   * リモートストリームをDOMに追加するヘルパー関数\r\n   * @param {RemoteVideoStream | RemoteAudioStream} stream - 追加するメディアストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\r\n  const attachRemoteStream = (stream, memberId) => {\r\n    if (robotDisplayRef.current && (stream instanceof RemoteVideoStream || stream instanceof RemoteAudioStream)) {\r\n      const video = document.createElement(\"video\");\r\n      video.autoplay = true; // 自動再生\r\n      video.playsInline = true; // インライン再生 (iOSなどで必要)\r\n      video.className = \"remote-video object-cover\"; // スタイリング用のクラスとobject-coverを追加\r\n      video.dataset.memberId = memberId; // メンバーIDをデータ属性に保存\r\n      stream.attach(video); // ストリームをビデオ要素のソースに設定\r\n      robotDisplayRef.current.appendChild(video);\r\n      remoteVideoElements.current.set(memberId, video);\r\n      console.log(`Attached stream from ${memberId} to DOM.`);\r\n    } else {\r\n      console.warn(`Attempted to attach non-media stream or robotDisplayRef is null for member ${memberId}.`);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * データストリームの受信を処理するヘルパー関数\r\n   * @param {RemoteDataStream} stream - 受信するデータストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\r\n  const handleDataStream = (stream, memberId) => {\r\n    if (stream instanceof RemoteDataStream) {\r\n      stream.onData.add((data) => {\r\n        console.log(`Received data from ${memberId}:`, data);\r\n        // 受信したメッセージを状態に追加\r\n        setReceivedMessages(prevMessages => [...prevMessages, { senderId: memberId, message: data }]);\r\n\r\n        // \"move_finish\" シグナルをチェック\r\n        if (data === \"move_finish\") {\r\n          console.log(\"Received 'move_finish' signal. Enabling side panel buttons.\");\r\n          setIsMoveInProgress(false); // モーション終了\r\n        }\r\n\r\n        // AI提案のフォーマットをチェック\r\n        // 新しいフォーマット \"ai_assist_1:data:ai_assist_2:data\" を解析\r\n        const aiCombinedSuggestionRegex = /^ai_assist_1:(.*):ai_assist_2:(.*)$/;\r\n        const combinedMatch = String(data).match(aiCombinedSuggestionRegex);\r\n\r\n        if (combinedMatch) {\r\n          const suggestion1Content = combinedMatch[1]; // キャプチャグループ1が最初の提案\r\n          const suggestion2Content = combinedMatch[2]; // キャプチャグループ2が2番目の提案\r\n\r\n          setAiSuggestions([\r\n            { key: 'ai_suggestion_1', text: suggestion1Content },\r\n            { key: 'ai_suggestion_2', text: suggestion2Content }\r\n          ]);\r\n          console.log(\"Received combined AI suggestions.\");\r\n        } else {\r\n          // 以前の単一提案フォーマットも考慮する場合（もし両方のフォーマットが混在する可能性があるなら）\r\n          const aiSingleSuggestionRegex = /^ai_assist_(\\d+):(.*)$/;\r\n          const singleMatch = String(data).match(aiSingleSuggestionRegex);\r\n\r\n          if (singleMatch) {\r\n            const suggestionNumber = parseInt(singleMatch[1], 10);\r\n            const suggestionContent = singleMatch[2];\r\n\r\n            if (suggestionNumber === 1 || suggestionNumber === 2) {\r\n              setAiSuggestions(prevSuggestions => {\r\n                const newSuggestions = [...prevSuggestions];\r\n                newSuggestions[suggestionNumber - 1] = {\r\n                  key: `ai_suggestion_${suggestionNumber}`,\r\n                  text: suggestionContent\r\n                };\r\n                return newSuggestions;\r\n              });\r\n              console.log(`Received single AI suggestion ${suggestionNumber}.`);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      console.log(`Listening for data from ${memberId}.`);\r\n    } else {\r\n      console.warn(`Attempted to handle non-data stream as data stream for member ${memberId}.`);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ルームに参加するハンドラ\r\n   * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\r\n   */\r\n  const handleJoinRoom = async () => {\r\n    if (!skywayContext) {\r\n      console.error(\"SkyWayContext is not initialized. Please wait or check token.\");\r\n      return;\r\n    }\r\n    if (!roomName) {\r\n      console.error(\"Room name is empty. Please enter a room name to join.\");\r\n      return;\r\n    }\r\n    if (skywayRoom && me) {\r\n      console.warn(\"Already in a room. Please leave the current room first.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 指定されたルーム名でP2Pルームを作成または検索\r\n      const room = await SkyWayRoom.FindOrCreate(skywayContext, {\r\n        type: \"p2p\", // P2Pルームタイプ\r\n        name: roomName,\r\n      });\r\n\r\n      // roomオブジェクトが有効であることを確認\r\n      if (!room) {\r\n        console.error(\"SkyWayRoom.FindOrCreate returned null or undefined room.\");\r\n        throw new Error(\"Failed to create or find SkyWayRoom.\");\r\n      }\r\n\r\n      setSkywayRoom(room);\r\n      console.log(`SkyWayRoom '${roomName}' found or created.`);\r\n\r\n      // ルームに参加し、自分のメンバー情報を取得\r\n      const localMember = await room.join();\r\n      // localMemberが有効であることを確認\r\n      if (!localMember) {\r\n        console.error(\"room.join() returned null or undefined localMember.\");\r\n        throw new Error(\"Failed to join the room.\");\r\n      }\r\n      setMe(localMember);\r\n      console.log(`Joined room '${roomName}' as member ID: ${localMember.id}`);\r\n      // ルームIDと自分のIDをコンソールに表示\r\n      console.log(`Room ID: ${roomName} / My ID: ${localMember.id}`);\r\n\r\n\r\n      // 自分のカメラとマイクのストリームを作成し、公開\r\n      const { audio, video } = await SkyWayStreamFactory.createMicrophoneAudioAndCameraStream();\r\n      localStreamRef.current = video; // ローカルビデオストリームを保存\r\n      await localMember.publish(video);\r\n      const publication_audio = await localMember.publish(audio);\r\n      audioPublicationRef.current = publication_audio; // オーディオPublicationを保存\r\n      setIsMuted(false);\r\n      console.log(\"Published local camera and microphone stream.\");\r\n\r\n      // 自分のデータストリームを作成し、公開\r\n      const dataStream = await SkyWayStreamFactory.createDataStream();\r\n      localDataStreamRef.current = dataStream; // ローカルデータストリームを保存\r\n      await localMember.publish(dataStream);\r\n      console.log(\"Published local data stream.\");\r\n\r\n      // ルーム参加時はボタンを有効にする（モーションはまだ始まっていないため）\r\n      setIsMoveInProgress(false);\r\n\r\n\r\n      // --- 既存のストリームを購読するロジック ---\r\n      // ルーム内の既存の公開ストリームをすべて購読する\r\n      for (const publication of room.publications) {\r\n        // 自分のストリームは購読しない\r\n        if (localMember.id === publication.publisher.id) {\r\n          continue;\r\n        }\r\n        try {\r\n          const { stream } = await localMember.subscribe(publication.id);\r\n          console.log(`Subscribed to existing stream from ${publication.publisher.id}, type: ${publication.contentType}`);\r\n\r\n          if (publication.contentType === 'video' || publication.contentType === 'audio') {\r\n            attachRemoteStream(stream, publication.publisher.id);\r\n          } else if (publication.contentType === 'data') {\r\n            handleDataStream(stream, publication.publisher.id);\r\n          } else {\r\n            console.warn(`Unknown stream content type: ${publication.contentType} from ${publication.publisher.id}`);\r\n          }\r\n        } catch (subscribeError) {\r\n          console.error(`Failed to subscribe to existing stream from ${publication.publisher.id}:`, subscribeError);\r\n        }\r\n      }\r\n\r\n      // --- ルームイベントリスナーの設定 ---\r\n\r\n      // メンバーがルームに参加したときのイベント\r\n      if (room.onMemberJoined) {\r\n        room.onMemberJoined.add((e) => {\r\n          console.log(`Member joined: ${e.member.id}`);\r\n        });\r\n      } else {\r\n        console.error(\"room.onMemberJoined is undefined. This is unexpected.\");\r\n      }\r\n\r\n      // メンバーがルームを離脱したときのイベント\r\n      if (room.onMemberLeft) {\r\n        room.onMemberLeft.add((e) => {\r\n          console.log(`Member left: ${e.member.id}`);\r\n          // 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\r\n          const videoElement = remoteVideoElements.current.get(e.member.id);\r\n          if (videoElement && robotDisplayRef.current) {\r\n            robotDisplayRef.current.removeChild(videoElement);\r\n            remoteVideoElements.current.delete(e.member.id);\r\n            console.log(`Removed video for member ${e.member.id}`);\r\n          }\r\n          // データストリーム関連のクリーンアップもここに追加可能ですが、\r\n          // onDataリスナーはストリームが閉じられると自動的に停止します。\r\n        });\r\n      } else {\r\n        console.error(\"room.onMemberLeft is undefined. This is unexpected.\");\r\n      }\r\n\r\n      // ストリームが公開されたときのイベント\r\n      if (room.onStreamPublished) {\r\n        room.onStreamPublished.add(async (e) => {\r\n          console.log(`Stream published by ${e.publication.publisher.id}, type: ${e.publication.contentType}`);\r\n          // 自分のストリームは購読しない\r\n          if (localMember.id !== e.publication.publisher.id) {\r\n            try {\r\n              // リモートストリームを購読\r\n              const { stream } = await localMember.subscribe(e.publication.id);\r\n              console.log(`Subscribed to stream from ${e.publication.publisher.id}`);\r\n\r\n              if (e.publication.contentType === 'video' || e.publication.contentType === 'audio') {\r\n                attachRemoteStream(stream, e.publication.publisher.id);\r\n              } else if (e.publication.contentType === 'data') {\r\n                handleDataStream(stream, e.publication.publisher.id);\r\n              } else {\r\n                console.warn(`Unknown stream content type: ${e.publication.contentType} from ${e.publication.publisher.id}`);\r\n              }\r\n            } catch (subscribeError) {\r\n              console.error(`Failed to subscribe to stream from ${e.publication.publisher.id}:`, subscribeError);\r\n            }\r\n          } else {\r\n            console.log(`Skipping subscription for own stream: ${e.publication.publisher.id}`);\r\n          }\r\n        });\r\n      } else {\r\n        console.error(\"room.onStreamPublished is undefined. This is unexpected.\");\r\n      }\r\n\r\n      // ストリームが非公開になったときのイベント\r\n      if (room.onStreamUnpublished) {\r\n        room.onStreamUnpublished.add((e) => {\r\n          console.log(`Stream unpublished by ${e.publication.publisher.id}`);\r\n          // 該当ストリームのビデオ要素をDOMから削除し、Mapからも削除\r\n          const videoElement = remoteVideoElements.current.get(e.publication.publisher.id);\r\n          if (videoElement && robotDisplayRef.current) {\r\n            robotDisplayRef.current.removeChild(videoElement);\r\n            remoteVideoElements.current.delete(e.publication.publisher.id);\r\n            console.log(`Removed unpublished video for member ${e.publication.publisher.id}`);\r\n          }\r\n        });\r\n      } else {\r\n        console.error(\"room.onStreamUnpublished is undefined. This is unexpected.\");\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Failed to join room:\", error);\r\n      // エラー発生時に状態をリセットして再試行可能にする\r\n      setSkywayRoom(null);\r\n      setMe(null);\r\n      // エラー時に既存のビデオ要素をクリーンアップ\r\n      if (robotDisplayRef.current) {\r\n        Array.from(robotDisplayRef.current.children).forEach(child => {\r\n          if (child.tagName === 'VIDEO') {\r\n            // ビデオ要素のsrcObjectをクリアし、トラックを停止\r\n            if (child.srcObject && typeof child.srcObject.getTracks === 'function') {\r\n              child.srcObject.getTracks().forEach(track => track.stop());\r\n              child.srcObject = null;\r\n            }\r\n            child.remove(); // DOMから要素を削除\r\n          }\r\n        });\r\n      }\r\n      remoteVideoElements.current.clear();\r\n      if (localStreamRef.current) {\r\n        // LocalVideoStreamのstop()メソッドを呼び出す\r\n        if (typeof localStreamRef.current.stop === 'function') {\r\n          localStreamRef.current.stop();\r\n          console.log(\"Stopped local media stream during join error cleanup.\");\r\n        } else {\r\n          console.warn(\"localStreamRef.current is not a valid LocalVideoStream or stop is not a function during join error cleanup.\");\r\n        }\r\n        localStreamRef.current = null;\r\n      }\r\n      // LocalDataStreamは自動的にクリーンアップされるため、明示的なclose()は不要\r\n      localDataStreamRef.current = null; // 参照をクリア\r\n      console.log(\"Local data stream reference cleared during join error cleanup.\");\r\n\r\n      // ミュート状態もリセット\r\n      setIsMuted(false);\r\n      audioPublicationRef.current = null;\r\n      setIsMoveInProgress(false); // エラー時もモーション状態をリセット\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ルームから退出するハンドラ\r\n   */\r\n  const handleLeaveRoom = async () => {\r\n    if (skywayRoom && me) {\r\n      try {\r\n        // ローカルストリームを停止し、公開を解除\r\n        if (localStreamRef.current) {\r\n          // LocalVideoStreamのstop()メソッドを呼び出す\r\n          if (typeof localStreamRef.current.stop === 'function') {\r\n            localStreamRef.current.stop();\r\n            console.log(\"Stopped local media stream.\");\r\n          } else {\r\n            console.warn(\"localStreamRef.current is not a valid LocalVideoStream or stop is not a function during leave.\");\r\n          }\r\n          localStreamRef.current = null;\r\n        }\r\n        // LocalDataStreamは自動的にクリーンアップされるため、明示的なclose()は不要\r\n        localDataStreamRef.current = null; // 参照をクリア\r\n        console.log(\"Local data stream reference cleared.\");\r\n\r\n        // オーディオPublicationの参照をクリア\r\n        audioPublicationRef.current = null;\r\n        setIsMuted(false); // ミュート状態をリセット\r\n\r\n        await me.leave(); // ルームから退出\r\n        console.log(`Left room '${roomName}'`);\r\n        // ルーム退出をコンソールに表示\r\n        console.log(`Left room: ${roomName}`);\r\n\r\n\r\n        // room.dispose()を使用\r\n        if (skywayRoom) {\r\n          await skywayRoom.dispose(); // ルームを閉じる (これはルームの作成者のみが効果的です)\r\n          console.log(\"SkyWay Room disposed.\");\r\n        }\r\n        // SkyWay SDKに関するすべての操作が不要になった場合にcontext.dispose()を呼び出す\r\n        // このコンポーネントがアンマウントされる際にuseEffectのクリーンアップ関数で処理されるため、ここでは呼び出さない\r\n\r\n      } catch (error) {\r\n        console.error(\"Failed to leave room:\", error);\r\n      } finally {\r\n        // 状態をリセット\r\n        setMe(null);\r\n        setSkywayRoom(null);\r\n        setReceivedMessages([]); // 受信メッセージもクリア\r\n        // すべてのリモートビデオ要素をDOMから削除\r\n        if (robotDisplayRef.current) {\r\n          Array.from(robotDisplayRef.current.children).forEach(child => {\r\n            if (child.tagName === 'VIDEO') {\r\n              // ビデオ要素のsrcObjectをクリアし、トラックを停止\r\n              if (child.srcObject && typeof child.srcObject.getTracks === 'function') {\r\n                child.srcObject.getTracks().forEach(track => track.stop());\r\n                child.srcObject = null;\r\n              }\r\n              child.remove(); // DOMから要素を削除\r\n            }\r\n          });\r\n        }\r\n        remoteVideoElements.current.clear();\r\n        // AIモードもオフにする\r\n        setIsAiModeOn(false);\r\n        setAiSuggestions([null, null]); // 提案もクリア\r\n        setIsMoveInProgress(false); // ルーム退出時もモーション状態をリセット\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * モーションを操作するボタンを押した時の処理\r\n   * @param {string | object} messageOrKey - 送信するメッセージのキー (messagesオブジェクトのキー) またはAI提案オブジェクト\r\n   */\r\n  const handleSend = async (messageOrKey) => {\r\n    if (me && skywayRoom && localDataStreamRef.current) {\r\n      try {\r\n        let messageToSend;\r\n        let shouldSetMoveInProgress = false; // モーション進行中フラグを制御するための新しい変数\r\n\r\n        if (typeof messageOrKey === 'string') {\r\n          // サイドボタンからの送信の場合、直接メッセージ文字列を使用\r\n          if (messageOrKey.startsWith(\"template_motion_\")) {\r\n            messageToSend = messageOrKey;\r\n            shouldSetMoveInProgress = true; // モーションコマンドの場合のみフラグを立てる\r\n          } else if (messageOrKey.startsWith(\"template_voice_\")) {\r\n            messageToSend = messageOrKey;\r\n            // ボイスコマンドの場合はshouldSetMoveInProgressをtrueにしない\r\n          } else {\r\n            // 既存のmessagesオブジェクトからのルックアップ (AI提案以外でキーが渡された場合など)\r\n            messageToSend = messages[messageOrKey]?.[currentLanguage];\r\n          }\r\n        } else if (typeof messageOrKey === 'object' && messageOrKey.text) {\r\n          // AI提案ボタンからの送信\r\n          // ここでAI提案のキーに基づいて特定のシグナルを送信する\r\n          if (messageOrKey.key === 'ai_suggestion_1') {\r\n            messageToSend = \"ai_assist_1\"; // 変更: \"ai_suggestion_1_selected\" から \"ai_assist_1\" へ\r\n          } else if (messageOrKey.key === 'ai_suggestion_2') {\r\n            messageToSend = \"ai_assist_2\"; // 変更: \"ai_suggestion_2_selected\" から \"ai_assist_2\" へ\r\n          } else {\r\n            console.warn(\"Unknown AI suggestion key:\", messageOrKey.key);\r\n            return; // 未知のキーの場合は送信せずに終了\r\n          }\r\n          // AI提案の場合はshouldSetMoveInProgressをtrueにしない\r\n        }\r\n\r\n        if (!messageToSend) {\r\n          console.warn(`Message to send is empty or not found.`);\r\n          return;\r\n        }\r\n\r\n        localDataStreamRef.current.write(messageToSend);\r\n        console.log(`Sent message: \"${messageToSend}\"`);\r\n        // 送信したメッセージも自身の画面に表示\r\n        setReceivedMessages(prevMessages => [...prevMessages, { senderId: me.id, message: messageToSend, isLocal: true }]);\r\n        setAiSuggestions([null, null]); // 送信したら提案をクリア\r\n\r\n        // shouldSetMoveInProgressがtrueの場合のみモーション進行中状態にする\r\n        if (shouldSetMoveInProgress) {\r\n          setIsMoveInProgress(true);\r\n        }\r\n        // AI提案やボイスコマンドの場合は、isMoveInProgressは変更しない\r\n        // (以前のモーションが進行中であればそのまま、そうでなければfalseのまま)\r\n\r\n      } catch (error) {\r\n        console.error(\"Failed to send data:\", error);\r\n      }\r\n    } else {\r\n      console.warn(\"Cannot send message: Not in a room, 'me' object is not available, or data stream is not ready.\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * マイクのミュート/ミュート解除を切り替えるハンドラ\r\n   */\r\n  const handleMute = async () => {\r\n    console.log(\"start\");\r\n    if (!audioPublicationRef.current) {\r\n      console.warn(\"Audio publication not available. Cannot toggle mute.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (isMuted) {\r\n        // 現在ミュート状態なら、ミュートを解除\r\n        await audioPublicationRef.current.enable();\r\n        console.log(\"Microphone unmuted.\");\r\n      } else {\r\n        // 現在ミュート状態でないなら、ミュート\r\n        await audioPublicationRef.current.disable();\r\n        console.log(\"Microphone muted.\");\r\n      }\r\n      setIsMuted(!isMuted); // ミュート状態をトグル\r\n    } catch (error) {\r\n      console.error(\"Failed to toggle microphone mute state:\", error);\r\n    }\r\n  };\r\n\r\n  // AIモードが変更されたときにシグナルを送信するためのフラグ\r\n  const isInitialAiModeRender = useRef(true);\r\n\r\n  /**\r\n   * AIモードの状態変更を監視し、シグナルを送信するuseEffect\r\n   */\r\n  useEffect(() => {\r\n    // 初回レンダリング時はシグナルを送信しない\r\n    if (isInitialAiModeRender.current) {\r\n      isInitialAiModeRender.current = false;\r\n      return;\r\n    }\r\n\r\n    // me オブジェクトとデータストリームが利用可能であることを確認\r\n    if (!me || !localDataStreamRef.current) {\r\n      return;\r\n    }\r\n\r\n    if (isAiModeOn) {\r\n      // AIモードがONになったら、AIに提案を要求するメッセージを送信\r\n      localDataStreamRef.current.write(\"ai_assist_on\");\r\n      console.log(\"Sent AI_MODE_REQUEST_SUGGESTIONS signal.\");\r\n      setAiSuggestions([null, null]); // 新しいセッションのために提案をクリア\r\n    } else {\r\n      // AIモードがOFFになったら提案をクリアし、AIモード終了のシグナルを送信\r\n      localDataStreamRef.current.write(\"ai_assist_off\");\r\n      console.log(\"Sent AI_MODE_OFF_SIGNAL.\");\r\n      setAiSuggestions([null, null]); // 提案をクリア\r\n    }\r\n  }, [isAiModeOn, me, localDataStreamRef]); // isAiModeOn, me, localDataStreamRef の変更に反応\r\n\r\n  /**\r\n   * 言語を切り替えるハンドラ\r\n   */\r\n  const handleToggleLanguage = () => {\r\n    setCurrentLanguage(prevLang => (prevLang === 'japanese' ? 'english' : 'japanese'));\r\n  };\r\n\r\n  /**\r\n   * AIモードを切り替えるハンドラ\r\n   * この関数はAIモードの状態をトグルするのみで、シグナル送信はuseEffectに任せる\r\n   */\r\n  const handleAiModeToggle = () => {\r\n    setIsAiModeOn(prev => !prev);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"header\">\r\n        <div className=\"header-left\">\r\n          <button className=\"motion-btn\" disabled={isAiModeOn || isMoveInProgress}>モーション</button>\r\n          <span className=\"robot-status\">\r\n            操作しているロボット：RX78-myakumyaku\r\n          </span>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\r\n          <button className=\"voice-btn\" disabled={isAiModeOn || isMoveInProgress}>ボイス</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-container\">\r\n        <div className=\"side-panel\">\r\n          <div className=\"side-panel-content\">\r\n            {Object.keys(messages).slice(0, 17).map(key => ( // 左側のボタン数を調整\r\n              <button\r\n                key={key}\r\n                // 左側のボタンは \"template_motion_〇〇\" 形式で送信\r\n                onClick={() => handleSend(`template_motion_${messages[key].japanese}`)}\r\n                className=\"side-btn\"\r\n                disabled={isAiModeOn || !me || isMoveInProgress} // AIモード中、未参加、モーション中は無効化\r\n              >\r\n                {messages[key].japanese} {/* 常に日本語表示 */}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"main-area\">\r\n          <div className=\"room-controls\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"ルーム名を入力\"\r\n              value={roomName}\r\n              onChange={(e) => setRoomName(e.target.value)}\r\n              className=\"room-input\"\r\n              disabled={!!me} // ルーム参加中は入力不可にする\r\n            />\r\n            {!me ? ( // ルームに参加していない場合\r\n              <button onClick={handleJoinRoom} className=\"join-room-btn\" disabled={!skywayContext || !roomName}>\r\n                ルームに参加\r\n              </button>\r\n            ) : ( // ルームに参加している場合\r\n              <button onClick={handleLeaveRoom} className=\"leave-room-btn\">\r\n                ルームを退出\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className=\"robot-display\" ref={robotDisplayRef}>\r\n            {/* リモートのビデオストリームがここに動的に追加されます */}\r\n            {/* ルーム情報はコンソールに表示されるため、ここでは表示しません */}\r\n\r\n            {/* AIからの提案表示 */}\r\n            {(aiSuggestions[0] || aiSuggestions[1]) && (\r\n              <div className=\"ai-suggestions\">\r\n                {aiSuggestions[0] && (\r\n                  <button\r\n                    onClick={() => handleSend(aiSuggestions[0])}\r\n                    className=\"ai-suggestion-btn\"\r\n                    disabled={isMoveInProgress} // モーション中は無効化\r\n                  >\r\n                    {aiSuggestions[0].text}\r\n                  </button>\r\n                )}\r\n                {aiSuggestions[1] && (\r\n                  <button\r\n                    onClick={() => handleSend(aiSuggestions[1])}\r\n                    className=\"ai-suggestion-btn\"\r\n                    disabled={isMoveInProgress} // モーション中は無効化\r\n                  >\r\n                    {aiSuggestions[1].text}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"side-panel right\">\r\n          <div className=\"side-panel-content\">\r\n            {Object.keys(messages).slice(14).map(key => ( // 右側のボタン数を調整\r\n              <button\r\n                key={key}\r\n                // 右側のボタンは \"template_voice_〇〇\" 形式で送信\r\n                onClick={() => handleSend(`template_voice_${messages[key].japanese}`)}\r\n                className=\"side-btn\"\r\n                disabled={isAiModeOn || !me || isMoveInProgress} // AIモード中、未参加、モーション中は無効化\r\n              >\r\n                {messages[key].japanese} {/* 常に日本語表示 */}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom-controls\">\r\n        <button\r\n          className={`control-btn ai-btn ${isAiModeOn ? 'ai-mode-on' : ''}`}\r\n          onClick={handleAiModeToggle}\r\n          disabled={!me} // ルームに参加していない場合は無効\r\n        >\r\n          🤖 AIモード {isAiModeOn ? 'ON' : 'OFF'}\r\n        </button>\r\n        <button\r\n          className={`control-btn mic-btn ${isMuted ? 'muted' : ''}`} // ミュート状態に応じてクラスを追加\r\n          onClick={handleMute}\r\n          id=\"micBtn\"\r\n          disabled={!me || !audioPublicationRef.current || isAiModeOn} // ルームに参加していない、またはオーディオが公開されていない、AIモード中は無効\r\n        >\r\n          {isMuted ? '🔇 マイクミュート' : '🎤 マイクON'} {/* ミュート状態に応じてアイコンとテキストを変更 */}\r\n        </button>\r\n        <button className=\"control-btn manual-btn\" id=\"manualBtn\" disabled={isAiModeOn || isMoveInProgress}>\r\n          📋 マニュアル\r\n        </button>\r\n        <button\r\n          className=\"control-btn greeting-btn\"\r\n          id=\"languageBtn\"\r\n          onClick={handleToggleLanguage} // 言語切り替えハンドラを設定\r\n          disabled={isAiModeOn || isMoveInProgress} // AIモード中、モーション中は無効化\r\n        >\r\n          👋 {currentLanguage === 'japanese' ? 'にほんご' : 'English'} {/* 現在の言語に応じてボタンのテキストを変更 */}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}