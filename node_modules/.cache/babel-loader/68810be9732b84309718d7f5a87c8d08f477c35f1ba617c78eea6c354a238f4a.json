{"ast":null,"code":"var _jsxFileName = \"C:\\\\banpaku_2025\\\\banpaku_web_Another-version\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * ログインフォームコンポーネント\n * @param {object} props - プロパティ\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setIsLoggedIn\n}) {\n  _s();\n  // ユーザー名とパスワードの状態を管理\n  const [password, setPassword] = useState('');\n  // 画面遷移のためのnavigateフック\n  const navigate = useNavigate();\n\n  /**\n   * フォーム送信時のハンドラ\n   * @param {object} e - イベントオブジェクト\n   */\n  const handleSubmit = e => {\n    e.preventDefault(); // デフォルトのフォーム送信を防ぐ\n\n    // ここで実際の認証ロジックを実装します\n    // 例: ユーザー名が 'user' でパスワードが 'password' の場合に認証成功とみなす\n    if (password === 'password') {\n      setIsLoggedIn(true); // ログイン状態をtrueに設定\n      navigate('/home'); // ログイン成功後、/home へ遷移\n    } else {\n      // 認証失敗時のメッセージ表示（alertの代わりにカスタムモーダルを使用することを推奨）\n      alert('パスワードが異なります。');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-md w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6 text-center text-gray-800\",\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            htmlFor: \"password\",\n            children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline w-full transition duration-300 ease-in-out\",\n          children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"4HFxR80caG41yat8KJRT4Mye14U=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","setIsLoggedIn","_s","password","setPassword","navigate","handleSubmit","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/banpaku_2025/banpaku_web_Another-version/src/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\n/**\n * ログインフォームコンポーネント\n * @param {object} props - プロパティ\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\n */\nfunction Login({ setIsLoggedIn }) {\n  // ユーザー名とパスワードの状態を管理\n  const [password, setPassword] = useState('');\n  // 画面遷移のためのnavigateフック\n  const navigate = useNavigate();\n\n  /**\n   * フォーム送信時のハンドラ\n   * @param {object} e - イベントオブジェクト\n   */\n  const handleSubmit = (e) => {\n    e.preventDefault(); // デフォルトのフォーム送信を防ぐ\n\n    // ここで実際の認証ロジックを実装します\n    // 例: ユーザー名が 'user' でパスワードが 'password' の場合に認証成功とみなす\n    if ( password === 'password') {\n      setIsLoggedIn(true); // ログイン状態をtrueに設定\n      navigate('/home'); // ログイン成功後、/home へ遷移\n    } else {\n      // 認証失敗時のメッセージ表示（alertの代わりにカスタムモーダルを使用することを推奨）\n      alert('パスワードが異なります。');\n    }\n  };\n\n  \n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n      <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\n        <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">ログイン</h2>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n              パスワード:\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline w-full transition duration-300 ease-in-out\"\n          >\n            ログイン\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;;AAG9C;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,SAASC,KAAKA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAChC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;AACF;AACA;AACA;EACE,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpB;IACA;IACA,IAAKL,QAAQ,KAAK,UAAU,EAAE;MAC5BF,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;MACrBI,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACL;MACAI,KAAK,CAAC,cAAc,CAAC;IACvB;EACF,CAAC;EAID,oBACEV,OAAA;IAAKW,SAAS,EAAC,2DAA2D;IAAAC,QAAA,eACxEZ,OAAA;MAAKW,SAAS,EAAC,mDAAmD;MAAAC,QAAA,gBAChEZ,OAAA;QAAIW,SAAS,EAAC,mDAAmD;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3EhB,OAAA;QAAMiB,QAAQ,EAAEV,YAAa;QAACI,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAEjDZ,OAAA;UAAAY,QAAA,gBACEZ,OAAA;YAAOW,SAAS,EAAC,4CAA4C;YAACO,OAAO,EAAC,UAAU;YAAAN,QAAA,EAAC;UAEjF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRhB,OAAA;YACEmB,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,UAAU;YACbC,KAAK,EAAEjB,QAAS;YAChBkB,QAAQ,EAAGd,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;YAC7CG,QAAQ;YACRb,SAAS,EAAC;UAAiI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5I,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNhB,OAAA;UACEmB,IAAI,EAAC,QAAQ;UACbR,SAAS,EAAC,4JAA4J;UAAAC,QAAA,EACvK;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CAvDQF,KAAK;EAAA,QAIKH,WAAW;AAAA;AAAA2B,EAAA,GAJrBxB,KAAK;AAyDd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}