{"ast":null,"code":"var _jsxFileName = \"C:\\\\banpaku_2025\\\\banpaku\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport './style.css'; // style.cssを再度有効化\nimport { nowInSec, SkyWayAuthToken, SkyWayContext, SkyWayRoom, SkyWayStreamFactory, uuidV4, RemoteDataStream,\n// RemoteDataStreamをインポート\nRemoteVideoStream,\n// RemoteVideoStreamをインポート\nRemoteAudioStream // RemoteAudioStreamをインポート\n} from '@skyway-sdk/room';\n\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({\n  setIsLoggedIn\n}) {\n  _s();\n  // ルーム名\n  const [roomName, setRoomName] = useState(\"\");\n  // 自分の参加者情報 (ルームに参加すると設定されます)\n  const [me, setMe] = useState(null);\n  // SkyWayコンテキストのインスタンス\n  const [skywayContext, setSkywayContext] = useState(null);\n  // SkyWayルームのインスタンス\n  const [skywayRoom, setSkywayRoom] = useState(null);\n  // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\n  const remoteVideoElements = useRef(new Map());\n  // リモートビデオを表示するDOM要素への参照\n  const robotDisplayRef = useRef(null);\n  // ローカルストリームの参照を保持\n  const localStreamRef = useRef(null);\n  // 受信したメッセージを表示するための状態\n  // src/home.js\n  // eslint-disable-next-line no-unused-vars\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  // 送信したデータストリームの参照を保持\n  const localDataStreamRef = useRef(null); // LocalDataStreamの参照を保持\n  // マイクの状態を表示するための状態 (ミュート状態を管理)\n  const [isMuted, setIsMuted] = useState(false);\n  // オーディオストリームのPublicationを保持するための参照\n  const audioPublicationRef = useRef(null);\n  // 現在の言語状態 ('japanese' または 'english')\n  const [currentLanguage, setCurrentLanguage] = useState('japanese');\n  // AIモードがONかどうかを管理する状態\n  const [isAiModeOn, setIsAiModeOn] = useState(false);\n  // AIからの提案を保持する状態\n  // { key: 'ai_assist_1', text: '提案内容' } の形式で格納\n  const [aiSuggestions, setAiSuggestions] = useState([null, null]); // 2つの提案を保持するため、初期値をnullで埋める\n  // モーションが進行中かどうかを管理する状態\n  const [isMoveInProgress, setIsMoveInProgress] = useState(false);\n\n  // メッセージとモーションの多言語マッピング\n  const messages = useMemo(() => ({\n    hello: {\n      japanese: 'リセット',\n      english: 'Hello'\n    },\n    goodbye: {\n      japanese: '決めポーズ',\n      english: 'Goodbye'\n    },\n    bow: {\n      japanese: 'バイバイ',\n      english: 'Bow'\n    },\n    flap: {\n      japanese: 'YES',\n      english: 'Flap'\n    },\n    lookUp: {\n      japanese: 'NO',\n      english: 'Look up'\n    },\n    lookDown: {\n      japanese: '右手を上げる',\n      english: 'Look down'\n    },\n    lookRight: {\n      japanese: '右手を下げる',\n      english: 'Look right'\n    },\n    lookLeft: {\n      japanese: '左手を上げる',\n      english: 'Left hand up' // Changed from 'Look left' for clarity\n    },\n    nod: {\n      japanese: '左手を下げる',\n      english: 'Left hand down' // Changed from 'Nod' for clarity\n    },\n    tiltHead: {\n      japanese: '上を向く',\n      english: 'Look up' // Changed from 'Tilt head' for clarity\n    },\n    spin: {\n      japanese: '下を向く',\n      english: 'Look down' // Changed from 'Spin' for clarity\n    },\n    jump: {\n      japanese: '右を向く',\n      english: 'Look right' // Changed from 'Jump' for clarity\n    },\n    dance: {\n      japanese: '左を向く',\n      english: 'Look left' // Changed from 'Dance' for clarity\n    },\n    bowDeep: {\n      japanese: 'パタパタ',\n      english: 'Flap arms' // Changed from 'Deep bow' for clarity\n    },\n    doingSomething: {\n      japanese: 'こんにちは',\n      english: 'Hello'\n    },\n    thankYou: {\n      japanese: 'バイバイ',\n      english: 'Goodbye' // Changed from 'Thank you' for clarity\n    },\n    good: {\n      japanese: 'ようこそ',\n      english: 'Welcome' // Changed from 'Good' for clarity\n    },\n    ookini: {\n      japanese: 'ありがとう',\n      english: 'Thank you (Kansai dialect)'\n    },\n    amazing: {\n      japanese: '楽しんでね',\n      english: 'Enjoy' // Changed from 'Amazing' for clarity\n    }\n  }), []);\n\n  /**\r\n   * ログアウトボタンクリック時のハンドラ\r\n   */\n  const handleLogout = () => {\n    setIsLoggedIn(false); // ログイン状態をfalseに設定\n  };\n\n  // SkyWay App ID と Secret Key\n  // 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\n  // サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\n  const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\n  const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\n\n  // SkyWay認証トークンの生成\n  const token = useMemo(() => {\n    if (appId == null || secretKey == null) return undefined;\n    return new SkyWayAuthToken({\n      jti: uuidV4(),\n      // JWT ID\n      iat: nowInSec(),\n      // 発行時刻\n      exp: nowInSec() + 60 * 60 * 24,\n      // 有効期限 (24時間)\n      version: 3,\n      scope: {\n        appId: appId,\n        rooms: [{\n          name: \"*\",\n          // すべてのルーム名に適用\n          methods: [\"create\", \"close\", \"updateMetadata\"],\n          // ルーム操作の権限\n          member: {\n            name: \"*\",\n            // すべてのメンバーに適用\n            methods: [\"publish\", \"subscribe\", \"updateMetadata\"] // メンバー操作の権限\n          }\n        }],\n        turn: {\n          enabled: true // TURNサーバーの使用を許可 (NAT越えのため)\n        }\n      }\n    }).encode(secretKey);\n  }, [appId, secretKey]);\n\n  /**\r\n   * SkyWayContextの初期化とクリーンアップを行うuseEffect\r\n   * トークンが利用可能になったときに一度だけ実行されます。\r\n   */\n  useEffect(() => {\n    if (!token) return;\n    let currentContext;\n    const initContext = async () => {\n      try {\n        currentContext = await SkyWayContext.Create(token);\n        setSkywayContext(currentContext);\n        console.log(\"SkyWayContext created successfully.\");\n      } catch (error) {\n        console.error(\"Failed to create SkyWayContext:\", error);\n      }\n    };\n    initContext();\n\n    // コンポーネントのアンマウント時にコンテキストを破棄\n    return () => {\n      if (currentContext) {\n        currentContext.dispose();\n        console.log(\"SkyWayContext disposed.\");\n      }\n    };\n  }, [token]); // tokenが変更されたときにのみ実行\n\n  /**\r\n   * リモートストリームをDOMに追加するヘルパー関数\r\n   * @param {RemoteVideoStream | RemoteAudioStream} stream - 追加するメディアストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\n  const attachRemoteStream = (stream, memberId) => {\n    if (robotDisplayRef.current && (stream instanceof RemoteVideoStream || stream instanceof RemoteAudioStream)) {\n      // 既存のビデオ要素を探す\n      let video = remoteVideoElements.current.get(memberId);\n      if (!video) {\n        // 既存のビデオ要素がなければ新しく作成\n        video = document.createElement(\"video\");\n        video.autoplay = true; // 自動再生\n        video.playsInline = true; // インライン再生 (iOSなどで必要)\n        video.className = \"remote-video object-cover\"; // スタイリング用のクラスとobject-coverを追加\n        video.dataset.memberId = memberId; // メンバーIDをデータ属性に保存\n        robotDisplayRef.current.appendChild(video);\n        remoteVideoElements.current.set(memberId, video);\n        console.log(`Created and appended video element for member ${memberId}.`);\n      }\n\n      // 既存または新しいビデオ要素にストリームをアタッチ\n      stream.attach(video);\n      console.log(`Attached stream from ${memberId} to DOM.`);\n    } else {\n      console.warn(`Attempted to attach non-media stream or robotDisplayRef is null for member ${memberId}.`);\n    }\n  };\n\n  /**\r\n   * データストリームの受信を処理するヘルパー関数\r\n   * @param {RemoteDataStream} stream - 受信するデータストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\n  const handleDataStream = (stream, memberId) => {\n    if (stream instanceof RemoteDataStream) {\n      stream.onData.add(data => {\n        console.log(`Received data from ${memberId}:`, data);\n        // 受信したメッセージを状態に追加\n        setReceivedMessages(prevMessages => [...prevMessages, {\n          senderId: memberId,\n          message: data\n        }]);\n\n        // \"move_finish\" シグナルをチェック\n        if (data === \"move_finish\") {\n          console.log(\"Received 'move_finish' signal. Enabling side panel buttons.\");\n          setIsMoveInProgress(false); // モーション終了\n        }\n\n        // AI提案のフォーマットをチェック\n        // 新しいフォーマット \"ai_assist_1:data:ai_assist_2:data\" を解析\n        const aiCombinedSuggestionRegex = /^ai_assist_1:(.*):ai_assist_2:(.*)$/;\n        const combinedMatch = String(data).match(aiCombinedSuggestionRegex);\n        if (combinedMatch) {\n          const suggestion1Content = combinedMatch[1]; // キャプチャグループ1が最初の提案\n          const suggestion2Content = combinedMatch[2]; // キャプチャグループ2が2番目の提案\n\n          setAiSuggestions([{\n            key: 'ai_assist_1',\n            text: suggestion1Content\n          },\n          // キーをai_assist_1に修正\n          {\n            key: 'ai_assist_2',\n            text: suggestion2Content\n          } // キーをai_assist_2に修正\n          ]);\n          console.log(\"Received combined AI suggestions.\");\n        } else {\n          // 以前の単一提案フォーマットも考慮する場合（もし両方のフォーマットが混在する可能性があるなら）\n          const aiSingleSuggestionRegex = /^ai_assist_(\\d+):(.*)$/;\n          const singleMatch = String(data).match(aiSingleSuggestionRegex);\n          if (singleMatch) {\n            const suggestionNumber = parseInt(singleMatch[1], 10);\n            const suggestionContent = singleMatch[2];\n            if (suggestionNumber === 1 || suggestionNumber === 2) {\n              setAiSuggestions(prevSuggestions => {\n                const newSuggestions = [...prevSuggestions];\n                newSuggestions[suggestionNumber - 1] = {\n                  key: `ai_assist_${suggestionNumber}`,\n                  // キーをai_assist_Nに修正\n                  text: suggestionContent\n                };\n                return newSuggestions;\n              });\n              console.log(`Received single AI suggestion ${suggestionNumber}.`);\n            }\n          }\n        }\n      });\n      console.log(`Listening for data from ${memberId}.`);\n    } else {\n      console.warn(`Attempted to handle non-data stream as data stream for member ${memberId}.`);\n    }\n  };\n\n  /**\r\n   * ルームに参加するハンドラ\r\n   * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\r\n   */\n  const handleJoinRoom = async () => {\n    if (!skywayContext) {\n      console.error(\"SkyWayContext is not initialized. Please wait or check token.\");\n      return;\n    }\n    if (!roomName) {\n      console.error(\"Room name is empty. Please enter a room name to join.\");\n      return;\n    }\n    if (skywayRoom && me) {\n      console.warn(\"Already in a room. Please leave the current room first.\");\n      return;\n    }\n    try {\n      // 指定されたルーム名でP2Pルームを作成または検索\n      const room = await SkyWayRoom.FindOrCreate(skywayContext, {\n        type: \"p2p\",\n        // P2Pルームタイプ\n        name: roomName\n      });\n      // roomオブジェクトが有効であることを確認\n      if (!room) {\n        console.error(\"SkyWayRoom.FindOrCreate returned null or undefined room.\");\n        throw new Error(\"Failed to create or find SkyWayRoom.\");\n      }\n      setSkywayRoom(room);\n      console.log(`SkyWayRoom '${roomName}' found or created.`);\n\n      // ルームに参加し、自分のメンバー情報を取得\n      const localMember = await room.join();\n      // localMemberが有効であることを確認\n      if (!localMember) {\n        console.error(\"room.join() returned null or undefined localMember.\");\n        throw new Error(\"Failed to join the room.\");\n      }\n      setMe(localMember);\n      console.log(`Joined room '${roomName}' as member ID: ${localMember.id}`);\n\n      // ルームIDと自分のIDをコンソールに表示\n      console.log(`Room ID: ${roomName} / My ID: ${localMember.id}`);\n\n      // 自分のカメラとマイクのストリームを作成し、公開\n      const {\n        audio,\n        video\n      } = await SkyWayStreamFactory.createMicrophoneAudioAndCameraStream();\n      localStreamRef.current = video; // ローカルビデオストリームを保存\n      await localMember.publish(video);\n      const publication_audio = await localMember.publish(audio);\n      audioPublicationRef.current = publication_audio; // オーディオPublicationを保存\n      setIsMuted(false);\n      console.log(\"Published local camera and microphone stream.\");\n\n      // 自分のデータストリームを作成し、公開\n      const dataStream = await SkyWayStreamFactory.createDataStream();\n      localDataStreamRef.current = dataStream; // ローカルデータストリームを保存\n      await localMember.publish(dataStream);\n      console.log(\"Published local data stream.\");\n\n      // ルーム参加時はボタンを有効にする（モーションはまだ始まっていないため）\n      setIsMoveInProgress(false);\n\n      // --- 既存のストリームを購読するロジック ---\n      // ルーム内の既存の公開ストリームをすべて購読する\n      for (const publication of room.publications) {\n        // 自分のストリームは購読しない\n        if (localMember.id === publication.publisher.id) {\n          continue;\n        }\n        try {\n          const {\n            stream\n          } = await localMember.subscribe(publication.id);\n          console.log(`Subscribed to existing stream from ${publication.publisher.id}, type: ${publication.contentType}`);\n          if (publication.contentType === 'video' || publication.contentType === 'audio') {\n            attachRemoteStream(stream, publication.publisher.id);\n          } else if (publication.contentType === 'data') {\n            handleDataStream(stream, publication.publisher.id);\n          } else {\n            console.warn(`Unknown stream content type: ${publication.contentType} from ${publication.publisher.id}`);\n          }\n        } catch (subscribeError) {\n          console.error(`Failed to subscribe to existing stream from ${publication.publisher.id}:`, subscribeError);\n        }\n      }\n\n      // --- ルームイベントリスナーの設定 ---\n      // メンバーがルームに参加したときのイベント\n      if (room.onMemberJoined) {\n        room.onMemberJoined.add(e => {\n          console.log(`Member joined: ${e.member.id}`);\n        });\n      } else {\n        console.error(\"room.onMemberJoined is undefined. This is unexpected.\");\n      }\n\n      // メンバーがルームを離脱したときのイベント\n      if (room.onMemberLeft) {\n        room.onMemberLeft.add(e => {\n          console.log(`Member left: ${e.member.id}`);\n          // 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\n          const videoElement = remoteVideoElements.current.get(e.member.id);\n          if (videoElement && robotDisplayRef.current) {\n            robotDisplayRef.current.removeChild(videoElement);\n            remoteVideoElements.current.delete(e.member.id);\n            console.log(`Removed video for member ${e.member.id}`);\n          }\n          // データストリーム関連のクリーンアップもここに追加可能ですが、\n          // onDataリスナーはストリームが閉じられると自動的に停止します。\n        });\n      } else {\n        console.error(\"room.onMemberLeft is undefined. This is unexpected.\");\n      }\n\n      // ストリームが公開されたときのイベント\n      if (room.onStreamPublished) {\n        room.onStreamPublished.add(async e => {\n          console.log(`Stream published by ${e.publication.publisher.id}, type: ${e.publication.contentType}`);\n          // 自分のストリームは購読しない\n          if (localMember.id === e.publication.publisher.id) {\n            return;\n          }\n          try {\n            const {\n              stream\n            } = await localMember.subscribe(e.publication.id);\n            console.log(`Subscribed to new stream from ${e.publication.publisher.id}, type: ${e.publication.contentType}`);\n            if (e.publication.contentType === 'video' || e.publication.contentType === 'audio') {\n              attachRemoteStream(stream, e.publication.publisher.id);\n            } else if (e.publication.contentType === 'data') {\n              handleDataStream(stream, e.publication.publisher.id);\n            } else {\n              console.warn(`Unknown new stream content type: ${e.publication.contentType} from ${e.publication.publisher.id}`);\n            }\n          } catch (subscribeError) {\n            console.error(`Failed to subscribe to new stream from ${e.publication.publisher.id}:`, subscribeError);\n          }\n        });\n      } else {\n        console.error(\"room.onStreamPublished is undefined. This is unexpected.\");\n      }\n\n      // ストリームが公開停止されたときのイベントを追加\n      if (room.onStreamUnpublished) {\n        room.onStreamUnpublished.add(e => {\n          console.log(`Stream unpublished by ${e.publication.publisher.id}, type: ${e.publication.contentType}`);\n          // 公開停止されたストリームがビデオだった場合、DOMから要素を削除\n          if (e.publication.contentType === 'video') {\n            const videoElement = remoteVideoElements.current.get(e.publication.publisher.id);\n            if (videoElement && robotDisplayRef.current) {\n              robotDisplayRef.current.removeChild(videoElement);\n              remoteVideoElements.current.delete(e.publication.publisher.id);\n              console.log(`Removed video for member ${e.publication.publisher.id} after unpublish event.`);\n            }\n          }\n        });\n      } else {\n        console.error(\"room.onStreamUnpublished is undefined. This is unexpected.\");\n      }\n    } catch (error) {\n      console.error(\"Failed to join room:\", error);\n      // エラー発生時は状態をリセット\n      setSkywayRoom(null);\n      setMe(null);\n    }\n  };\n\n  /**\r\n   * ルームから退出するハンドラ\r\n   */\n  const handleLeaveRoom = () => {\n    if (skywayRoom) {\n      skywayRoom.leave(); // ルームから退出\n      console.log(`Left room '${skywayRoom.name}'.`);\n      setSkywayRoom(null);\n      setMe(null);\n      // すべてのリモートビデオ要素をDOMから削除\n      remoteVideoElements.current.forEach(videoElement => {\n        if (robotDisplayRef.current) {\n          robotDisplayRef.current.removeChild(videoElement);\n        }\n      });\n      remoteVideoElements.current.clear();\n      // ローカルストリームのクリーンアップ\n      if (localStreamRef.current) {\n        localStreamRef.current.getTracks().forEach(track => track.stop());\n        localStreamRef.current = null;\n      }\n      if (localDataStreamRef.current) {\n        localDataStreamRef.current.close();\n        localDataStreamRef.current = null;\n      }\n      console.log(\"Cleaned up local and remote streams and DOM elements.\");\n    }\n  };\n\n  /**\r\n   * コンポーネントがアンマウントされた際のクリーンアップ\r\n   */\n  useEffect(() => {\n    return () => {\n      // コンポーネントがアンマウントされる際にルームを離脱する\n      if (skywayRoom) {\n        skywayRoom.leave();\n        console.log(\"Left room on component unmount.\");\n      }\n      // ローカルストリームのクリーンアップ\n      if (localStreamRef.current) {\n        localStreamRef.current.getTracks().forEach(track => track.stop());\n        localStreamRef.current = null;\n      }\n      if (localDataStreamRef.current) {\n        localDataStreamRef.current.close();\n        localDataStreamRef.current = null;\n      }\n    };\n  }, [skywayRoom]);\n\n  /**\r\n   * マイクミュートのオンオフを切り替えるハンドラ\r\n   */\n  const handleMute = async () => {\n    if (!audioPublicationRef.current) {\n      console.warn(\"Audio publication not found. Cannot toggle mute.\");\n      return;\n    }\n    const publication = audioPublicationRef.current;\n    if (isMuted) {\n      // ミュート解除\n      await publication.enable();\n      console.log(\"Microphone enabled.\");\n    } else {\n      // ミュート\n      await publication.disable();\n      console.log(\"Microphone disabled.\");\n    }\n    setIsMuted(!isMuted);\n  };\n\n  /**\r\n   * AIモードのオンオフを切り替えるハンドラ\r\n   */\n  const handleAiModeToggle = () => {\n    // AIモードがONになったら、提案をリセットする\n    if (!isAiModeOn) {\n      setAiSuggestions([null, null]);\n    }\n    setIsAiModeOn(!isAiModeOn);\n    console.log(`AI Mode toggled to: ${!isAiModeOn}`);\n  };\n\n  /**\r\n   * 提案ボタンがクリックされた時のハンドラ\r\n   * @param {string} messageKey - 送信するメッセージのキー\r\n   */\n  const handleSuggestionClick = messageKey => {\n    // モーションが進行中の場合は何もしない\n    if (isMoveInProgress) {\n      console.warn(\"Motion is already in progress. Ignoring new command.\");\n      return;\n    }\n    if (localDataStreamRef.current && isAiModeOn) {\n      const messageToSend = messages[messageKey][currentLanguage];\n      console.log(`Sending AI suggestion: ${messageToSend}`);\n      localDataStreamRef.current.write(messageToSend);\n      setIsMoveInProgress(true); // モーション開始\n      // 送信後、提案をクリアする\n      setAiSuggestions([null, null]);\n    }\n  };\n\n  /**\r\n   * サイドパネルのボタンクリック時のハンドラ\r\n   * @param {string} messageKey - 送信するメッセージのキー\r\n   */\n  const handleSidePanelButtonClick = messageKey => {\n    // モーションが進行中の場合は何もしない\n    if (isMoveInProgress) {\n      console.warn(\"Motion is already in progress. Ignoring new command.\");\n      return;\n    }\n    if (localDataStreamRef.current) {\n      const messageToSend = messages[messageKey][currentLanguage];\n      console.log(`Sending manual command: ${messageToSend}`);\n      localDataStreamRef.current.write(messageToSend);\n      setIsMoveInProgress(true); // モーション開始\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"motion-btn\",\n          onClick: () => handleSidePanelButtonClick('hello'),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"robot-status\",\n          children: me ? `Room: ${roomName} / My ID: ${me.id}` : 'Not connected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"side-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-panel-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('hello'),\n            children: \"\\u3053\\u3093\\u306B\\u3061\\u306F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('goodbye'),\n            children: \"\\u3055\\u3088\\u3046\\u306A\\u3089\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('bow'),\n            children: \"\\u304A\\u8F9E\\u5100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('flap'),\n            children: \"\\u30D1\\u30BF\\u30D1\\u30BF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('lookUp'),\n            children: \"\\u4E0A\\u3092\\u5411\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('lookDown'),\n            children: \"\\u4E0B\\u3092\\u5411\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('lookRight'),\n            children: \"\\u53F3\\u3092\\u5411\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('lookLeft'),\n            children: \"\\u5DE6\\u3092\\u5411\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('nod'),\n            children: \"\\u3046\\u306A\\u305A\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('tiltHead'),\n            children: \"\\u9996\\u3092\\u50BE\\u3052\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('spin'),\n            children: \"\\u30B9\\u30D4\\u30F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('jump'),\n            children: \"\\u30B8\\u30E3\\u30F3\\u30D7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            onClick: () => handleSidePanelButtonClick('dance'),\n            children: \"\\u30C0\\u30F3\\u30B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"robot-display\",\n          ref: robotDisplayRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u30EB\\u30FC\\u30E0\\u540D\\u3092\\u5165\\u529B\",\n            value: roomName,\n            onChange: e => setRoomName(e.target.value),\n            className: \"room-name-input\",\n            disabled: me\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this), me ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLeaveRoom,\n            className: \"join-leave-btn leave-btn\",\n            children: \"\\u9000\\u51FA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleJoinRoom,\n            className: \"join-leave-btn join-btn\",\n            children: \"\\u53C2\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), isAiModeOn && (aiSuggestions[0] || aiSuggestions[1]) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-suggestions-container\",\n          children: aiSuggestions.map((suggestion, index) => suggestion && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ai-suggestion-btn\",\n            onClick: () => handleSuggestionClick(suggestion.key),\n            children: suggestion.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"bottom-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn ai-btn ${isAiModeOn ? 'ai-mode-on' : ''}`,\n          onClick: handleAiModeToggle,\n          disabled: !me // ルームに参加していない場合は無効\n          ,\n          children: [\"\\uD83E\\uDD16 AI\\u30E2\\u30FC\\u30C9 \", isAiModeOn ? 'ON' : 'OFF']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn mic-btn ${isMuted ? 'muted' : ''}` // ミュート状態に応じてクラスを追加\n          ,\n          onClick: handleMute,\n          id: \"micBtn\",\n          disabled: !me || !audioPublicationRef.current || isAiModeOn // ルームに参加していない、またはオーディオが公開されていない、AIモード中は無効\n          ,\n          children: [isMuted ? '🔇 マイクミュート' : '🎤 マイクON', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn manual-btn\",\n          id: \"manualBtn\",\n          disabled: isAiModeOn || isMoveInProgress,\n          children: \"\\uD83D\\uDCCB \\u30DE\\u30CB\\u30E5\\u30A2\\u30EB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn greeting-btn\",\n          id: \"greetingBtn\",\n          disabled: isAiModeOn || isMoveInProgress // AIモード中、またはモーション中は無効\n          ,\n          onClick: () => handleSidePanelButtonClick('doingSomething'),\n          children: \"\\uD83D\\uDC4B\\u3042\\u3044\\u3055\\u3064\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 591,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"KoDdKHyv/4PK1CBbDPCUnlabtPE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","nowInSec","SkyWayAuthToken","SkyWayContext","SkyWayRoom","SkyWayStreamFactory","uuidV4","RemoteDataStream","RemoteVideoStream","RemoteAudioStream","jsxDEV","_jsxDEV","Home","setIsLoggedIn","_s","roomName","setRoomName","me","setMe","skywayContext","setSkywayContext","skywayRoom","setSkywayRoom","remoteVideoElements","Map","robotDisplayRef","localStreamRef","receivedMessages","setReceivedMessages","localDataStreamRef","isMuted","setIsMuted","audioPublicationRef","currentLanguage","setCurrentLanguage","isAiModeOn","setIsAiModeOn","aiSuggestions","setAiSuggestions","isMoveInProgress","setIsMoveInProgress","messages","hello","japanese","english","goodbye","bow","flap","lookUp","lookDown","lookRight","lookLeft","nod","tiltHead","spin","jump","dance","bowDeep","doingSomething","thankYou","good","ookini","amazing","handleLogout","appId","secretKey","token","undefined","jti","iat","exp","version","scope","rooms","name","methods","member","turn","enabled","encode","currentContext","initContext","Create","console","log","error","dispose","attachRemoteStream","stream","memberId","current","video","get","document","createElement","autoplay","playsInline","className","dataset","appendChild","set","attach","warn","handleDataStream","onData","add","data","prevMessages","senderId","message","aiCombinedSuggestionRegex","combinedMatch","String","match","suggestion1Content","suggestion2Content","key","text","aiSingleSuggestionRegex","singleMatch","suggestionNumber","parseInt","suggestionContent","prevSuggestions","newSuggestions","handleJoinRoom","room","FindOrCreate","type","Error","localMember","join","id","audio","createMicrophoneAudioAndCameraStream","publish","publication_audio","dataStream","createDataStream","publication","publications","publisher","subscribe","contentType","subscribeError","onMemberJoined","e","onMemberLeft","videoElement","removeChild","delete","onStreamPublished","onStreamUnpublished","handleLeaveRoom","leave","forEach","clear","getTracks","track","stop","close","handleMute","enable","disable","handleAiModeToggle","handleSuggestionClick","messageKey","messageToSend","write","handleSidePanelButtonClick","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","placeholder","value","onChange","target","disabled","map","suggestion","index","_c","$RefreshReg$"],"sources":["C:/banpaku_2025/banpaku/src/home.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport './style.css'; // style.cssを再度有効化\r\nimport {\r\n  nowInSec,\r\n  SkyWayAuthToken,\r\n  SkyWayContext,\r\n  SkyWayRoom,\r\n  SkyWayStreamFactory,\r\n  uuidV4,\r\n  RemoteDataStream, // RemoteDataStreamをインポート\r\n  RemoteVideoStream, // RemoteVideoStreamをインポート\r\n  RemoteAudioStream, // RemoteAudioStreamをインポート\r\n} from '@skyway-sdk/room';\r\n\r\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\r\nfunction Home({ setIsLoggedIn }) {\r\n  // ルーム名\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  // 自分の参加者情報 (ルームに参加すると設定されます)\r\n  const [me, setMe] = useState(null);\r\n  // SkyWayコンテキストのインスタンス\r\n  const [skywayContext, setSkywayContext] = useState(null);\r\n  // SkyWayルームのインスタンス\r\n  const [skywayRoom, setSkywayRoom] = useState(null);\r\n  // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\r\n  const remoteVideoElements = useRef(new Map());\r\n  // リモートビデオを表示するDOM要素への参照\r\n  const robotDisplayRef = useRef(null);\r\n  // ローカルストリームの参照を保持\r\n  const localStreamRef = useRef(null);\r\n  // 受信したメッセージを表示するための状態\r\n  // src/home.js\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [receivedMessages, setReceivedMessages] = useState([]);\r\n  // 送信したデータストリームの参照を保持\r\n  const localDataStreamRef = useRef(null); // LocalDataStreamの参照を保持\r\n  // マイクの状態を表示するための状態 (ミュート状態を管理)\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  // オーディオストリームのPublicationを保持するための参照\r\n  const audioPublicationRef = useRef(null);\r\n  // 現在の言語状態 ('japanese' または 'english')\r\n  const [currentLanguage, setCurrentLanguage] = useState('japanese');\r\n  // AIモードがONかどうかを管理する状態\r\n  const [isAiModeOn, setIsAiModeOn] = useState(false);\r\n  // AIからの提案を保持する状態\r\n  // { key: 'ai_assist_1', text: '提案内容' } の形式で格納\r\n  const [aiSuggestions, setAiSuggestions] = useState([null, null]); // 2つの提案を保持するため、初期値をnullで埋める\r\n  // モーションが進行中かどうかを管理する状態\r\n  const [isMoveInProgress, setIsMoveInProgress] = useState(false);\r\n\r\n\r\n  // メッセージとモーションの多言語マッピング\r\n  const messages = useMemo(() => ({\r\n    hello: {\r\n      japanese: 'リセット',\r\n      english: 'Hello'\r\n    },\r\n    goodbye: {\r\n      japanese: '決めポーズ',\r\n      english: 'Goodbye'\r\n    },\r\n    bow: {\r\n      japanese: 'バイバイ',\r\n      english: 'Bow'\r\n    },\r\n    flap: {\r\n      japanese: 'YES',\r\n      english: 'Flap'\r\n    },\r\n    lookUp: {\r\n      japanese: 'NO',\r\n      english: 'Look up'\r\n    },\r\n    lookDown: {\r\n      japanese: '右手を上げる',\r\n      english: 'Look down'\r\n    },\r\n    lookRight: {\r\n      japanese: '右手を下げる',\r\n      english: 'Look right'\r\n    },\r\n    lookLeft: {\r\n      japanese: '左手を上げる',\r\n      english: 'Left hand up' // Changed from 'Look left' for clarity\r\n    },\r\n    nod: {\r\n      japanese: '左手を下げる',\r\n      english: 'Left hand down' // Changed from 'Nod' for clarity\r\n    },\r\n    tiltHead: {\r\n      japanese: '上を向く',\r\n      english: 'Look up' // Changed from 'Tilt head' for clarity\r\n    },\r\n    spin: {\r\n      japanese: '下を向く',\r\n      english: 'Look down' // Changed from 'Spin' for clarity\r\n    },\r\n    jump: {\r\n      japanese: '右を向く',\r\n      english: 'Look right' // Changed from 'Jump' for clarity\r\n    },\r\n    dance: {\r\n      japanese: '左を向く',\r\n      english: 'Look left' // Changed from 'Dance' for clarity\r\n    },\r\n    bowDeep: {\r\n      japanese: 'パタパタ',\r\n      english: 'Flap arms' // Changed from 'Deep bow' for clarity\r\n    },\r\n    doingSomething: {\r\n      japanese: 'こんにちは',\r\n      english: 'Hello'\r\n    },\r\n    thankYou: {\r\n      japanese: 'バイバイ',\r\n      english: 'Goodbye' // Changed from 'Thank you' for clarity\r\n    },\r\n    good: {\r\n      japanese: 'ようこそ',\r\n      english: 'Welcome' // Changed from 'Good' for clarity\r\n    },\r\n    ookini: {\r\n      japanese: 'ありがとう',\r\n      english: 'Thank you (Kansai dialect)'\r\n    },\r\n    amazing: {\r\n      japanese: '楽しんでね',\r\n      english: 'Enjoy' // Changed from 'Amazing' for clarity\r\n    }\r\n  }), []);\r\n\r\n\r\n  /**\r\n   * ログアウトボタンクリック時のハンドラ\r\n   */\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false); // ログイン状態をfalseに設定\r\n  };\r\n\r\n  // SkyWay App ID と Secret Key\r\n  // 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\r\n  // サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\r\n  const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\r\n  const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\r\n\r\n  // SkyWay認証トークンの生成\r\n  const token = useMemo(() => {\r\n    if (appId == null || secretKey == null) return undefined;\r\n\r\n    return new SkyWayAuthToken({\r\n      jti: uuidV4(), // JWT ID\r\n      iat: nowInSec(), // 発行時刻\r\n      exp: nowInSec() + 60 * 60 * 24, // 有効期限 (24時間)\r\n      version: 3,\r\n      scope: {\r\n        appId: appId,\r\n        rooms: [\r\n          {\r\n            name: \"*\", // すべてのルーム名に適用\r\n            methods: [\"create\", \"close\", \"updateMetadata\"], // ルーム操作の権限\r\n            member: {\r\n              name: \"*\", // すべてのメンバーに適用\r\n              methods: [\"publish\", \"subscribe\", \"updateMetadata\"] // メンバー操作の権限\r\n            }\r\n          }],\r\n        turn: {\r\n          enabled: true // TURNサーバーの使用を許可 (NAT越えのため)\r\n        }\r\n      }\r\n    }).encode(secretKey);\r\n\r\n  }, [appId, secretKey]);\r\n\r\n  /**\r\n   * SkyWayContextの初期化とクリーンアップを行うuseEffect\r\n   * トークンが利用可能になったときに一度だけ実行されます。\r\n   */\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    let currentContext;\r\n    const initContext = async () => {\r\n      try {\r\n        currentContext = await SkyWayContext.Create(token);\r\n        setSkywayContext(currentContext);\r\n        console.log(\"SkyWayContext created successfully.\");\r\n      } catch (error) {\r\n        console.error(\"Failed to create SkyWayContext:\", error);\r\n      }\r\n    };\r\n\r\n    initContext();\r\n\r\n    // コンポーネントのアンマウント時にコンテキストを破棄\r\n    return () => {\r\n      if (currentContext) {\r\n        currentContext.dispose();\r\n        console.log(\"SkyWayContext disposed.\");\r\n      }\r\n    };\r\n  }, [token]); // tokenが変更されたときにのみ実行\r\n\r\n  /**\r\n   * リモートストリームをDOMに追加するヘルパー関数\r\n   * @param {RemoteVideoStream | RemoteAudioStream} stream - 追加するメディアストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\r\n  const attachRemoteStream = (stream, memberId) => {\r\n    if (robotDisplayRef.current && (stream instanceof RemoteVideoStream || stream instanceof RemoteAudioStream)) {\r\n      // 既存のビデオ要素を探す\r\n      let video = remoteVideoElements.current.get(memberId);\r\n\r\n      if (!video) {\r\n        // 既存のビデオ要素がなければ新しく作成\r\n        video = document.createElement(\"video\");\r\n        video.autoplay = true; // 自動再生\r\n        video.playsInline = true; // インライン再生 (iOSなどで必要)\r\n        video.className = \"remote-video object-cover\"; // スタイリング用のクラスとobject-coverを追加\r\n        video.dataset.memberId = memberId; // メンバーIDをデータ属性に保存\r\n        robotDisplayRef.current.appendChild(video);\r\n        remoteVideoElements.current.set(memberId, video);\r\n        console.log(`Created and appended video element for member ${memberId}.`);\r\n      }\r\n\r\n      // 既存または新しいビデオ要素にストリームをアタッチ\r\n      stream.attach(video);\r\n      console.log(`Attached stream from ${memberId} to DOM.`);\r\n    } else {\r\n      console.warn(`Attempted to attach non-media stream or robotDisplayRef is null for member ${memberId}.`);\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * データストリームの受信を処理するヘルパー関数\r\n   * @param {RemoteDataStream} stream - 受信するデータストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\r\n  const handleDataStream = (stream, memberId) => {\r\n    if (stream instanceof RemoteDataStream) {\r\n      stream.onData.add((data) => {\r\n        console.log(`Received data from ${memberId}:`, data);\r\n        // 受信したメッセージを状態に追加\r\n        setReceivedMessages(prevMessages => [...prevMessages, { senderId: memberId, message: data }]);\r\n\r\n        // \"move_finish\" シグナルをチェック\r\n        if (data === \"move_finish\") {\r\n          console.log(\"Received 'move_finish' signal. Enabling side panel buttons.\");\r\n          setIsMoveInProgress(false); // モーション終了\r\n        }\r\n\r\n        // AI提案のフォーマットをチェック\r\n        // 新しいフォーマット \"ai_assist_1:data:ai_assist_2:data\" を解析\r\n        const aiCombinedSuggestionRegex = /^ai_assist_1:(.*):ai_assist_2:(.*)$/;\r\n        const combinedMatch = String(data).match(aiCombinedSuggestionRegex);\r\n\r\n        if (combinedMatch) {\r\n          const suggestion1Content = combinedMatch[1]; // キャプチャグループ1が最初の提案\r\n          const suggestion2Content = combinedMatch[2]; // キャプチャグループ2が2番目の提案\r\n\r\n          setAiSuggestions([\r\n            { key: 'ai_assist_1', text: suggestion1Content }, // キーをai_assist_1に修正\r\n            { key: 'ai_assist_2', text: suggestion2Content }  // キーをai_assist_2に修正\r\n          ]);\r\n          console.log(\"Received combined AI suggestions.\");\r\n        } else {\r\n          // 以前の単一提案フォーマットも考慮する場合（もし両方のフォーマットが混在する可能性があるなら）\r\n          const aiSingleSuggestionRegex = /^ai_assist_(\\d+):(.*)$/;\r\n          const singleMatch = String(data).match(aiSingleSuggestionRegex);\r\n\r\n          if (singleMatch) {\r\n            const suggestionNumber = parseInt(singleMatch[1], 10);\r\n            const suggestionContent = singleMatch[2];\r\n\r\n            if (suggestionNumber === 1 || suggestionNumber === 2) {\r\n              setAiSuggestions(prevSuggestions => {\r\n                const newSuggestions = [...prevSuggestions];\r\n                newSuggestions[suggestionNumber - 1] = {\r\n                  key: `ai_assist_${suggestionNumber}`, // キーをai_assist_Nに修正\r\n                  text: suggestionContent\r\n                };\r\n                return newSuggestions;\r\n              });\r\n              console.log(`Received single AI suggestion ${suggestionNumber}.`);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      console.log(`Listening for data from ${memberId}.`);\r\n    } else {\r\n      console.warn(`Attempted to handle non-data stream as data stream for member ${memberId}.`);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ルームに参加するハンドラ\r\n   * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\r\n   */\r\n  const handleJoinRoom = async () => {\r\n    if (!skywayContext) {\r\n      console.error(\"SkyWayContext is not initialized. Please wait or check token.\");\r\n      return;\r\n    }\r\n    if (!roomName) {\r\n      console.error(\"Room name is empty. Please enter a room name to join.\");\r\n      return;\r\n    }\r\n    if (skywayRoom && me) {\r\n      console.warn(\"Already in a room. Please leave the current room first.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 指定されたルーム名でP2Pルームを作成または検索\r\n      const room = await SkyWayRoom.FindOrCreate(skywayContext, {\r\n        type: \"p2p\", // P2Pルームタイプ\r\n        name: roomName,\r\n      });\r\n      // roomオブジェクトが有効であることを確認\r\n      if (!room) {\r\n        console.error(\"SkyWayRoom.FindOrCreate returned null or undefined room.\");\r\n        throw new Error(\"Failed to create or find SkyWayRoom.\");\r\n      }\r\n      setSkywayRoom(room);\r\n      console.log(`SkyWayRoom '${roomName}' found or created.`);\r\n\r\n      // ルームに参加し、自分のメンバー情報を取得\r\n      const localMember = await room.join();\r\n      // localMemberが有効であることを確認\r\n      if (!localMember) {\r\n        console.error(\"room.join() returned null or undefined localMember.\");\r\n        throw new Error(\"Failed to join the room.\");\r\n      }\r\n      setMe(localMember);\r\n      console.log(`Joined room '${roomName}' as member ID: ${localMember.id}`);\r\n\r\n      // ルームIDと自分のIDをコンソールに表示\r\n      console.log(`Room ID: ${roomName} / My ID: ${localMember.id}`);\r\n\r\n      // 自分のカメラとマイクのストリームを作成し、公開\r\n      const { audio, video } = await SkyWayStreamFactory.createMicrophoneAudioAndCameraStream();\r\n      localStreamRef.current = video; // ローカルビデオストリームを保存\r\n      await localMember.publish(video);\r\n      const publication_audio = await localMember.publish(audio);\r\n      audioPublicationRef.current = publication_audio; // オーディオPublicationを保存\r\n      setIsMuted(false);\r\n      console.log(\"Published local camera and microphone stream.\");\r\n\r\n      // 自分のデータストリームを作成し、公開\r\n      const dataStream = await SkyWayStreamFactory.createDataStream();\r\n      localDataStreamRef.current = dataStream; // ローカルデータストリームを保存\r\n      await localMember.publish(dataStream);\r\n      console.log(\"Published local data stream.\");\r\n\r\n      // ルーム参加時はボタンを有効にする（モーションはまだ始まっていないため）\r\n      setIsMoveInProgress(false);\r\n\r\n      // --- 既存のストリームを購読するロジック ---\r\n      // ルーム内の既存の公開ストリームをすべて購読する\r\n      for (const publication of room.publications) {\r\n        // 自分のストリームは購読しない\r\n        if (localMember.id === publication.publisher.id) {\r\n          continue;\r\n        }\r\n        try {\r\n          const { stream } = await localMember.subscribe(publication.id);\r\n          console.log(`Subscribed to existing stream from ${publication.publisher.id}, type: ${publication.contentType}`);\r\n          if (publication.contentType === 'video' || publication.contentType === 'audio') {\r\n            attachRemoteStream(stream, publication.publisher.id);\r\n          } else if (publication.contentType === 'data') {\r\n            handleDataStream(stream, publication.publisher.id);\r\n          } else {\r\n            console.warn(`Unknown stream content type: ${publication.contentType} from ${publication.publisher.id}`);\r\n          }\r\n        } catch (subscribeError) {\r\n          console.error(`Failed to subscribe to existing stream from ${publication.publisher.id}:`, subscribeError);\r\n        }\r\n      }\r\n\r\n      // --- ルームイベントリスナーの設定 ---\r\n      // メンバーがルームに参加したときのイベント\r\n      if (room.onMemberJoined) {\r\n        room.onMemberJoined.add((e) => {\r\n          console.log(`Member joined: ${e.member.id}`);\r\n        });\r\n      } else {\r\n        console.error(\"room.onMemberJoined is undefined. This is unexpected.\");\r\n      }\r\n\r\n      // メンバーがルームを離脱したときのイベント\r\n      if (room.onMemberLeft) {\r\n        room.onMemberLeft.add((e) => {\r\n          console.log(`Member left: ${e.member.id}`);\r\n          // 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\r\n          const videoElement = remoteVideoElements.current.get(e.member.id);\r\n          if (videoElement && robotDisplayRef.current) {\r\n            robotDisplayRef.current.removeChild(videoElement);\r\n            remoteVideoElements.current.delete(e.member.id);\r\n            console.log(`Removed video for member ${e.member.id}`);\r\n          }\r\n          // データストリーム関連のクリーンアップもここに追加可能ですが、\r\n          // onDataリスナーはストリームが閉じられると自動的に停止します。\r\n        });\r\n      } else {\r\n        console.error(\"room.onMemberLeft is undefined. This is unexpected.\");\r\n      }\r\n\r\n      // ストリームが公開されたときのイベント\r\n      if (room.onStreamPublished) {\r\n        room.onStreamPublished.add(async (e) => {\r\n          console.log(`Stream published by ${e.publication.publisher.id}, type: ${e.publication.contentType}`);\r\n          // 自分のストリームは購読しない\r\n          if (localMember.id === e.publication.publisher.id) {\r\n            return;\r\n          }\r\n          try {\r\n            const { stream } = await localMember.subscribe(e.publication.id);\r\n            console.log(`Subscribed to new stream from ${e.publication.publisher.id}, type: ${e.publication.contentType}`);\r\n            if (e.publication.contentType === 'video' || e.publication.contentType === 'audio') {\r\n              attachRemoteStream(stream, e.publication.publisher.id);\r\n            } else if (e.publication.contentType === 'data') {\r\n              handleDataStream(stream, e.publication.publisher.id);\r\n            } else {\r\n              console.warn(`Unknown new stream content type: ${e.publication.contentType} from ${e.publication.publisher.id}`);\r\n            }\r\n          } catch (subscribeError) {\r\n            console.error(`Failed to subscribe to new stream from ${e.publication.publisher.id}:`, subscribeError);\r\n          }\r\n        });\r\n      } else {\r\n        console.error(\"room.onStreamPublished is undefined. This is unexpected.\");\r\n      }\r\n\r\n      // ストリームが公開停止されたときのイベントを追加\r\n      if (room.onStreamUnpublished) {\r\n        room.onStreamUnpublished.add((e) => {\r\n          console.log(`Stream unpublished by ${e.publication.publisher.id}, type: ${e.publication.contentType}`);\r\n          // 公開停止されたストリームがビデオだった場合、DOMから要素を削除\r\n          if (e.publication.contentType === 'video') {\r\n            const videoElement = remoteVideoElements.current.get(e.publication.publisher.id);\r\n            if (videoElement && robotDisplayRef.current) {\r\n              robotDisplayRef.current.removeChild(videoElement);\r\n              remoteVideoElements.current.delete(e.publication.publisher.id);\r\n              console.log(`Removed video for member ${e.publication.publisher.id} after unpublish event.`);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        console.error(\"room.onStreamUnpublished is undefined. This is unexpected.\");\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Failed to join room:\", error);\r\n      // エラー発生時は状態をリセット\r\n      setSkywayRoom(null);\r\n      setMe(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ルームから退出するハンドラ\r\n   */\r\n  const handleLeaveRoom = () => {\r\n    if (skywayRoom) {\r\n      skywayRoom.leave(); // ルームから退出\r\n      console.log(`Left room '${skywayRoom.name}'.`);\r\n      setSkywayRoom(null);\r\n      setMe(null);\r\n      // すべてのリモートビデオ要素をDOMから削除\r\n      remoteVideoElements.current.forEach(videoElement => {\r\n        if (robotDisplayRef.current) {\r\n          robotDisplayRef.current.removeChild(videoElement);\r\n        }\r\n      });\r\n      remoteVideoElements.current.clear();\r\n      // ローカルストリームのクリーンアップ\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach(track => track.stop());\r\n        localStreamRef.current = null;\r\n      }\r\n      if (localDataStreamRef.current) {\r\n        localDataStreamRef.current.close();\r\n        localDataStreamRef.current = null;\r\n      }\r\n      console.log(\"Cleaned up local and remote streams and DOM elements.\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * コンポーネントがアンマウントされた際のクリーンアップ\r\n   */\r\n  useEffect(() => {\r\n    return () => {\r\n      // コンポーネントがアンマウントされる際にルームを離脱する\r\n      if (skywayRoom) {\r\n        skywayRoom.leave();\r\n        console.log(\"Left room on component unmount.\");\r\n      }\r\n      // ローカルストリームのクリーンアップ\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach(track => track.stop());\r\n        localStreamRef.current = null;\r\n      }\r\n      if (localDataStreamRef.current) {\r\n        localDataStreamRef.current.close();\r\n        localDataStreamRef.current = null;\r\n      }\r\n    };\r\n  }, [skywayRoom]);\r\n\r\n\r\n  /**\r\n   * マイクミュートのオンオフを切り替えるハンドラ\r\n   */\r\n  const handleMute = async () => {\r\n    if (!audioPublicationRef.current) {\r\n      console.warn(\"Audio publication not found. Cannot toggle mute.\");\r\n      return;\r\n    }\r\n    const publication = audioPublicationRef.current;\r\n    if (isMuted) {\r\n      // ミュート解除\r\n      await publication.enable();\r\n      console.log(\"Microphone enabled.\");\r\n    } else {\r\n      // ミュート\r\n      await publication.disable();\r\n      console.log(\"Microphone disabled.\");\r\n    }\r\n    setIsMuted(!isMuted);\r\n  };\r\n\r\n  /**\r\n   * AIモードのオンオフを切り替えるハンドラ\r\n   */\r\n  const handleAiModeToggle = () => {\r\n    // AIモードがONになったら、提案をリセットする\r\n    if (!isAiModeOn) {\r\n      setAiSuggestions([null, null]);\r\n    }\r\n    setIsAiModeOn(!isAiModeOn);\r\n    console.log(`AI Mode toggled to: ${!isAiModeOn}`);\r\n  };\r\n\r\n  /**\r\n   * 提案ボタンがクリックされた時のハンドラ\r\n   * @param {string} messageKey - 送信するメッセージのキー\r\n   */\r\n  const handleSuggestionClick = (messageKey) => {\r\n    // モーションが進行中の場合は何もしない\r\n    if (isMoveInProgress) {\r\n      console.warn(\"Motion is already in progress. Ignoring new command.\");\r\n      return;\r\n    }\r\n\r\n    if (localDataStreamRef.current && isAiModeOn) {\r\n      const messageToSend = messages[messageKey][currentLanguage];\r\n      console.log(`Sending AI suggestion: ${messageToSend}`);\r\n      localDataStreamRef.current.write(messageToSend);\r\n      setIsMoveInProgress(true); // モーション開始\r\n      // 送信後、提案をクリアする\r\n      setAiSuggestions([null, null]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * サイドパネルのボタンクリック時のハンドラ\r\n   * @param {string} messageKey - 送信するメッセージのキー\r\n   */\r\n  const handleSidePanelButtonClick = (messageKey) => {\r\n    // モーションが進行中の場合は何もしない\r\n    if (isMoveInProgress) {\r\n      console.warn(\"Motion is already in progress. Ignoring new command.\");\r\n      return;\r\n    }\r\n\r\n    if (localDataStreamRef.current) {\r\n      const messageToSend = messages[messageKey][currentLanguage];\r\n      console.log(`Sending manual command: ${messageToSend}`);\r\n      localDataStreamRef.current.write(messageToSend);\r\n      setIsMoveInProgress(true); // モーション開始\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {/* ヘッダー部分 */}\r\n      <header className=\"header\">\r\n        <div className=\"header-left\">\r\n          <button className=\"motion-btn\" onClick={() => handleSidePanelButtonClick('hello')}>Reset</button>\r\n          <div className=\"robot-status\">\r\n            {me ? `Room: ${roomName} / My ID: ${me.id}` : 'Not connected'}\r\n          </div>\r\n        </div>\r\n        <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\r\n      </header>\r\n\r\n      {/* メインコンテンツ部分 */}\r\n      <div className=\"main-container\">\r\n        {/* サイドパネル */}\r\n        <aside className=\"side-panel\">\r\n          <div className=\"side-panel-content\">\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('hello')}>こんにちは</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('goodbye')}>さようなら</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('bow')}>お辞儀</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('flap')}>パタパタ</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('lookUp')}>上を向く</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('lookDown')}>下を向く</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('lookRight')}>右を向く</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('lookLeft')}>左を向く</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('nod')}>うなずく</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('tiltHead')}>首を傾げる</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('spin')}>スピン</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('jump')}>ジャンプ</button>\r\n            <button className=\"side-btn\" onClick={() => handleSidePanelButtonClick('dance')}>ダンス</button>\r\n          </div>\r\n        </aside>\r\n\r\n        {/* メイン表示エリア */}\r\n        <main className=\"main-area\">\r\n          <div className=\"robot-display\" ref={robotDisplayRef}>\r\n            {/* ここにリモートビデオが表示されます */}\r\n          </div>\r\n          {/* ルーム参加/退出UI */}\r\n          <div className=\"room-controls\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"ルーム名を入力\"\r\n              value={roomName}\r\n              onChange={(e) => setRoomName(e.target.value)}\r\n              className=\"room-name-input\"\r\n              disabled={me}\r\n            />\r\n            {me ? (\r\n              <button onClick={handleLeaveRoom} className=\"join-leave-btn leave-btn\">\r\n                退出\r\n              </button>\r\n            ) : (\r\n              <button onClick={handleJoinRoom} className=\"join-leave-btn join-btn\">\r\n                参加\r\n              </button>\r\n            )}\r\n          </div>\r\n          {/* AI提案ボタン */}\r\n          {isAiModeOn && (aiSuggestions[0] || aiSuggestions[1]) && (\r\n            <div className=\"ai-suggestions-container\">\r\n              {aiSuggestions.map((suggestion, index) => (\r\n                suggestion && (\r\n                  <button\r\n                    key={index}\r\n                    className=\"ai-suggestion-btn\"\r\n                    onClick={() => handleSuggestionClick(suggestion.key)}\r\n                  >\r\n                    {suggestion.text}\r\n                  </button>\r\n                )\r\n              ))}\r\n            </div>\r\n          )}\r\n        </main>\r\n      </div>\r\n\r\n      {/* ボトムコントロールパネル */}\r\n      <footer className=\"bottom-panel\">\r\n        <div className=\"bottom-controls\">\r\n          <button\r\n            className={`control-btn ai-btn ${isAiModeOn ? 'ai-mode-on' : ''}`}\r\n            onClick={handleAiModeToggle}\r\n            disabled={!me} // ルームに参加していない場合は無効\r\n          >\r\n            🤖 AIモード {isAiModeOn ? 'ON' : 'OFF'}\r\n          </button>\r\n          <button\r\n            className={`control-btn mic-btn ${isMuted ? 'muted' : ''}`} // ミュート状態に応じてクラスを追加\r\n            onClick={handleMute}\r\n            id=\"micBtn\"\r\n            disabled={!me || !audioPublicationRef.current || isAiModeOn} // ルームに参加していない、またはオーディオが公開されていない、AIモード中は無効\r\n          >\r\n            {isMuted ? '🔇 マイクミュート' : '🎤 マイクON'} {/* ミュート状態に応じてアイコンとテキストを変更 */}\r\n          </button>\r\n          <button className=\"control-btn manual-btn\" id=\"manualBtn\" disabled={isAiModeOn || isMoveInProgress}>\r\n            📋 マニュアル\r\n          </button>\r\n          <button\r\n            className=\"control-btn greeting-btn\"\r\n            id=\"greetingBtn\"\r\n            disabled={isAiModeOn || isMoveInProgress} // AIモード中、またはモーション中は無効\r\n            onClick={() => handleSidePanelButtonClick('doingSomething')}\r\n          >\r\n            👋あいさつ\r\n          </button>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}