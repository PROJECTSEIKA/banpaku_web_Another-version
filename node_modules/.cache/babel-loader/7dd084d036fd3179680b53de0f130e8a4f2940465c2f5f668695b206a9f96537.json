{"ast":null,"code":"var _jsxFileName = \"C:\\\\banpaku_2025\\\\banpaku\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// /**\n//  * ログインフォームコンポーネント\n//  * @param {object} props - プロパティ\n//  * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\n//  */\n// function Login({ setIsLoggedIn }) {\n//   // ユーザー名とパスワードの状態を管理\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   // 画面遷移のためのnavigateフック\n//   const navigate = useNavigate();\n\n//   /**\n//    * フォーム送信時のハンドラ\n//    * @param {object} e - イベントオブジェクト\n//    */\n//   const handleSubmit = (e) => {\n//     e.preventDefault(); // デフォルトのフォーム送信を防ぐ\n\n//     // ここで実際の認証ロジックを実装します\n//     // 例: ユーザー名が 'user' でパスワードが 'password' の場合に認証成功とみなす\n//     if (username === 'user' && password === 'password') {\n//       setIsLoggedIn(true); // ログイン状態をtrueに設定\n//       navigate('/home'); // ログイン成功後、/home へ遷移\n//     } else {\n//       // 認証失敗時のメッセージ表示（alertの代わりにカスタムモーダルを使用することを推奨）\n//       alert('ユーザー名またはパスワードが異なります。');\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n//       <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\n//         <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">ログイン</h2>\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\n//           <div>\n//             <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n//               ロボット名:\n//             </label>\n//             <input\n//               type=\"text\"\n//               id=\"username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               required\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//             />\n//           </div>\n//           <div>\n//             <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n//               パスワード:\n//             </label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n//             />\n//           </div>\n//           <div class=\"form-group\">\n//                 <label class=\"label\">マイク</label>\n//                 <select class=\"select-field\">\n//                     <option>デバイス名（選択）</option>\n//                     <option>マイク1</option>\n//                     <option>マイク2</option>\n//                     <option>システムデフォルト</option>\n//                 </select>\n//           </div>\n//           <button\n//             type=\"submit\"\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline w-full transition duration-300 ease-in-out\"\n//           >\n//             ログイン\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState, useEffect } from 'react'; // useEffect をインポート\nimport { useNavigate } from 'react-router-dom';\n\n/**\r\n * ログインフォームコンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setIsLoggedIn\n}) {\n  _s();\n  // ユーザー名とパスワードの状態を管理\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // 検出されたマイクデバイスのリストを管理\n  const [microphones, setMicrophones] = useState([]);\n  // 選択されたマイクデバイスのIDを管理\n  const [selectedMicrophoneId, setSelectedMicrophoneId] = useState('');\n  // マイクへのアクセス許可が得られたかどうかの状態を管理\n  const [permissionGranted, setPermissionGranted] = useState(false);\n  // エラーメッセージを管理\n  const [error, setError] = useState(null);\n  // 画面遷移のためのnavigateフック\n  const navigate = useNavigate();\n\n  // コンポーネントがマウントされた時にマイクデバイスを検出する\n  useEffect(() => {\n    const getMicrophones = async () => {\n      try {\n        // マイクへのアクセス許可をリクエストする（初回のみプロンプトが表示される）\n        // これにより、enumerateDevices() でデバイスのラベルが取得できるようになる\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: false\n        });\n        // アクセス許可を得るだけなので、ストリームはすぐに停止する\n        stream.getTracks().forEach(track => track.stop());\n        setPermissionGranted(true);\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const audioInputDevices = devices.filter(device => device.kind === 'audioinput');\n        setMicrophones(audioInputDevices);\n\n        // デバイスが1つでもあれば、最初のデバイスをデフォルトで選択する\n        if (audioInputDevices.length > 0) {\n          setSelectedMicrophoneId(audioInputDevices[0].deviceId);\n        }\n      } catch (err) {\n        console.error(\"マイクデバイスの検出またはアクセスに失敗しました:\", err);\n        // エラーの種類に応じてユーザーにメッセージを表示する\n        if (err.name === 'NotAllowedError' || err.name === 'PermissionDeniedError') {\n          setError('マイクへのアクセスが拒否されました。ブラウザの設定を確認してください。');\n        } else if (err.name === 'NotFoundError') {\n          setError('マイクデバイスが見つかりません。');\n        } else {\n          setError('マイクデバイスの検出中に不明なエラーが発生しました。');\n        }\n        setPermissionGranted(false);\n      }\n    };\n    getMicrophones();\n\n    // デバイスの変更を監視する（マイクが抜き差しされた場合など）\n    navigator.mediaDevices.addEventListener('devicechange', getMicrophones);\n\n    // クリーンアップ関数: コンポーネントがアンマウントされる時にイベントリスナーを削除する\n    return () => {\n      navigator.mediaDevices.removeEventListener('devicechange', getMicrophones);\n    };\n  }, []); // 空の依存配列は、コンポーネントのマウント時とアンマウント時にのみ実行されることを意味する\n\n  /**\r\n   * フォーム送信時のハンドラ\r\n   * @param {object} e - イベントオブジェクト\r\n   */\n  const handleSubmit = e => {\n    e.preventDefault(); // デフォルトのフォーム送信を防ぐ\n\n    // ここで実際の認証ロジックを実装します\n    // 例: ユーザー名が 'user' でパスワードが 'password' の場合に認証成功とみなす\n    if (username === 'user' && password === 'password') {\n      setIsLoggedIn(true); // ログイン状態をtrueに設定\n      // 選択されたマイクデバイスIDをどこかに保存または渡すことも可能です（例: グローバルステート、コンテキストAPI、localStorageなど）\n      console.log(\"選択されたマイクID:\", selectedMicrophoneId);\n      navigate('/home'); // ログイン成功後、/home へ遷移\n    } else {\n      // 認証失敗時のメッセージ表示（alertの代わりにカスタムモーダルを使用することを推奨）\n      alert('ユーザー名またはパスワードが異なります。');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-md w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6 text-center text-gray-800\",\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            htmlFor: \"username\",\n            children: \"\\u30ED\\u30DC\\u30C3\\u30C8\\u540D:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            htmlFor: \"password\",\n            children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            htmlFor: \"microphone-select\",\n            children: \"\\u30DE\\u30A4\\u30AF:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-xs italic mb-2\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 23\n          }, this), !permissionGranted && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mb-2\",\n            children: \"\\u30DE\\u30A4\\u30AF\\u30C7\\u30D0\\u30A4\\u30B9\\u3092\\u8868\\u793A\\u3059\\u308B\\u306B\\u306F\\u3001\\u30DE\\u30A4\\u30AF\\u3078\\u306E\\u30A2\\u30AF\\u30BB\\u30B9\\u3092\\u8A31\\u53EF\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"microphone-select\",\n            value: selectedMicrophoneId,\n            onChange: e => setSelectedMicrophoneId(e.target.value),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            disabled: microphones.length === 0 || !permissionGranted // デバイスがない、または許可がない場合は無効化\n            ,\n            children: microphones.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: permissionGranted ? 'マイクデバイスが見つかりません' : 'マイク検出中...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u30DE\\u30A4\\u30AF\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), microphones.map(mic => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: mic.deviceId,\n                children: mic.label || `不明なマイク (${mic.deviceId})`\n              }, mic.deviceId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline w-full transition duration-300 ease-in-out\",\n          children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"fWo85JUnR8Bkc1mIdQwJ1ZQ62fM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","setIsLoggedIn","_s","username","setUsername","password","setPassword","microphones","setMicrophones","selectedMicrophoneId","setSelectedMicrophoneId","permissionGranted","setPermissionGranted","error","setError","navigate","getMicrophones","stream","navigator","mediaDevices","getUserMedia","audio","video","getTracks","forEach","track","stop","devices","enumerateDevices","audioInputDevices","filter","device","kind","length","deviceId","err","console","name","addEventListener","removeEventListener","handleSubmit","e","preventDefault","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","map","mic","label","_c","$RefreshReg$"],"sources":["C:/banpaku_2025/banpaku/src/login.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// /**\r\n//  * ログインフォームコンポーネント\r\n//  * @param {object} props - プロパティ\r\n//  * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n//  */\r\n// function Login({ setIsLoggedIn }) {\r\n//   // ユーザー名とパスワードの状態を管理\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   // 画面遷移のためのnavigateフック\r\n//   const navigate = useNavigate();\r\n\r\n//   /**\r\n//    * フォーム送信時のハンドラ\r\n//    * @param {object} e - イベントオブジェクト\r\n//    */\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault(); // デフォルトのフォーム送信を防ぐ\r\n\r\n//     // ここで実際の認証ロジックを実装します\r\n//     // 例: ユーザー名が 'user' でパスワードが 'password' の場合に認証成功とみなす\r\n//     if (username === 'user' && password === 'password') {\r\n//       setIsLoggedIn(true); // ログイン状態をtrueに設定\r\n//       navigate('/home'); // ログイン成功後、/home へ遷移\r\n//     } else {\r\n//       // 認証失敗時のメッセージ表示（alertの代わりにカスタムモーダルを使用することを推奨）\r\n//       alert('ユーザー名またはパスワードが異なります。');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n//       <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n//         <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">ログイン</h2>\r\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//           <div>\r\n//             <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n//               ロボット名:\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"username\"\r\n//               value={username}\r\n//               onChange={(e) => setUsername(e.target.value)}\r\n//               required\r\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n//               パスワード:\r\n//             </label>\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               required\r\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n//             />\r\n//           </div>\r\n//           <div class=\"form-group\">\r\n//                 <label class=\"label\">マイク</label>\r\n//                 <select class=\"select-field\">\r\n//                     <option>デバイス名（選択）</option>\r\n//                     <option>マイク1</option>\r\n//                     <option>マイク2</option>\r\n//                     <option>システムデフォルト</option>\r\n//                 </select>\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline w-full transition duration-300 ease-in-out\"\r\n//           >\r\n//             ログイン\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\nimport React, { useState, useEffect } from 'react'; // useEffect をインポート\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n/**\r\n * ログインフォームコンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\r\nfunction Login({ setIsLoggedIn }) {\r\n  // ユーザー名とパスワードの状態を管理\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  // 検出されたマイクデバイスのリストを管理\r\n  const [microphones, setMicrophones] = useState([]);\r\n  // 選択されたマイクデバイスのIDを管理\r\n  const [selectedMicrophoneId, setSelectedMicrophoneId] = useState('');\r\n  // マイクへのアクセス許可が得られたかどうかの状態を管理\r\n  const [permissionGranted, setPermissionGranted] = useState(false);\r\n  // エラーメッセージを管理\r\n  const [error, setError] = useState(null);\r\n  // 画面遷移のためのnavigateフック\r\n  const navigate = useNavigate();\r\n\r\n  // コンポーネントがマウントされた時にマイクデバイスを検出する\r\n  useEffect(() => {\r\n    const getMicrophones = async () => {\r\n      try {\r\n        // マイクへのアクセス許可をリクエストする（初回のみプロンプトが表示される）\r\n        // これにより、enumerateDevices() でデバイスのラベルが取得できるようになる\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false });\r\n        // アクセス許可を得るだけなので、ストリームはすぐに停止する\r\n        stream.getTracks().forEach(track => track.stop());\r\n        setPermissionGranted(true);\r\n\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const audioInputDevices = devices.filter(device => device.kind === 'audioinput');\r\n        setMicrophones(audioInputDevices);\r\n\r\n        // デバイスが1つでもあれば、最初のデバイスをデフォルトで選択する\r\n        if (audioInputDevices.length > 0) {\r\n          setSelectedMicrophoneId(audioInputDevices[0].deviceId);\r\n        }\r\n\r\n      } catch (err) {\r\n        console.error(\"マイクデバイスの検出またはアクセスに失敗しました:\", err);\r\n        // エラーの種類に応じてユーザーにメッセージを表示する\r\n        if (err.name === 'NotAllowedError' || err.name === 'PermissionDeniedError') {\r\n          setError('マイクへのアクセスが拒否されました。ブラウザの設定を確認してください。');\r\n        } else if (err.name === 'NotFoundError') {\r\n          setError('マイクデバイスが見つかりません。');\r\n        } else {\r\n          setError('マイクデバイスの検出中に不明なエラーが発生しました。');\r\n        }\r\n        setPermissionGranted(false);\r\n      }\r\n    };\r\n\r\n    getMicrophones();\r\n\r\n    // デバイスの変更を監視する（マイクが抜き差しされた場合など）\r\n    navigator.mediaDevices.addEventListener('devicechange', getMicrophones);\r\n\r\n    // クリーンアップ関数: コンポーネントがアンマウントされる時にイベントリスナーを削除する\r\n    return () => {\r\n      navigator.mediaDevices.removeEventListener('devicechange', getMicrophones);\r\n    };\r\n  }, []); // 空の依存配列は、コンポーネントのマウント時とアンマウント時にのみ実行されることを意味する\r\n\r\n  /**\r\n   * フォーム送信時のハンドラ\r\n   * @param {object} e - イベントオブジェクト\r\n   */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // デフォルトのフォーム送信を防ぐ\r\n\r\n    // ここで実際の認証ロジックを実装します\r\n    // 例: ユーザー名が 'user' でパスワードが 'password' の場合に認証成功とみなす\r\n    if (username === 'user' && password === 'password') {\r\n      setIsLoggedIn(true); // ログイン状態をtrueに設定\r\n      // 選択されたマイクデバイスIDをどこかに保存または渡すことも可能です（例: グローバルステート、コンテキストAPI、localStorageなど）\r\n      console.log(\"選択されたマイクID:\", selectedMicrophoneId);\r\n      navigate('/home'); // ログイン成功後、/home へ遷移\r\n    } else {\r\n      // 認証失敗時のメッセージ表示（alertの代わりにカスタムモーダルを使用することを推奨）\r\n      alert('ユーザー名またはパスワードが異なります。');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">ログイン</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n              ロボット名:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n              パスワード:\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"microphone-select\">\r\n              マイク:\r\n            </label>\r\n            {/* エラーメッセージがある場合 */}\r\n            {error && <p className=\"text-red-500 text-xs italic mb-2\">{error}</p>}\r\n            {/* マイクへのアクセスが許可されていない場合 */}\r\n            {!permissionGranted && !error && (\r\n              <p className=\"text-sm text-gray-600 mb-2\">\r\n                マイクデバイスを表示するには、マイクへのアクセスを許可してください。\r\n              </p>\r\n            )}\r\n            <select\r\n              id=\"microphone-select\"\r\n              value={selectedMicrophoneId}\r\n              onChange={(e) => setSelectedMicrophoneId(e.target.value)}\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              disabled={microphones.length === 0 || !permissionGranted} // デバイスがない、または許可がない場合は無効化\r\n            >\r\n              {microphones.length === 0 ? (\r\n                <option value=\"\">{permissionGranted ? 'マイクデバイスが見つかりません' : 'マイク検出中...'}</option>\r\n              ) : (\r\n                <>\r\n                  <option value=\"\">マイクを選択してください</option>\r\n                  {microphones.map((mic) => (\r\n                    <option key={mic.deviceId} value={mic.deviceId}>\r\n                      {mic.label || `不明なマイク (${mic.deviceId})`}\r\n                    </option>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline w-full transition duration-300 ease-in-out\"\r\n          >\r\n            ログイン\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}