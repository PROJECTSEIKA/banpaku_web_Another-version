{"ast":null,"code":"var _jsxFileName = \"C:\\\\banpaku_2025\\\\banpaku\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef, useState } from \"react\";\n// import { useNavigate } from 'react-router-dom';\n// import \"./style.css\"\n// import {\n//   nowInSec,\n//   SkyWayAuthToken,\n//   SkyWayContext,\n//   SkyWayRoom,\n//   SkyWayStreamFactory,\n//   uuidV4,\n// } from '@skyway-sdk/room';\n\n// /**\n//  * ホーム画面コンポーネント\n//  * @param {object} props - プロパティ\n//  * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\n//  */\n// function Home({setIsLoggedIn}) {\n//     const remoteVideoRef = useRef(null); // リモート映像を表示するためのvideo要素への参照\n\n//     const [cameraStatus, setCameraStatus] = useState(\"接続を待機中...\"); // カメラ接続状態\n//     const [isConnectedToRoom, setIsConnectedToRoom] = useState(false); // SkyWayルームへの接続状態\n//     const [hasRemoteStream, setHasRemoteStream] = useState(false); // リモートストリームの有無\n\n//     const [skywayContext, setSkywayContext] = useState(null);\n//     const [skywayRoom, setSkywayRoom] = useState(null);\n\n//     const navigate = useNavigate();\n\n//   /**\n//    * ログアウトボタンクリック時のハンドラ\n//    */\n\n//     const handleLogout = () => {\n//     setIsLoggedIn(false); // ログイン状態をfalseに設定\n//     navigate('/'); // ログアウト後、ログインページへ遷移\n//     };\n\n//     //tokenの生成\n//     const token = new SkyWayAuthToken({\n//         jti: uuidV4(),\n//         iat: nowInSec(),\n//         exp: nowInSec() + 60 * 60 * 24,\n//         version: 3,\n//         scope: {\n//             appId: \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\",\n//             rooms: [\n//             {\n//             name: \"*\",\n//             methods: [\"create\", \"close\", \"updateMetadata\"],\n//             member: {\n//                 name: \"*\",\n//                 methods: [\"publish\", \"subscribe\", \"updateMetadata\"]\n//             }\n//             }],\n//             turn: {\n//             enabled: true\n//             }\n//         }\n//     }).encode(\"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\");\n\n//     useEffect(() => {\n//         let currentSkywayContext = null;\n//         let currentSkywayRoom = null;\n//         try{\n//             (async() =>{\n//                 const context = await SkyWayContext.Create(token);\n//                 const channel = await SkyWayRoom.FindOrCreate(context, {\n//                     type: 'p2p',\n//                     name: 'a',\n//                 });\n//                 const me = await channel.join();\n//                 setSkywayRoom(currentSkywayRoom);\n//                 setIsConnectedToRoom(true);\n//                 setCameraStatus(`ルーム '${\"a\"}' に接続しました。ストリームを待機中...`);\n//             })()\n//         } catch(e){\n//             console.log(\"a\");\n//         }\n//     },[])\n\n//     return(\n//     <>\n//         <meta charSet=\"UTF-8\" />\n//         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n//         <title>ロボットチャット - RX78-myakumyaku</title>\n//         <link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" />\n//         <div className=\"header\">\n//             <div className=\"header-left\">\n//             <button className=\"motion-btn\">モーション</button>\n//             <span className=\"robot-status\">\n//                 操作しているロボット：RX78-myakumyaku\n//             </span>\n//             </div>\n//             <div className=\"header-right\">\n//             <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\n//             <button className=\"voice-btn\">ボイス</button>\n//             </div>\n//         </div>\n//         <div className=\"main-container\">\n//             <div className=\"side-panel\">\n//             <div className=\"side-panel-content\">\n//                 <button className=\"side-btn\">こんにちは</button>\n//                 <button className=\"side-btn\">バイバイ</button>\n//                 <button className=\"side-btn\">ペコリ</button>\n//                 <button className=\"side-btn\">バタバタ</button>\n//                 <button className=\"side-btn\">うえをむく</button>\n//                 <button className=\"side-btn\">したをむく</button>\n//                 <button className=\"side-btn\">みぎをむく</button>\n//                 <button className=\"side-btn\">ひだりをむく</button>\n//                 <button className=\"side-btn\">うなずく</button>\n//                 <button className=\"side-btn\">かしげる</button>\n//                 <button className=\"side-btn\">まわる</button>\n//                 <button className=\"side-btn\">ジャンプ</button>\n//                 <button className=\"side-btn\">ダンス</button>\n//                 <button className=\"side-btn\">おじぎ</button>\n//                 <button className=\"side-btn\">きをつけ</button>\n//                 <button className=\"side-btn\">休め</button>\n//             </div>\n//             </div>\n//             <div className=\"main-area\">\n//             <div className=\"robot-display\"></div>\n//             </div>\n//             <div className=\"side-panel right\">\n//             <div className=\"side-panel-content\">\n//                 <button className=\"side-btn\">こんにちは</button>\n//                 <button className=\"side-btn\">どこからきたの？</button>\n//                 <button className=\"side-btn\">バイバイ</button>\n//                 <button className=\"side-btn\">○○していますか？</button>\n//                 <button className=\"side-btn\">ありがとう</button>\n//                 <button className=\"side-btn\">いいね</button>\n//                 <button className=\"side-btn\">おおきに</button>\n//                 <button className=\"side-btn\">すごい</button>\n//                 <button className=\"side-btn\">がんばれ</button>\n//                 <button className=\"side-btn\">よろしく</button>\n//                 <button className=\"side-btn\">お疲れ様</button>\n//                 <button className=\"side-btn\">いいお天気</button>\n//                 <button className=\"side-btn\">暑いですね</button>\n//                 <button className=\"side-btn\">寒いですね</button>\n//                 <button className=\"side-btn\">楽しい</button>\n//                 <button className=\"side-btn\">面白い</button>\n//                 <button className=\"side-btn\">すてき</button>\n//                 <button className=\"side-btn\">かわいい</button>\n//                 <button className=\"side-btn\">かっこいい</button>\n//                 <button className=\"side-btn\">また明日</button>\n//             </div>\n//             </div>\n//         </div>\n//         <div className=\"bottom-controls\">\n//             <button className=\"control-btn ai-btn\">🤖 AIでいあんON</button>\n//             <button className=\"control-btn mic-btn\" id=\"micBtn\">\n//             🎤\n//             </button>\n//             <button className=\"control-btn manual-btn\" id=\"manualBtn\">\n//             📋 マニュアル\n//             </button>\n//             <button className=\"control-btn greeting-btn\" id=\"languageBtn\">\n//             👋 にほんご\n//             </button>\n//         </div>\n//     </>\n\n//     )\n// }\n\n// export default Home;\n\nimport React, { useEffect, useRef, useState } from \"react\";\n//a\n// SkyWay SDKのクラスがグローバルスコープで利用可能であると仮定してアクセスします。\n// HTMLファイルでCDN経由でSkyWay SDKを読み込む必要があります。\n// 例: <script src=\"https://cdn.jsdelivr.net/npm/@skyway-sdk/room/dist/skyway-room.min.js\"></script>\n\n/**\r\n * SkyWay認証トークンを生成する関数\r\n * @returns {string | null} 生成されたトークン、またはエラーの場合はnull\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateSkyWayToken = () => {\n  // Canvas環境のグローバル変数からappIdとsecretを取得することを試みます。\n  // もし提供されない場合は、デモ用のダミー値を使用します。\n  const appId = \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\";\n  const secret = \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\";\n  if (appId === 'your-skyway-app-id' || secret === 'your-skyway-secret-key') {\n    console.warn(\"SkyWay App ID または Secret Key が設定されていません。デモ用のダミー値を使用しています。\");\n    console.warn(\"SkyWayの機能を利用するには、__app_id と __secret_key を適切に設定してください。\");\n  }\n\n  // SkyWayAuthTokenとuuidV4がグローバルスコープで利用可能であるか確認\n  // ここでは、SDKがロードされていることを前提とせず、安全なチェックを行います。\n  if (typeof window.SkyWayAuthToken === 'undefined' || typeof window.uuidV4 === 'undefined' || typeof window.nowInSec === 'undefined') {\n    // この関数が呼ばれる前にSDKの存在チェックが済んでいることを想定\n    // もしここでundefinedであれば、SDKが正しくロードされていないか、タイミングの問題\n    console.error(\"SkyWay SDKの必須クラス/関数がまだ利用できません (SkyWayAuthToken, uuidV4, nowInSec)。\");\n    return null;\n  }\n  return new window.SkyWayAuthToken({\n    // window.SkyWayAuthToken を使用\n    jti: window.uuidV4(),\n    // window.uuidV4 を使用\n    iat: window.nowInSec(),\n    // window.nowInSec を使用\n    exp: window.nowInSec() + 60 * 60 * 24,\n    // トークン有効期限: 24時間\n    version: 3,\n    scope: {\n      appId: appId,\n      rooms: [{\n        name: \"*\",\n        // 全てのルーム名にアクセス許可\n        methods: [\"create\", \"close\", \"updateMetadata\"],\n        member: {\n          name: \"*\",\n          // 全てのメンバー名にアクセス許可\n          methods: [\"publish\", \"subscribe\", \"updateMetadata\"]\n        }\n      }],\n      turn: {\n        enabled: true // TURNサーバーの使用を許可\n      }\n    }\n  }).encode(secret);\n};\n\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n*/\nfunction App({\n  setIsLoggedIn\n}) {\n  _s();\n  const remoteVideoRef = useRef(null); // リモート映像を表示するためのvideo要素への参照\n\n  const [cameraStatus, setCameraStatus] = useState(\"SkyWay SDKを読み込み中...\"); // カメラ接続状態\n  const [isConnectedToRoom, setIsConnectedToRoom] = useState(false); // SkyWayルームへの接続状態\n  const [hasRemoteStream, setHasRemoteStream] = useState(false); // リモートストリームの有無\n  const [isSdkLoaded, setIsSdkLoaded] = useState(false); // SkyWay SDKがロードされたかどうかの状態\n\n  const [skywayContext, setSkywayContext] = useState(null);\n  const [skywayRoom, setSkywayRoom] = useState(null);\n\n  // 固定のルームID (P2P用)\n  const FIXED_ROOM_ID = 'robot-control-room-p2p';\n\n  /**\r\n   * ログアウトボタンクリック時のハンドラ\r\n   */\n  const handleLogout = () => {\n    // ルームから切断し、リソースを解放\n    if (skywayRoom) {\n      skywayRoom.close();\n    }\n    if (skywayContext) {\n      skywayContext.dispose();\n    }\n    setIsLoggedIn(false); // ログイン状態をfalseに設定\n  };\n\n  /**\r\n   * SkyWay Contextの初期化とルームへの自動参加、ストリーム購読\r\n   */\n  useEffect(() => {\n    let currentSkywayContext = null;\n    let currentSkywayRoom = null;\n    let checkSdkInterval;\n\n    // SkyWay SDKのロードを待機する関数\n    const waitForSkyWaySdk = () => {\n      if (typeof window.SkyWayContext !== 'undefined' && typeof window.SkyWayRoom !== 'undefined' && typeof window.RemoteVideoStream !== 'undefined' && typeof window.SkyWayAuthToken !== 'undefined' && typeof window.uuidV4 !== 'undefined' && typeof window.nowInSec !== 'undefined') {\n        clearInterval(checkSdkInterval); // 繰り返しチェックを停止\n        setIsSdkLoaded(true); // SDKがロードされたことをマーク\n        setCameraStatus(\"SkyWay SDKの初期化中...\");\n        initSkyWay(); // SDKがロードされたら初期化を開始\n      } else {\n        setCameraStatus(\"SkyWay SDKを読み込み中...\");\n      }\n    };\n\n    // 100msごとにSDKのロード状態をチェック\n    checkSdkInterval = setInterval(waitForSkyWaySdk, 100);\n    const initSkyWay = async () => {\n      try {\n        const token = generateSkyWayToken();\n        if (!token) {\n          setCameraStatus(\"SkyWayトークンの生成に失敗しました。\");\n          return;\n        }\n        currentSkywayContext = await window.SkyWayContext.Create(token); // window.SkyWayContext を使用\n        setSkywayContext(currentSkywayContext);\n        console.log(\"SkyWayContext initialized.\");\n        setCameraStatus(`ルーム '${FIXED_ROOM_ID}' に接続中...`);\n        currentSkywayRoom = await window.SkyWayRoom.FindOrCreate(currentSkywayContext, {\n          // window.SkyWayRoom を使用\n          type: 'p2p',\n          // P2Pルームタイプを使用\n          name: FIXED_ROOM_ID\n        });\n        setSkywayRoom(currentSkywayRoom);\n        setIsConnectedToRoom(true);\n        setCameraStatus(`ルーム '${FIXED_ROOM_ID}' に接続しました。ストリームを待機中...`);\n\n        // ルーム内の既存の公開ストリームを購読\n        currentSkywayRoom.publications.forEach(async publication => {\n          if (publication.contentType === 'video') {\n            console.log(`既存のビデオストリームを購読中: ${publication.id}`);\n            const {\n              stream\n            } = await currentSkywayRoom.subscribe(publication.id);\n            if (remoteVideoRef.current && stream instanceof window.RemoteVideoStream) {\n              // window.RemoteVideoStream を使用\n              remoteVideoRef.current.srcObject = stream;\n              setHasRemoteStream(true);\n              setCameraStatus(\"ロボット映像を受信中\");\n              console.log(\"リモート映像を表示中。\");\n            }\n          }\n        });\n\n        // リモートメンバーがルームに参加し、ストリームを公開したときのイベントリスナー\n        currentSkywayRoom.onStreamPublished.add(async ({\n          publication\n        }) => {\n          // 自身の公開ストリームは購読しない (このアプリでは公開しないが念のため)\n          if (publication.origin.id === currentSkywayRoom.localPerson.id) {\n            return;\n          }\n          // ビデオストリームのみを購読\n          if (publication.contentType === 'video') {\n            console.log(`リモートビデオストリームが公開されました: ${publication.id}`);\n            const {\n              stream\n            } = await currentSkywayRoom.subscribe(publication.id);\n            if (remoteVideoRef.current && stream instanceof window.RemoteVideoStream) {\n              // window.RemoteVideoStream を使用\n              remoteVideoRef.current.srcObject = stream;\n              setHasRemoteStream(true);\n              setCameraStatus(\"ロボット映像を受信中\");\n              console.log(\"リモート映像を表示中。\");\n            }\n          }\n        });\n\n        // リモートメンバーがストリームを非公開にしたときのイベントリスナー\n        currentSkywayRoom.onStreamUnpublished.add(({\n          publication\n        }) => {\n          if (publication.contentType === 'video') {\n            console.log(`リモートビデオストリームが非公開になりました: ${publication.id}`);\n            if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n              remoteVideoRef.current.srcObject = null;\n            }\n            setHasRemoteStream(false);\n            setCameraStatus(\"ストリームが切断されました。接続を待機中...\");\n            console.log(\"リモート映像の表示を停止しました。\");\n          }\n        });\n\n        // メンバーがルームから退出したときのイベントリスナー\n        currentSkywayRoom.onMemberLeft.add(({\n          member\n        }) => {\n          console.log(`メンバーが退出しました: ${member.id}`);\n          // 退出したメンバーのストリームが停止した場合は、リモート映像をクリア\n          if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n            remoteVideoRef.current.srcObject = null;\n            setHasRemoteStream(false);\n            setCameraStatus(\"ストリームが切断されました。接続を待機中...\");\n            console.log(\"リモート映像をクリアしました。\");\n          }\n        });\n\n        // ルームが閉じたときのイベントリスナー\n        currentSkywayRoom.onClosed.add(() => {\n          console.log(\"ルームが閉じられました。\");\n          setIsConnectedToRoom(false);\n          setSkywayRoom(null);\n          setHasRemoteStream(false);\n          if (remoteVideoRef.current) {\n            remoteVideoRef.current.srcObject = null;\n          }\n          setCameraStatus(\"ルームから切断されました。\");\n        });\n      } catch (error) {\n        console.error(\"SkyWayの初期化またはルームへの参加に失敗しました:\", error);\n        setCameraStatus(\"接続に失敗しました。\");\n        setIsConnectedToRoom(false);\n        setHasRemoteStream(false);\n      }\n    };\n\n    // コンポーネントアンマウント時のクリーンアップ\n    return () => {\n      clearInterval(checkSdkInterval); // インターバルをクリア\n      if (currentSkywayRoom) {\n        currentSkywayRoom.close();\n        console.log(\"SkyWayRoom closed on unmount.\");\n      }\n      if (currentSkywayContext) {\n        currentSkywayContext.dispose();\n        console.log(\"SkyWayContext disposed on unmount.\");\n      }\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = null;\n      }\n    };\n  }, []); // 空の依存配列でコンポーネントのマウント時に一度だけ実行\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 font-inter flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-md p-4 flex justify-between items-center rounded-b-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out\",\n          children: \"\\u30E2\\u30FC\\u30B7\\u30E7\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 text-lg font-semibold\",\n          children: \"\\u64CD\\u4F5C\\u3057\\u3066\\u3044\\u308B\\u30ED\\u30DC\\u30C3\\u30C8\\uFF1ARX78-myakumyaku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out\",\n          children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out\",\n          children: \"\\u30DC\\u30A4\\u30B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-grow flex flex-col lg:flex-row p-4 space-y-4 lg:space-y-0 lg:space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"w-full lg:w-1/5 bg-white p-4 rounded-lg shadow-md overflow-y-auto max-h-[calc(100vh-180px)]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: ['こんにちは', 'バイバイ', 'ペコリ', 'バタバタ', 'うえをむく', 'したをむく', 'みぎをむく', 'ひだりをむく', 'うなずく', 'かしげる', 'まわる', 'ジャンプ', 'ダンス', 'おじぎ', 'きをつけ', '休め'].map((text, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded-lg transition duration-300 ease-in-out\",\n            children: text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"flex-grow bg-white p-4 rounded-lg shadow-md flex flex-col items-center justify-center space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"robot-display w-full h-96 bg-gray-800 rounded-lg overflow-hidden flex items-center justify-center relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: remoteVideoRef,\n            autoPlay: true,\n            playsInline: true,\n            className: \"w-full h-full object-contain rounded-lg bg-black absolute top-0 left-0\" // 接続がない場合は黒い画面になるようにbg-blackを追加\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 25\n          }, this), !hasRemoteStream && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-0 flex items-center justify-center text-white text-xl bg-black bg-opacity-75 rounded-lg\",\n            children: \"\\u63A5\\u7D9A\\u3092\\u5F85\\u6A5F\\u4E2D...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-display flex items-center space-x-2 text-lg font-semibold\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-dot w-3 h-3 rounded-full ${isConnectedToRoom && hasRemoteStream ? 'bg-green-500' : 'bg-red-500'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: isConnectedToRoom && hasRemoteStream ? 'text-green-700' : 'text-red-700',\n            children: cameraStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"w-full lg:w-1/5 bg-white p-4 rounded-lg shadow-md overflow-y-auto max-h-[calc(100vh-180px)]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: ['こんにちは', 'どこからきたの？', 'バイバイ', '○○していますか？', 'ありがとう', 'いいね', 'おおきに', 'すごい', 'がんばれ', 'よろしく', 'お疲れ様', 'いいお天気', '暑いですね', '寒いですね', '楽しい', '面白い', 'すてき', 'かわいい', 'かっこいい', 'また明日'].map((text, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded-lg transition duration-300 ease-in-out\",\n            children: text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"bg-white shadow-md p-4 flex justify-center items-center space-x-4 rounded-t-lg mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn bg-purple-500 hover:bg-purple-600 text-white font-bold py-3 px-6 rounded-lg shadow-md transition duration-300 ease-in-out flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"robot\",\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"AI\\u3067\\u3044\\u3042\\u3093ON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-3 px-6 rounded-lg shadow-md transition duration-300 ease-in-out flex items-center space-x-2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"microphone\",\n          children: \"\\uD83C\\uDFA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn bg-teal-500 hover:bg-teal-600 text-white font-bold py-3 px-6 rounded-lg shadow-md transition duration-300 ease-in-out flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"clipboard\",\n          children: \"\\uD83D\\uDCCB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u30DE\\u30CB\\u30E5\\u30A2\\u30EB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-6 rounded-lg shadow-md transition duration-300 ease-in-out flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"hand wave\",\n          children: \"\\uD83D\\uDC4B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u306B\\u307B\\u3093\\u3054\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"32bvXo3Jzc0O4WUYqRBQxG2syvg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","generateSkyWayToken","appId","secret","console","warn","window","SkyWayAuthToken","uuidV4","nowInSec","error","jti","iat","exp","version","scope","rooms","name","methods","member","turn","enabled","encode","App","setIsLoggedIn","_s","remoteVideoRef","cameraStatus","setCameraStatus","isConnectedToRoom","setIsConnectedToRoom","hasRemoteStream","setHasRemoteStream","isSdkLoaded","setIsSdkLoaded","skywayContext","setSkywayContext","skywayRoom","setSkywayRoom","FIXED_ROOM_ID","handleLogout","close","dispose","currentSkywayContext","currentSkywayRoom","checkSdkInterval","waitForSkyWaySdk","SkyWayContext","SkyWayRoom","RemoteVideoStream","clearInterval","initSkyWay","setInterval","token","Create","log","FindOrCreate","type","publications","forEach","publication","contentType","id","stream","subscribe","current","srcObject","onStreamPublished","add","origin","localPerson","onStreamUnpublished","onMemberLeft","onClosed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","text","index","ref","autoPlay","playsInline","role","_c","$RefreshReg$"],"sources":["C:/banpaku_2025/banpaku/src/home.js"],"sourcesContent":["// import React, { useEffect, useRef, useState } from \"react\";\r\n// import { useNavigate } from 'react-router-dom';\r\n// import \"./style.css\"\r\n// import {\r\n//   nowInSec,\r\n//   SkyWayAuthToken,\r\n//   SkyWayContext,\r\n//   SkyWayRoom,\r\n//   SkyWayStreamFactory,\r\n//   uuidV4,\r\n// } from '@skyway-sdk/room';\r\n\r\n// /**\r\n//  * ホーム画面コンポーネント\r\n//  * @param {object} props - プロパティ\r\n//  * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n//  */\r\n// function Home({setIsLoggedIn}) {\r\n//     const remoteVideoRef = useRef(null); // リモート映像を表示するためのvideo要素への参照\r\n\r\n//     const [cameraStatus, setCameraStatus] = useState(\"接続を待機中...\"); // カメラ接続状態\r\n//     const [isConnectedToRoom, setIsConnectedToRoom] = useState(false); // SkyWayルームへの接続状態\r\n//     const [hasRemoteStream, setHasRemoteStream] = useState(false); // リモートストリームの有無\r\n\r\n//     const [skywayContext, setSkywayContext] = useState(null);\r\n//     const [skywayRoom, setSkywayRoom] = useState(null);\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//   /**\r\n//    * ログアウトボタンクリック時のハンドラ\r\n//    */\r\n\r\n//     const handleLogout = () => {\r\n//     setIsLoggedIn(false); // ログイン状態をfalseに設定\r\n//     navigate('/'); // ログアウト後、ログインページへ遷移\r\n//     };\r\n\r\n//     //tokenの生成\r\n//     const token = new SkyWayAuthToken({\r\n//         jti: uuidV4(),\r\n//         iat: nowInSec(),\r\n//         exp: nowInSec() + 60 * 60 * 24,\r\n//         version: 3,\r\n//         scope: {\r\n//             appId: \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\",\r\n//             rooms: [\r\n//             {\r\n//             name: \"*\",\r\n//             methods: [\"create\", \"close\", \"updateMetadata\"],\r\n//             member: {\r\n//                 name: \"*\",\r\n//                 methods: [\"publish\", \"subscribe\", \"updateMetadata\"]\r\n//             }\r\n//             }],\r\n//             turn: {\r\n//             enabled: true\r\n//             }\r\n//         }\r\n//     }).encode(\"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\");\r\n\r\n//     useEffect(() => {\r\n//         let currentSkywayContext = null;\r\n//         let currentSkywayRoom = null;\r\n//         try{\r\n//             (async() =>{\r\n//                 const context = await SkyWayContext.Create(token);\r\n//                 const channel = await SkyWayRoom.FindOrCreate(context, {\r\n//                     type: 'p2p',\r\n//                     name: 'a',\r\n//                 });\r\n//                 const me = await channel.join();\r\n//                 setSkywayRoom(currentSkywayRoom);\r\n//                 setIsConnectedToRoom(true);\r\n//                 setCameraStatus(`ルーム '${\"a\"}' に接続しました。ストリームを待機中...`);\r\n//             })()\r\n//         } catch(e){\r\n//             console.log(\"a\");\r\n//         }\r\n//     },[])\r\n\r\n//     return(\r\n//     <>\r\n//         <meta charSet=\"UTF-8\" />\r\n//         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n//         <title>ロボットチャット - RX78-myakumyaku</title>\r\n//         <link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" />\r\n//         <div className=\"header\">\r\n//             <div className=\"header-left\">\r\n//             <button className=\"motion-btn\">モーション</button>\r\n//             <span className=\"robot-status\">\r\n//                 操作しているロボット：RX78-myakumyaku\r\n//             </span>\r\n//             </div>\r\n//             <div className=\"header-right\">\r\n//             <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\r\n//             <button className=\"voice-btn\">ボイス</button>\r\n//             </div>\r\n//         </div>\r\n//         <div className=\"main-container\">\r\n//             <div className=\"side-panel\">\r\n//             <div className=\"side-panel-content\">\r\n//                 <button className=\"side-btn\">こんにちは</button>\r\n//                 <button className=\"side-btn\">バイバイ</button>\r\n//                 <button className=\"side-btn\">ペコリ</button>\r\n//                 <button className=\"side-btn\">バタバタ</button>\r\n//                 <button className=\"side-btn\">うえをむく</button>\r\n//                 <button className=\"side-btn\">したをむく</button>\r\n//                 <button className=\"side-btn\">みぎをむく</button>\r\n//                 <button className=\"side-btn\">ひだりをむく</button>\r\n//                 <button className=\"side-btn\">うなずく</button>\r\n//                 <button className=\"side-btn\">かしげる</button>\r\n//                 <button className=\"side-btn\">まわる</button>\r\n//                 <button className=\"side-btn\">ジャンプ</button>\r\n//                 <button className=\"side-btn\">ダンス</button>\r\n//                 <button className=\"side-btn\">おじぎ</button>\r\n//                 <button className=\"side-btn\">きをつけ</button>\r\n//                 <button className=\"side-btn\">休め</button>\r\n//             </div>\r\n//             </div>\r\n//             <div className=\"main-area\">\r\n//             <div className=\"robot-display\"></div>\r\n//             </div>\r\n//             <div className=\"side-panel right\">\r\n//             <div className=\"side-panel-content\">\r\n//                 <button className=\"side-btn\">こんにちは</button>\r\n//                 <button className=\"side-btn\">どこからきたの？</button>\r\n//                 <button className=\"side-btn\">バイバイ</button>\r\n//                 <button className=\"side-btn\">○○していますか？</button>\r\n//                 <button className=\"side-btn\">ありがとう</button>\r\n//                 <button className=\"side-btn\">いいね</button>\r\n//                 <button className=\"side-btn\">おおきに</button>\r\n//                 <button className=\"side-btn\">すごい</button>\r\n//                 <button className=\"side-btn\">がんばれ</button>\r\n//                 <button className=\"side-btn\">よろしく</button>\r\n//                 <button className=\"side-btn\">お疲れ様</button>\r\n//                 <button className=\"side-btn\">いいお天気</button>\r\n//                 <button className=\"side-btn\">暑いですね</button>\r\n//                 <button className=\"side-btn\">寒いですね</button>\r\n//                 <button className=\"side-btn\">楽しい</button>\r\n//                 <button className=\"side-btn\">面白い</button>\r\n//                 <button className=\"side-btn\">すてき</button>\r\n//                 <button className=\"side-btn\">かわいい</button>\r\n//                 <button className=\"side-btn\">かっこいい</button>\r\n//                 <button className=\"side-btn\">また明日</button>\r\n//             </div>\r\n//             </div>\r\n//         </div>\r\n//         <div className=\"bottom-controls\">\r\n//             <button className=\"control-btn ai-btn\">🤖 AIでいあんON</button>\r\n//             <button className=\"control-btn mic-btn\" id=\"micBtn\">\r\n//             🎤\r\n//             </button>\r\n//             <button className=\"control-btn manual-btn\" id=\"manualBtn\">\r\n//             📋 マニュアル\r\n//             </button>\r\n//             <button className=\"control-btn greeting-btn\" id=\"languageBtn\">\r\n//             👋 にほんご\r\n//             </button>\r\n//         </div>\r\n//     </>\r\n\r\n//     )\r\n// }\r\n\r\n\r\n// export default Home;\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n//a\r\n// SkyWay SDKのクラスがグローバルスコープで利用可能であると仮定してアクセスします。\r\n// HTMLファイルでCDN経由でSkyWay SDKを読み込む必要があります。\r\n// 例: <script src=\"https://cdn.jsdelivr.net/npm/@skyway-sdk/room/dist/skyway-room.min.js\"></script>\r\n\r\n/**\r\n * SkyWay認証トークンを生成する関数\r\n * @returns {string | null} 生成されたトークン、またはエラーの場合はnull\r\n */\r\nconst generateSkyWayToken = () => {\r\n    // Canvas環境のグローバル変数からappIdとsecretを取得することを試みます。\r\n    // もし提供されない場合は、デモ用のダミー値を使用します。\r\n    const appId = \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\";\r\n    const secret =\"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\";\r\n\r\n    if (appId === 'your-skyway-app-id' || secret === 'your-skyway-secret-key') {\r\n        console.warn(\"SkyWay App ID または Secret Key が設定されていません。デモ用のダミー値を使用しています。\");\r\n        console.warn(\"SkyWayの機能を利用するには、__app_id と __secret_key を適切に設定してください。\");\r\n    }\r\n\r\n    // SkyWayAuthTokenとuuidV4がグローバルスコープで利用可能であるか確認\r\n    // ここでは、SDKがロードされていることを前提とせず、安全なチェックを行います。\r\n    if (typeof window.SkyWayAuthToken === 'undefined' || typeof window.uuidV4 === 'undefined' || typeof window.nowInSec === 'undefined') {\r\n        // この関数が呼ばれる前にSDKの存在チェックが済んでいることを想定\r\n        // もしここでundefinedであれば、SDKが正しくロードされていないか、タイミングの問題\r\n        console.error(\"SkyWay SDKの必須クラス/関数がまだ利用できません (SkyWayAuthToken, uuidV4, nowInSec)。\");\r\n        return null;\r\n    }\r\n\r\n    return new window.SkyWayAuthToken({ // window.SkyWayAuthToken を使用\r\n        jti: window.uuidV4(), // window.uuidV4 を使用\r\n        iat: window.nowInSec(), // window.nowInSec を使用\r\n        exp: window.nowInSec() + 60 * 60 * 24, // トークン有効期限: 24時間\r\n        version: 3,\r\n        scope: {\r\n            appId: appId,\r\n            rooms: [\r\n                {\r\n                    name: \"*\", // 全てのルーム名にアクセス許可\r\n                    methods: [\"create\", \"close\", \"updateMetadata\"],\r\n                    member: {\r\n                        name: \"*\", // 全てのメンバー名にアクセス許可\r\n                        methods: [\"publish\", \"subscribe\", \"updateMetadata\"]\r\n                    }\r\n                }],\r\n            turn: {\r\n                enabled: true // TURNサーバーの使用を許可\r\n            }\r\n        }\r\n    }).encode(secret);\r\n};\r\n\r\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n*/\r\nfunction App({ setIsLoggedIn }) {\r\n    const remoteVideoRef = useRef(null); // リモート映像を表示するためのvideo要素への参照\r\n\r\n    const [cameraStatus, setCameraStatus] = useState(\"SkyWay SDKを読み込み中...\"); // カメラ接続状態\r\n    const [isConnectedToRoom, setIsConnectedToRoom] = useState(false); // SkyWayルームへの接続状態\r\n    const [hasRemoteStream, setHasRemoteStream] = useState(false); // リモートストリームの有無\r\n    const [isSdkLoaded, setIsSdkLoaded] = useState(false); // SkyWay SDKがロードされたかどうかの状態\r\n\r\n    const [skywayContext, setSkywayContext] = useState(null);\r\n    const [skywayRoom, setSkywayRoom] = useState(null);\r\n\r\n    // 固定のルームID (P2P用)\r\n    const FIXED_ROOM_ID = 'robot-control-room-p2p';\r\n\r\n    /**\r\n     * ログアウトボタンクリック時のハンドラ\r\n     */\r\n    const handleLogout = () => {\r\n        // ルームから切断し、リソースを解放\r\n        if (skywayRoom) {\r\n            skywayRoom.close();\r\n        }\r\n        if (skywayContext) {\r\n            skywayContext.dispose();\r\n        }\r\n        setIsLoggedIn(false); // ログイン状態をfalseに設定\r\n    };\r\n\r\n    /**\r\n     * SkyWay Contextの初期化とルームへの自動参加、ストリーム購読\r\n     */\r\n    useEffect(() => {\r\n        let currentSkywayContext = null;\r\n        let currentSkywayRoom = null;\r\n        let checkSdkInterval;\r\n\r\n        // SkyWay SDKのロードを待機する関数\r\n        const waitForSkyWaySdk = () => {\r\n            if (typeof window.SkyWayContext !== 'undefined' &&\r\n                typeof window.SkyWayRoom !== 'undefined' &&\r\n                typeof window.RemoteVideoStream !== 'undefined' &&\r\n                typeof window.SkyWayAuthToken !== 'undefined' &&\r\n                typeof window.uuidV4 !== 'undefined' &&\r\n                typeof window.nowInSec !== 'undefined') {\r\n                \r\n                clearInterval(checkSdkInterval); // 繰り返しチェックを停止\r\n                setIsSdkLoaded(true); // SDKがロードされたことをマーク\r\n                setCameraStatus(\"SkyWay SDKの初期化中...\");\r\n                initSkyWay(); // SDKがロードされたら初期化を開始\r\n            } else {\r\n                setCameraStatus(\"SkyWay SDKを読み込み中...\");\r\n            }\r\n        };\r\n\r\n        // 100msごとにSDKのロード状態をチェック\r\n        checkSdkInterval = setInterval(waitForSkyWaySdk, 100);\r\n\r\n        const initSkyWay = async () => {\r\n            try {\r\n                const token = generateSkyWayToken();\r\n                if (!token) {\r\n                    setCameraStatus(\"SkyWayトークンの生成に失敗しました。\");\r\n                    return;\r\n                }\r\n\r\n                currentSkywayContext = await window.SkyWayContext.Create(token); // window.SkyWayContext を使用\r\n                setSkywayContext(currentSkywayContext);\r\n                console.log(\"SkyWayContext initialized.\");\r\n\r\n                setCameraStatus(`ルーム '${FIXED_ROOM_ID}' に接続中...`);\r\n                currentSkywayRoom = await window.SkyWayRoom.FindOrCreate(currentSkywayContext, { // window.SkyWayRoom を使用\r\n                    type: 'p2p', // P2Pルームタイプを使用\r\n                    name: FIXED_ROOM_ID,\r\n                });\r\n                setSkywayRoom(currentSkywayRoom);\r\n                setIsConnectedToRoom(true);\r\n                setCameraStatus(`ルーム '${FIXED_ROOM_ID}' に接続しました。ストリームを待機中...`);\r\n\r\n                // ルーム内の既存の公開ストリームを購読\r\n                currentSkywayRoom.publications.forEach(async (publication) => {\r\n                    if (publication.contentType === 'video') {\r\n                        console.log(`既存のビデオストリームを購読中: ${publication.id}`);\r\n                        const { stream } = await currentSkywayRoom.subscribe(publication.id);\r\n                        if (remoteVideoRef.current && stream instanceof window.RemoteVideoStream) { // window.RemoteVideoStream を使用\r\n                            remoteVideoRef.current.srcObject = stream;\r\n                            setHasRemoteStream(true);\r\n                            setCameraStatus(\"ロボット映像を受信中\");\r\n                            console.log(\"リモート映像を表示中。\");\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // リモートメンバーがルームに参加し、ストリームを公開したときのイベントリスナー\r\n                currentSkywayRoom.onStreamPublished.add(async ({ publication }) => {\r\n                    // 自身の公開ストリームは購読しない (このアプリでは公開しないが念のため)\r\n                    if (publication.origin.id === currentSkywayRoom.localPerson.id) {\r\n                        return;\r\n                    }\r\n                    // ビデオストリームのみを購読\r\n                    if (publication.contentType === 'video') {\r\n                        console.log(`リモートビデオストリームが公開されました: ${publication.id}`);\r\n                        const { stream } = await currentSkywayRoom.subscribe(publication.id);\r\n                        if (remoteVideoRef.current && stream instanceof window.RemoteVideoStream) { // window.RemoteVideoStream を使用\r\n                            remoteVideoRef.current.srcObject = stream;\r\n                            setHasRemoteStream(true);\r\n                            setCameraStatus(\"ロボット映像を受信中\");\r\n                            console.log(\"リモート映像を表示中。\");\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // リモートメンバーがストリームを非公開にしたときのイベントリスナー\r\n                currentSkywayRoom.onStreamUnpublished.add(({ publication }) => {\r\n                    if (publication.contentType === 'video') {\r\n                        console.log(`リモートビデオストリームが非公開になりました: ${publication.id}`);\r\n                        if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\r\n                             remoteVideoRef.current.srcObject = null;\r\n                        }\r\n                        setHasRemoteStream(false);\r\n                        setCameraStatus(\"ストリームが切断されました。接続を待機中...\");\r\n                        console.log(\"リモート映像の表示を停止しました。\");\r\n                    }\r\n                });\r\n\r\n                // メンバーがルームから退出したときのイベントリスナー\r\n                currentSkywayRoom.onMemberLeft.add(({ member }) => {\r\n                    console.log(`メンバーが退出しました: ${member.id}`);\r\n                    // 退出したメンバーのストリームが停止した場合は、リモート映像をクリア\r\n                    if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\r\n                        remoteVideoRef.current.srcObject = null;\r\n                        setHasRemoteStream(false);\r\n                        setCameraStatus(\"ストリームが切断されました。接続を待機中...\");\r\n                        console.log(\"リモート映像をクリアしました。\");\r\n                    }\r\n                });\r\n\r\n                // ルームが閉じたときのイベントリスナー\r\n                currentSkywayRoom.onClosed.add(() => {\r\n                    console.log(\"ルームが閉じられました。\");\r\n                    setIsConnectedToRoom(false);\r\n                    setSkywayRoom(null);\r\n                    setHasRemoteStream(false);\r\n                    if (remoteVideoRef.current) {\r\n                        remoteVideoRef.current.srcObject = null;\r\n                    }\r\n                    setCameraStatus(\"ルームから切断されました。\");\r\n                });\r\n\r\n            } catch (error) {\r\n                console.error(\"SkyWayの初期化またはルームへの参加に失敗しました:\", error);\r\n                setCameraStatus(\"接続に失敗しました。\");\r\n                setIsConnectedToRoom(false);\r\n                setHasRemoteStream(false);\r\n            }\r\n        };\r\n\r\n        // コンポーネントアンマウント時のクリーンアップ\r\n        return () => {\r\n            clearInterval(checkSdkInterval); // インターバルをクリア\r\n            if (currentSkywayRoom) {\r\n                currentSkywayRoom.close();\r\n                console.log(\"SkyWayRoom closed on unmount.\");\r\n            }\r\n            if (currentSkywayContext) {\r\n                currentSkywayContext.dispose();\r\n                console.log(\"SkyWayContext disposed on unmount.\");\r\n            }\r\n            if (remoteVideoRef.current) {\r\n                remoteVideoRef.current.srcObject = null;\r\n            }\r\n        };\r\n    }, []); // 空の依存配列でコンポーネントのマウント時に一度だけ実行\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-100 font-inter flex flex-col\">\r\n            {/* ヘッダー */}\r\n            <header className=\"bg-white shadow-md p-4 flex justify-between items-center rounded-b-lg\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                    <button className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out\">\r\n                        モーション\r\n                    </button>\r\n                    <span className=\"text-gray-700 text-lg font-semibold\">\r\n                        操作しているロボット：RX78-myakumyaku\r\n                    </span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-4\">\r\n                    <button\r\n                        onClick={handleLogout}\r\n                        className=\"bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out\"\r\n                    >\r\n                        ログアウト\r\n                    </button>\r\n                    <button className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out\">\r\n                        ボイス\r\n                    </button>\r\n                </div>\r\n            </header>\r\n\r\n            {/* メインコンテンツエリア */}\r\n            <main className=\"flex-grow flex flex-col lg:flex-row p-4 space-y-4 lg:space-y-0 lg:space-x-4\">\r\n                {/* 左サイドパネル */}\r\n                <aside className=\"w-full lg:w-1/5 bg-white p-4 rounded-lg shadow-md overflow-y-auto max-h-[calc(100vh-180px)]\">\r\n                    <div className=\"space-y-2\">\r\n                        {['こんにちは', 'バイバイ', 'ペコリ', 'バタバタ', 'うえをむく', 'したをむく', 'みぎをむく', 'ひだりをむく', 'うなずく', 'かしげる', 'まわる', 'ジャンプ', 'ダンス', 'おじぎ', 'きをつけ', '休め'].map((text, index) => (\r\n                            <button key={index} className=\"w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded-lg transition duration-300 ease-in-out\">\r\n                                {text}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </aside>\r\n\r\n                {/* メイン表示エリア */}\r\n                <section className=\"flex-grow bg-white p-4 rounded-lg shadow-md flex flex-col items-center justify-center space-y-4\">\r\n                    <div className=\"robot-display w-full h-96 bg-gray-800 rounded-lg overflow-hidden flex items-center justify-center relative\">\r\n                        {/* リモート映像を表示するvideo要素 */}\r\n                        <video\r\n                            ref={remoteVideoRef}\r\n                            autoPlay\r\n                            playsInline\r\n                            className=\"w-full h-full object-contain rounded-lg bg-black absolute top-0 left-0\" // 接続がない場合は黒い画面になるようにbg-blackを追加\r\n                        />\r\n                        {/* リモートストリームがない場合に表示するメッセージ */}\r\n                        {!hasRemoteStream && (\r\n                            <div className=\"absolute inset-0 flex items-center justify-center text-white text-xl bg-black bg-opacity-75 rounded-lg\">\r\n                                接続を待機中...\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"status-display flex items-center space-x-2 text-lg font-semibold\">\r\n                        <span className={`status-dot w-3 h-3 rounded-full ${isConnectedToRoom && hasRemoteStream ? 'bg-green-500' : 'bg-red-500'}`} />\r\n                        <span className={isConnectedToRoom && hasRemoteStream ? 'text-green-700' : 'text-red-700'}>{cameraStatus}</span>\r\n                    </div>\r\n                </section>\r\n\r\n                {/* 右サイドパネル */}\r\n                <aside className=\"w-full lg:w-1/5 bg-white p-4 rounded-lg shadow-md overflow-y-auto max-h-[calc(100vh-180px)]\">\r\n                    <div className=\"space-y-2\">\r\n                        {['こんにちは', 'どこからきたの？', 'バイバイ', '○○していますか？', 'ありがとう', 'いいね', 'おおきに', 'すごい', 'がんばれ', 'よろしく', 'お疲れ様', 'いいお天気', '暑いですね', '寒いですね', '楽しい', '面白い', 'すてき', 'かわいい', 'かっこいい', 'また明日'].map((text, index) => (\r\n                            <button key={index} className=\"w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded-lg transition duration-300 ease-in-out\">\r\n                                {text}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </aside>\r\n            </main>\r\n\r\n            {/* フッターコントロール */}\r\n            <footer className=\"bg-white shadow-md p-4 flex justify-center items-center space-x-4 rounded-t-lg mt-4\">\r\n                <button className=\"control-btn bg-purple-500 hover:bg-purple-600 text-white font-bold py-3 px-6 rounded-lg shadow-md transition duration-300 ease-in-out flex items-center space-x-2\">\r\n                    <span role=\"img\" aria-label=\"robot\">🤖</span> <span>AIでいあんON</span>\r\n                </button>\r\n                <button className=\"control-btn bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-3 px-6 rounded-lg shadow-md transition duration-300 ease-in-out flex items-center space-x-2\">\r\n                    <span role=\"img\" aria-label=\"microphone\">🎤</span>\r\n                </button>\r\n                <button className=\"control-btn bg-teal-500 hover:bg-teal-600 text-white font-bold py-3 px-6 rounded-lg shadow-md transition duration-300 ease-in-out flex items-center space-x-2\">\r\n                    <span role=\"img\" aria-label=\"clipboard\">📋</span> <span>マニュアル</span>\r\n                </button>\r\n                <button className=\"control-btn bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-6 rounded-lg shadow-md transition duration-300 ease-in-out flex items-center space-x-2\">\r\n                    <span role=\"img\" aria-label=\"hand wave\">👋</span> <span>にほんご</span>\r\n                </button>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAC9B;EACA;EACA,MAAMC,KAAK,GAAG,sCAAsC;EACpD,MAAMC,MAAM,GAAE,8CAA8C;EAE5D,IAAID,KAAK,KAAK,oBAAoB,IAAIC,MAAM,KAAK,wBAAwB,EAAE;IACvEC,OAAO,CAACC,IAAI,CAAC,2DAA2D,CAAC;IACzED,OAAO,CAACC,IAAI,CAAC,wDAAwD,CAAC;EAC1E;;EAEA;EACA;EACA,IAAI,OAAOC,MAAM,CAACC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}