{"ast":null,"code":"import React,{useState}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import Login from'./login.js';// 正しいパスを確認\nimport Home from'./home.js';// 正しいパスを確認\nimport'./App.css';// Tailwind CSSを適用するために必要（後述）\n/**\n * メインアプリケーションコンポーネント\n * ログイン状態とルーティングを管理\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// ログイン状態を管理するstate\nconst[isLoggedIn,setIsLoggedIn]=useState(false);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Login,{setIsLoggedIn:setIsLoggedIn})}),/*#__PURE__*/_jsx(Route,{path:\"/home\",element:isLoggedIn?/*#__PURE__*/_jsx(Home,{setIsLoggedIn:setIsLoggedIn}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})})});}export default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Login","Home","jsx","_jsx","jsxs","_jsxs","App","isLoggedIn","setIsLoggedIn","children","className","path","element","to"],"sources":["C:/banpaku_2025/banpaku/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './login.js'; // 正しいパスを確認\nimport Home from './home.js' ;   // 正しいパスを確認\nimport './App.css'; // Tailwind CSSを適用するために必要（後述）\n\n/**\n * メインアプリケーションコンポーネント\n * ログイン状態とルーティングを管理\n */\nfunction App() {\n  // ログイン状態を管理するstate\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          {/* ルートパス (\"/\") はログインコンポーネントを表示 */}\n          <Route path=\"/\" element={<Login setIsLoggedIn={setIsLoggedIn} />} />\n\n          {/* \"/home\" パスはログイン状態に応じて表示を切り替える */}\n          <Route\n            path=\"/home\"\n            element={isLoggedIn ? <Home setIsLoggedIn={setIsLoggedIn} /> : <Navigate to=\"/\" />}\n          />\n\n          {/* 未定義のパスに対するリダイレクト */}\n          {/* どのパスにもマッチしない場合、ログインページにリダイレクトする */}\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,MAAO,CAAAC,KAAK,KAAM,YAAY,CAAE;AAChC,MAAO,CAAAC,IAAI,KAAM,WAAW,CAAK;AACjC,MAAO,WAAW,CAAE;AAEpB;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAIA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAEnD,mBACES,IAAA,CAACP,MAAM,EAAAa,QAAA,cACLN,IAAA,QAAKO,SAAS,CAAC,KAAK,CAAAD,QAAA,cAClBJ,KAAA,CAACR,MAAM,EAAAY,QAAA,eAELN,IAAA,CAACL,KAAK,EAACa,IAAI,CAAC,GAAG,CAACC,OAAO,cAAET,IAAA,CAACH,KAAK,EAACQ,aAAa,CAAEA,aAAc,CAAE,CAAE,CAAE,CAAC,cAGpEL,IAAA,CAACL,KAAK,EACJa,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEL,UAAU,cAAGJ,IAAA,CAACF,IAAI,EAACO,aAAa,CAAEA,aAAc,CAAE,CAAC,cAAGL,IAAA,CAACJ,QAAQ,EAACc,EAAE,CAAC,GAAG,CAAE,CAAE,CACpF,CAAC,cAIFV,IAAA,CAACL,KAAK,EAACa,IAAI,CAAC,GAAG,CAACC,OAAO,cAAET,IAAA,CAACJ,QAAQ,EAACc,EAAE,CAAC,GAAG,CAAE,CAAE,CAAE,CAAC,EAC1C,CAAC,CACN,CAAC,CACA,CAAC,CAEb,CAEA,cAAe,CAAAP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}