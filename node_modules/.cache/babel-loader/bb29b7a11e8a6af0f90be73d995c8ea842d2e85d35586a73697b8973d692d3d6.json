{"ast":null,"code":"var _jsxFileName = \"C:\\\\banpaku_2025\\\\banpaku\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport './style.css'; // style.cssを再度有効化\nimport { nowInSec, SkyWayAuthToken, SkyWayContext, SkyWayRoom, SkyWayStreamFactory, uuidV4, LocalP2PRoomMember, RemoteDataStream,\n// RemoteDataStreamをインポート\nRemoteVideoStream,\n// RemoteVideoStreamをインポート\nRemoteAudioStream // RemoteAudioStreamをインポート\n} from '@skyway-sdk/room';\n\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({\n  setIsLoggedIn\n}) {\n  _s();\n  // ルーム名\n  const [roomName, setRoomName] = useState(\"\");\n  // 自分の参加者情報 (ルームに参加すると設定されます)\n  const [me, setMe] = useState(null);\n  // SkyWayコンテキストのインスタンス\n  const [skywayContext, setSkywayContext] = useState(null);\n  // SkyWayルームのインスタンス\n  const [skywayRoom, setSkywayRoom] = useState(null);\n  // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\n  const remoteVideoElements = useRef(new Map());\n  // リモートビデオを表示するDOM要素への参照\n  const robotDisplayRef = useRef(null);\n  // ローカルストリームの参照を保持\n  const localStreamRef = useRef(null);\n  // 受信したメッセージを表示するための状態\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  // 送信したデータストリームの参照を保持\n  const localDataStreamRef = useRef(null);\n  // マイクの状態を表示するための状態 (ミュート状態を管理)\n  const [isMuted, setIsMuted] = useState(false);\n  // オーディオストリームのPublicationを保持するための参照\n  const audioPublicationRef = useRef(null);\n  // 現在の言語状態 ('japanese' または 'english')\n  const [currentLanguage, setCurrentLanguage] = useState('japanese');\n  // AIモードがONかどうかを管理する状態\n  const [isAiModeOn, setIsAiModeOn] = useState(false);\n  // AIからの提案を保持する状態\n  const [aiSuggestions, setAiSuggestions] = useState([]);\n\n  // メッセージとモーションの多言語マッピング\n  const messages = useMemo(() => ({\n    hello: {\n      japanese: 'こんにちは',\n      english: 'Hello'\n    },\n    goodbye: {\n      japanese: 'バイバイ',\n      english: 'Goodbye'\n    },\n    bow: {\n      japanese: 'ペコリ',\n      english: 'Bow'\n    },\n    flap: {\n      japanese: 'バタバタ',\n      english: 'Flap'\n    },\n    lookUp: {\n      japanese: 'うえをむく',\n      english: 'Look up'\n    },\n    lookDown: {\n      japanese: 'したをむく',\n      english: 'Look down'\n    },\n    lookRight: {\n      japanese: 'みぎをむく',\n      english: 'Look right'\n    },\n    lookLeft: {\n      japanese: 'ひだりをむく',\n      english: 'Look left'\n    },\n    nod: {\n      japanese: 'うなずく',\n      english: 'Nod'\n    },\n    tiltHead: {\n      japanese: 'かしげる',\n      english: 'Tilt head'\n    },\n    spin: {\n      japanese: 'まわる',\n      english: 'Spin'\n    },\n    jump: {\n      japanese: 'ジャンプ',\n      english: 'Jump'\n    },\n    dance: {\n      japanese: 'ダンス',\n      english: 'Dance'\n    },\n    bowDeep: {\n      japanese: 'おじぎ',\n      english: 'Deep bow'\n    },\n    attention: {\n      japanese: 'きをつけ',\n      english: 'Attention'\n    },\n    rest: {\n      japanese: '休め',\n      english: 'Rest'\n    },\n    whereFrom: {\n      japanese: 'どこからきたの？',\n      english: 'Where are you from?'\n    },\n    doingSomething: {\n      japanese: '○○していますか？',\n      english: 'Are you doing XX?'\n    },\n    thankYou: {\n      japanese: 'ありがとう',\n      english: 'Thank you'\n    },\n    good: {\n      japanese: 'いいね',\n      english: 'Good'\n    },\n    ookini: {\n      japanese: 'おおきに',\n      english: 'Thank you (Kansai dialect)'\n    },\n    amazing: {\n      japanese: 'すごい',\n      english: 'Amazing'\n    },\n    goodLuck: {\n      japanese: 'がんばれ',\n      english: 'Good luck'\n    },\n    niceToMeetYou: {\n      japanese: 'よろしく',\n      english: 'Nice to meet you'\n    },\n    goodJob: {\n      japanese: 'お疲れ様',\n      english: 'Good job'\n    },\n    niceWeather: {\n      japanese: 'いいお天気',\n      english: 'Nice weather'\n    },\n    hot: {\n      japanese: '暑いですね',\n      english: 'It\\'s hot'\n    },\n    cold: {\n      japanese: '寒いですね',\n      english: 'It\\'s cold'\n    },\n    fun: {\n      japanese: '楽しい',\n      english: 'Fun'\n    },\n    interesting: {\n      japanese: '面白い',\n      english: 'Interesting'\n    },\n    wonderful: {\n      japanese: 'すてき',\n      english: 'Wonderful'\n    },\n    cute: {\n      japanese: 'かわいい',\n      english: 'Cute'\n    },\n    cool: {\n      japanese: 'かっこいい',\n      english: 'Cool'\n    },\n    seeYouTomorrow: {\n      japanese: 'また明日',\n      english: 'See you tomorrow'\n    }\n  }), []);\n\n  /**\r\n   * ログアウトボタンクリック時のハンドラ\r\n   */\n  const handleLogout = () => {\n    setIsLoggedIn(false); // ログイン状態をfalseに設定\n  };\n\n  // SkyWay App ID と Secret Key\n  // 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\n  // サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\n  const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\n  const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\n\n  // SkyWay認証トークンの生成\n  const token = useMemo(() => {\n    if (appId == null || secretKey == null) return undefined;\n    return new SkyWayAuthToken({\n      jti: uuidV4(),\n      // JWT ID\n      iat: nowInSec(),\n      // 発行時刻\n      exp: nowInSec() + 60 * 60 * 24,\n      // 有効期限 (24時間)\n      version: 3,\n      scope: {\n        appId: appId,\n        rooms: [{\n          name: \"*\",\n          // すべてのルーム名に適用\n          methods: [\"create\", \"close\", \"updateMetadata\"],\n          // ルーム操作の権限\n          member: {\n            name: \"*\",\n            // すべてのメンバーに適用\n            methods: [\"publish\", \"subscribe\", \"updateMetadata\"] // メンバー操作の権限\n          }\n        }],\n        turn: {\n          enabled: true // TURNサーバーの使用を許可 (NAT越えのため)\n        }\n      }\n    }).encode(secretKey);\n  }, [appId, secretKey]);\n\n  /**\r\n   * SkyWayContextの初期化とクリーンアップを行うuseEffect\r\n   * トークンが利用可能になったときに一度だけ実行されます。\r\n   */\n  useEffect(() => {\n    if (!token) return;\n    let currentContext;\n    const initContext = async () => {\n      try {\n        currentContext = await SkyWayContext.Create(token);\n        setSkywayContext(currentContext);\n        console.log(\"SkyWayContext created successfully.\");\n      } catch (error) {\n        console.error(\"Failed to create SkyWayContext:\", error);\n      }\n    };\n    initContext();\n\n    // コンポーネントのアンマウント時にコンテキストを破棄\n    return () => {\n      if (currentContext) {\n        currentContext.dispose();\n        console.log(\"SkyWayContext disposed.\");\n      }\n    };\n  }, [token]); // tokenが変更されたときにのみ実行\n\n  /**\r\n   * リモートストリームをDOMに追加するヘルパー関数\r\n   * @param {RemoteVideoStream | RemoteAudioStream} stream - 追加するメディアストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\n  const attachRemoteStream = (stream, memberId) => {\n    if (robotDisplayRef.current && (stream instanceof RemoteVideoStream || stream instanceof RemoteAudioStream)) {\n      const video = document.createElement(\"video\");\n      video.autoplay = true; // 自動再生\n      video.playsInline = true; // インライン再生 (iOSなどで必要)\n      video.className = \"remote-video\"; // スタイリング用のクラス\n      video.dataset.memberId = memberId; // メンバーIDをデータ属性に保存\n      stream.attach(video); // ストリームをビデオ要素のソースに設定\n      robotDisplayRef.current.appendChild(video);\n      remoteVideoElements.current.set(memberId, video);\n      console.log(`Attached stream from ${memberId} to DOM.`);\n    } else {\n      console.warn(`Attempted to attach non-media stream or robotDisplayRef is null for member ${memberId}.`);\n    }\n  };\n\n  /**\r\n   * データストリームの受信を処理するヘルパー関数\r\n   * @param {RemoteDataStream} stream - 受信するデータストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\n  const handleDataStream = (stream, memberId) => {\n    if (stream instanceof RemoteDataStream) {\n      stream.onData.add(data => {\n        console.log(`Received data from ${memberId}:`, data);\n        // 受信したメッセージを状態に追加\n        setReceivedMessages(prevMessages => [...prevMessages, {\n          senderId: memberId,\n          message: data\n        }]);\n      });\n      console.log(`Listening for data from ${memberId}.`);\n    } else {\n      console.warn(`Attempted to handle non-data stream as data stream for member ${memberId}.`);\n    }\n  };\n\n  /**\r\n   * ルームに参加するハンドラ\r\n   * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\r\n   */\n  const handleJoinRoom = async () => {\n    if (!skywayContext) {\n      console.error(\"SkyWayContext is not initialized. Please wait or check token.\");\n      return;\n    }\n    if (!roomName) {\n      console.error(\"Room name is empty. Please enter a room name to join.\");\n      return;\n    }\n    if (skywayRoom && me) {\n      console.warn(\"Already in a room. Please leave the current room first.\");\n      return;\n    }\n    try {\n      // 指定されたルーム名でP2Pルームを作成または検索\n      const room = await SkyWayRoom.FindOrCreate(skywayContext, {\n        type: \"p2p\",\n        // P2Pルームタイプ\n        name: roomName\n      });\n\n      // roomオブジェクトが有効であることを確認\n      if (!room) {\n        console.error(\"SkyWayRoom.FindOrCreate returned null or undefined room.\");\n        throw new Error(\"Failed to create or find SkyWayRoom.\");\n      }\n      setSkywayRoom(room);\n      console.log(`SkyWayRoom '${roomName}' found or created.`);\n\n      // ルームに参加し、自分のメンバー情報を取得\n      const localMember = await room.join();\n      // localMemberが有効であることを確認\n      if (!localMember) {\n        console.error(\"room.join() returned null or undefined localMember.\");\n        throw new Error(\"Failed to join the room.\");\n      }\n      setMe(localMember);\n      console.log(`Joined room '${roomName}' as member ID: ${localMember.id}`);\n\n      // 自分のカメラとマイクのストリームを作成し、公開\n      const {\n        audio,\n        video\n      } = await SkyWayStreamFactory.createMicrophoneAudioAndCameraStream();\n      localStreamRef.current = video; // ローカルビデオストリームを保存\n      await localMember.publish(video);\n      const publication_audio = await localMember.publish(audio);\n      audioPublicationRef.current = publication_audio; // オーディオPublicationを保存\n      setIsMuted(false);\n      console.log(\"Published local camera and microphone stream.\");\n\n      // 自分のデータストリームを作成し、公開\n      const dataStream = await SkyWayStreamFactory.createDataStream();\n      localDataStreamRef.current = dataStream; // ローカルデータストリームを保存\n      await localMember.publish(dataStream);\n      console.log(\"Published local data stream.\");\n\n      // --- 既存のストリームを購読するロジック ---\n      // ルーム内の既存の公開ストリームをすべて購読する\n      for (const publication of room.publications) {\n        // 自分のストリームは購読しない\n        if (localMember.id === publication.publisher.id) {\n          continue;\n        }\n        try {\n          const {\n            stream\n          } = await localMember.subscribe(publication.id);\n          console.log(`Subscribed to existing stream from ${publication.publisher.id}, type: ${publication.contentType}`);\n          if (publication.contentType === 'video' || publication.contentType === 'audio') {\n            attachRemoteStream(stream, publication.publisher.id);\n          } else if (publication.contentType === 'data') {\n            handleDataStream(stream, publication.publisher.id);\n          } else {\n            console.warn(`Unknown stream content type: ${publication.contentType} from ${publication.publisher.id}`);\n          }\n        } catch (subscribeError) {\n          console.error(`Failed to subscribe to existing stream from ${publication.publisher.id}:`, subscribeError);\n        }\n      }\n\n      // --- ルームイベントリスナーの設定 ---\n\n      // メンバーがルームに参加したときのイベント\n      if (room.onMemberJoined) {\n        room.onMemberJoined.add(e => {\n          console.log(`Member joined: ${e.member.id}`);\n        });\n      } else {\n        console.error(\"room.onMemberJoined is undefined. This is unexpected.\");\n      }\n\n      // メンバーがルームを離脱したときのイベント\n      if (room.onMemberLeft) {\n        room.onMemberLeft.add(e => {\n          console.log(`Member left: ${e.member.id}`);\n          // 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\n          const videoElement = remoteVideoElements.current.get(e.member.id);\n          if (videoElement && robotDisplayRef.current) {\n            robotDisplayRef.current.removeChild(videoElement);\n            remoteVideoElements.current.delete(e.member.id);\n            console.log(`Removed video for member ${e.member.id}`);\n          }\n          // データストリーム関連のクリーンアップもここに追加可能ですが、\n          // onDataリスナーはストリームが閉じられると自動的に停止します。\n        });\n      } else {\n        console.error(\"room.onMemberLeft is undefined. This is unexpected.\");\n      }\n\n      // ストリームが公開されたときのイベント\n      if (room.onStreamPublished) {\n        room.onStreamPublished.add(async e => {\n          console.log(`Stream published by ${e.publication.publisher.id}, type: ${e.publication.contentType}`);\n          // 自分のストリームは購読しない\n          if (localMember.id !== e.publication.publisher.id) {\n            try {\n              // リモートストリームを購読\n              const {\n                stream\n              } = await localMember.subscribe(e.publication.id);\n              console.log(`Subscribed to stream from ${e.publication.publisher.id}`);\n              if (e.publication.contentType === 'video' || e.publication.contentType === 'audio') {\n                attachRemoteStream(stream, e.publication.publisher.id);\n              } else if (e.publication.contentType === 'data') {\n                handleDataStream(stream, e.publication.publisher.id);\n              } else {\n                console.warn(`Unknown stream content type: ${e.publication.contentType} from ${e.publication.publisher.id}`);\n              }\n            } catch (subscribeError) {\n              console.error(`Failed to subscribe to stream from ${e.publication.publisher.id}:`, subscribeError);\n            }\n          } else {\n            console.log(`Skipping subscription for own stream: ${e.publication.publisher.id}`);\n          }\n        });\n      } else {\n        console.error(\"room.onStreamPublished is undefined. This is unexpected.\");\n      }\n\n      // ストリームが非公開になったときのイベント\n      if (room.onStreamUnpublished) {\n        room.onStreamUnpublished.add(e => {\n          console.log(`Stream unpublished by ${e.publication.publisher.id}`);\n          // 該当ストリームのビデオ要素をDOMから削除し、Mapからも削除\n          const videoElement = remoteVideoElements.current.get(e.publication.publisher.id);\n          if (videoElement && robotDisplayRef.current) {\n            robotDisplayRef.current.removeChild(videoElement);\n            remoteVideoElements.current.delete(e.publication.publisher.id);\n            console.log(`Removed unpublished video for member ${e.publication.publisher.id}`);\n          }\n        });\n      } else {\n        console.error(\"room.onStreamUnpublished is undefined. This is unexpected.\");\n      }\n\n      // `room.onDataPublished` は存在しないため、このブロックは削除します。\n      // データは `RemoteDataStream.onData` イベントで受信します。\n    } catch (error) {\n      console.error(\"Failed to join room:\", error);\n      // エラー発生時に状態をリセットして再試行可能にする\n      setSkywayRoom(null);\n      setMe(null);\n      // エラー時に既存のビデオ要素をクリーンアップ\n      if (robotDisplayRef.current) {\n        Array.from(robotDisplayRef.current.children).forEach(child => {\n          if (child.tagName === 'VIDEO') {\n            robotDisplayRef.current.removeChild(child);\n          }\n        });\n      }\n      remoteVideoElements.current.clear();\n      if (localStreamRef.current) {\n        localStreamRef.current.stop(); // ローカルストリームを停止\n        localStreamRef.current = null;\n      }\n      if (localDataStreamRef.current) {\n        localDataStreamRef.current.close(); // ローカルデータストリームを閉じる\n        localDataStreamRef.current = null;\n      }\n      // ミュート状態もリセット\n      setIsMuted(false);\n      audioPublicationRef.current = null;\n    }\n  };\n\n  /**\r\n   * ルームから退出するハンドラ\r\n   */\n  const handleLeaveRoom = async () => {\n    if (skywayRoom && me) {\n      try {\n        // ローカルストリームを停止し、公開を解除\n        if (localStreamRef.current) {\n          localStreamRef.current.stop();\n          localStreamRef.current = null;\n          console.log(\"Stopped local media stream.\");\n        }\n        // ローカルデータストリームを閉じる\n        if (localDataStreamRef.current) {\n          localDataStreamRef.current.close();\n          localDataStreamRef.current = null;\n          console.log(\"Closed local data stream.\");\n        }\n        // オーディオPublicationの参照をクリア\n        audioPublicationRef.current = null;\n        setIsMuted(false); // ミュート状態をリセット\n\n        await me.leave(); // ルームから退出\n        console.log(`Left room '${roomName}'`);\n        skywayRoom.close(); // ルームを閉じる (これはルームの作成者のみが効果的です)\n        console.log(\"SkyWay Room closed.\");\n      } catch (error) {\n        console.error(\"Failed to leave room:\", error);\n      } finally {\n        // 状態をリセット\n        setMe(null);\n        setSkywayRoom(null);\n        setReceivedMessages([]); // 受信メッセージもクリア\n        // すべてのリモートビデオ要素をDOMから削除\n        if (robotDisplayRef.current) {\n          Array.from(robotDisplayRef.current.children).forEach(child => {\n            if (child.tagName === 'VIDEO') {\n              robotDisplayRef.current.removeChild(child);\n            }\n          });\n        }\n        remoteVideoElements.current.clear();\n        // AIモードもオフにする\n        setIsAiModeOn(false);\n        setAiSuggestions([]);\n      }\n    }\n  };\n\n  /**\r\n   * モーションを操作するボタンを押した時の処理\r\n   * @param {string} messageKey - 送信するメッセージのキー (messagesオブジェクトのキー)\r\n   */\n  const handleSend = async messageKey => {\n    if (me && skywayRoom && localDataStreamRef.current) {\n      try {\n        var _messages$messageKey;\n        // 現在の言語に基づいてメッセージを取得\n        const messageToSend = (_messages$messageKey = messages[messageKey]) === null || _messages$messageKey === void 0 ? void 0 : _messages$messageKey[currentLanguage];\n        if (!messageToSend) {\n          console.warn(`Message for key \"${messageKey}\" not found in current language \"${currentLanguage}\".`);\n          return;\n        }\n\n        // localDataStreamRef.current を使用してデータを送信\n        localDataStreamRef.current.write(messageToSend);\n        console.log(`Sent message: \"${messageToSend}\"`);\n        // 送信したメッセージも自身の画面に表示\n        setReceivedMessages(prevMessages => [...prevMessages, {\n          senderId: me.id,\n          message: messageToSend,\n          isLocal: true\n        }]);\n      } catch (error) {\n        console.error(\"Failed to send data:\", error);\n      }\n    } else {\n      console.warn(\"Cannot send message: Not in a room, 'me' object is not available, or data stream is not ready.\");\n    }\n  };\n\n  /**\r\n   * マイクのミュート/ミュート解除を切り替えるハンドラ\r\n   */\n  const handleMute = async () => {\n    console.log(\"start\");\n    if (!audioPublicationRef.current) {\n      console.warn(\"Audio publication not available. Cannot toggle mute.\");\n      return;\n    }\n    try {\n      if (isMuted) {\n        // 現在ミュート状態なら、ミュートを解除\n        await audioPublicationRef.current.enable();\n        console.log(\"Microphone unmuted.\");\n      } else {\n        // 現在ミュート状態でないなら、ミュート\n        await audioPublicationRef.current.disable();\n        console.log(\"Microphone muted.\");\n      }\n      setIsMuted(!isMuted); // ミュート状態をトグル\n    } catch (error) {\n      console.error(\"Failed to toggle microphone mute state:\", error);\n    }\n  };\n\n  /**\r\n   * 言語を切り替えるハンドラ\r\n   */\n  const handleToggleLanguage = () => {\n    setCurrentLanguage(prevLang => prevLang === 'japanese' ? 'english' : 'japanese');\n  };\n\n  /**\r\n   * AIモードを切り替えるハンドラ\r\n   * AIモードがONになったら、2つのランダムな提案を生成します。\r\n   */\n  const handleAiModeToggle = () => {\n    setIsAiModeOn(prev => {\n      const newAiModeState = !prev;\n      if (newAiModeState) {\n        // AIモードがONになったら、2つのランダムな提案を生成\n        const messageKeys = Object.keys(messages);\n        let suggestion1Key, suggestion2Key;\n        do {\n          suggestion1Key = messageKeys[Math.floor(Math.random() * messageKeys.length)];\n          suggestion2Key = messageKeys[Math.floor(Math.random() * messageKeys.length)];\n        } while (suggestion1Key === suggestion2Key); // 2つの提案が異なることを保証\n\n        setAiSuggestions([{\n          key: suggestion1Key,\n          text: messages[suggestion1Key][currentLanguage]\n        }, {\n          key: suggestion2Key,\n          text: messages[suggestion2Key][currentLanguage]\n        }]);\n      } else {\n        // AIモードがOFFになったら提案をクリア\n        setAiSuggestions([]);\n      }\n      return newAiModeState;\n    });\n  };\n\n  // 言語が変更されたときにAI提案のテキストを更新するuseEffect\n  useEffect(() => {\n    if (isAiModeOn && aiSuggestions.length > 0) {\n      setAiSuggestions(prevSuggestions => prevSuggestions.map(s => ({\n        ...s,\n        text: messages[s.key][currentLanguage]\n      })));\n    }\n  }, [currentLanguage, isAiModeOn, messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"motion-btn\",\n          disabled: isAiModeOn,\n          children: \"\\u30E2\\u30FC\\u30B7\\u30E7\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"robot-status\",\n          children: \"\\u64CD\\u4F5C\\u3057\\u3066\\u3044\\u308B\\u30ED\\u30DC\\u30C3\\u30C8\\uFF1ARX78-myakumyaku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"voice-btn\",\n          disabled: isAiModeOn,\n          children: \"\\u30DC\\u30A4\\u30B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-panel-content\",\n          children: Object.keys(messages).slice(0, 17).map(key =>\n          /*#__PURE__*/\n          // 左側のボタン数を調整\n          _jsxDEV(\"button\", {\n            onClick: () => handleSend(key),\n            className: \"side-btn\",\n            disabled: isAiModeOn || !me // AIモード中は無効化\n            ,\n            children: [messages[key].japanese, \" \"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u30EB\\u30FC\\u30E0\\u540D\\u3092\\u5165\\u529B\",\n            value: roomName,\n            onChange: e => setRoomName(e.target.value),\n            className: \"room-input\",\n            disabled: !!me // ルーム参加中は入力不可にする\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this), !me ?\n          /*#__PURE__*/\n          // ルームに参加していない場合\n          _jsxDEV(\"button\", {\n            onClick: handleJoinRoom,\n            className: \"join-room-btn\",\n            disabled: !skywayContext || !roomName,\n            children: \"\\u30EB\\u30FC\\u30E0\\u306B\\u53C2\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this) :\n          /*#__PURE__*/\n          // ルームに参加している場合\n          _jsxDEV(\"button\", {\n            onClick: handleLeaveRoom,\n            className: \"leave-room-btn\",\n            children: \"\\u30EB\\u30FC\\u30E0\\u3092\\u9000\\u51FA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"robot-display\",\n          ref: robotDisplayRef,\n          children: [me ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room-info\",\n            children: [\"\\u30EB\\u30FC\\u30E0ID: \", roomName, \" / \\u81EA\\u5206\\u306EID: \", me.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u30EB\\u30FC\\u30E0\\u306B\\u53C2\\u52A0\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this), isAiModeOn && aiSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-suggestions\",\n            children: aiSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSend(suggestion.key),\n              className: \"ai-suggestion-btn\",\n              children: suggestion.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-panel right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-panel-content\",\n          children: Object.keys(messages).slice(17).map(key =>\n          /*#__PURE__*/\n          // 右側のボタン数を調整\n          _jsxDEV(\"button\", {\n            onClick: () => handleSend(key),\n            className: \"side-btn\",\n            disabled: isAiModeOn || !me // AIモード中は無効化\n            ,\n            children: [messages[key].japanese, \" \"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `control-btn ai-btn ${isAiModeOn ? 'ai-mode-on' : ''}`,\n        onClick: handleAiModeToggle,\n        disabled: !me // ルームに参加していない場合は無効\n        ,\n        children: [\"\\uD83E\\uDD16 AI\\u30E2\\u30FC\\u30C9 \", isAiModeOn ? 'ON' : 'OFF']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `control-btn mic-btn ${isMuted ? 'muted' : ''}` // ミュート状態に応じてクラスを追加\n        ,\n        onClick: handleMute,\n        id: \"micBtn\",\n        disabled: !me || !audioPublicationRef.current || isAiModeOn // ルームに参加していない、またはオーディオが公開されていない、AIモード中は無効\n        ,\n        children: [isMuted ? '🔇 マイクミュート' : '🎤 マイクON', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn manual-btn\",\n        id: \"manualBtn\",\n        disabled: isAiModeOn,\n        children: \"\\uD83D\\uDCCB \\u30DE\\u30CB\\u30E5\\u30A2\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn greeting-btn\",\n        id: \"languageBtn\",\n        onClick: handleToggleLanguage // 言語切り替えハンドラを設定\n        ,\n        disabled: isAiModeOn // AIモード中は無効化\n        ,\n        children: [\"\\uD83D\\uDC4B \", currentLanguage === 'japanese' ? 'にほんご' : 'English', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 639,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"ofHkIDqxA5saN17GZEP7Is/P1A8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","nowInSec","SkyWayAuthToken","SkyWayContext","SkyWayRoom","SkyWayStreamFactory","uuidV4","LocalP2PRoomMember","RemoteDataStream","RemoteVideoStream","RemoteAudioStream","jsxDEV","_jsxDEV","Home","setIsLoggedIn","_s","roomName","setRoomName","me","setMe","skywayContext","setSkywayContext","skywayRoom","setSkywayRoom","remoteVideoElements","Map","robotDisplayRef","localStreamRef","receivedMessages","setReceivedMessages","localDataStreamRef","isMuted","setIsMuted","audioPublicationRef","currentLanguage","setCurrentLanguage","isAiModeOn","setIsAiModeOn","aiSuggestions","setAiSuggestions","messages","hello","japanese","english","goodbye","bow","flap","lookUp","lookDown","lookRight","lookLeft","nod","tiltHead","spin","jump","dance","bowDeep","attention","rest","whereFrom","doingSomething","thankYou","good","ookini","amazing","goodLuck","niceToMeetYou","goodJob","niceWeather","hot","cold","fun","interesting","wonderful","cute","cool","seeYouTomorrow","handleLogout","appId","secretKey","token","undefined","jti","iat","exp","version","scope","rooms","name","methods","member","turn","enabled","encode","currentContext","initContext","Create","console","log","error","dispose","attachRemoteStream","stream","memberId","current","video","document","createElement","autoplay","playsInline","className","dataset","attach","appendChild","set","warn","handleDataStream","onData","add","data","prevMessages","senderId","message","handleJoinRoom","room","FindOrCreate","type","Error","localMember","join","id","audio","createMicrophoneAudioAndCameraStream","publish","publication_audio","dataStream","createDataStream","publication","publications","publisher","subscribe","contentType","subscribeError","onMemberJoined","e","onMemberLeft","videoElement","get","removeChild","delete","onStreamPublished","onStreamUnpublished","Array","from","children","forEach","child","tagName","clear","stop","close","handleLeaveRoom","leave","handleSend","messageKey","_messages$messageKey","messageToSend","write","isLocal","handleMute","enable","disable","handleToggleLanguage","prevLang","handleAiModeToggle","prev","newAiModeState","messageKeys","Object","keys","suggestion1Key","suggestion2Key","Math","floor","random","length","key","text","prevSuggestions","map","s","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","slice","placeholder","value","onChange","target","ref","suggestion","index","_c","$RefreshReg$"],"sources":["C:/banpaku_2025/banpaku/src/home.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport './style.css'; // style.cssを再度有効化\r\nimport {\r\n  nowInSec,\r\n  SkyWayAuthToken,\r\n  SkyWayContext,\r\n  SkyWayRoom,\r\n  SkyWayStreamFactory,\r\n  uuidV4,\r\n  LocalP2PRoomMember,\r\n  RemoteDataStream, // RemoteDataStreamをインポート\r\n  RemoteVideoStream, // RemoteVideoStreamをインポート\r\n  RemoteAudioStream, // RemoteAudioStreamをインポート\r\n} from '@skyway-sdk/room';\r\n\r\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\r\nfunction Home({ setIsLoggedIn }) {\r\n  // ルーム名\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  // 自分の参加者情報 (ルームに参加すると設定されます)\r\n  const [me, setMe] = useState(null);\r\n  // SkyWayコンテキストのインスタンス\r\n  const [skywayContext, setSkywayContext] = useState(null);\r\n  // SkyWayルームのインスタンス\r\n  const [skywayRoom, setSkywayRoom] = useState(null);\r\n  // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\r\n  const remoteVideoElements = useRef(new Map());\r\n  // リモートビデオを表示するDOM要素への参照\r\n  const robotDisplayRef = useRef(null);\r\n  // ローカルストリームの参照を保持\r\n  const localStreamRef = useRef(null);\r\n  // 受信したメッセージを表示するための状態\r\n  const [receivedMessages, setReceivedMessages] = useState([]);\r\n  // 送信したデータストリームの参照を保持\r\n  const localDataStreamRef = useRef(null);\r\n  // マイクの状態を表示するための状態 (ミュート状態を管理)\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  // オーディオストリームのPublicationを保持するための参照\r\n  const audioPublicationRef = useRef(null);\r\n  // 現在の言語状態 ('japanese' または 'english')\r\n  const [currentLanguage, setCurrentLanguage] = useState('japanese');\r\n  // AIモードがONかどうかを管理する状態\r\n  const [isAiModeOn, setIsAiModeOn] = useState(false);\r\n  // AIからの提案を保持する状態\r\n  const [aiSuggestions, setAiSuggestions] = useState([]);\r\n\r\n  // メッセージとモーションの多言語マッピング\r\n  const messages = useMemo(() => ({\r\n    hello: {\r\n      japanese: 'こんにちは',\r\n      english: 'Hello'\r\n    },\r\n    goodbye: {\r\n      japanese: 'バイバイ',\r\n      english: 'Goodbye'\r\n    },\r\n    bow: {\r\n      japanese: 'ペコリ',\r\n      english: 'Bow'\r\n    },\r\n    flap: {\r\n      japanese: 'バタバタ',\r\n      english: 'Flap'\r\n    },\r\n    lookUp: {\r\n      japanese: 'うえをむく',\r\n      english: 'Look up'\r\n    },\r\n    lookDown: {\r\n      japanese: 'したをむく',\r\n      english: 'Look down'\r\n    },\r\n    lookRight: {\r\n      japanese: 'みぎをむく',\r\n      english: 'Look right'\r\n    },\r\n    lookLeft: {\r\n      japanese: 'ひだりをむく',\r\n      english: 'Look left'\r\n    },\r\n    nod: {\r\n      japanese: 'うなずく',\r\n      english: 'Nod'\r\n    },\r\n    tiltHead: {\r\n      japanese: 'かしげる',\r\n      english: 'Tilt head'\r\n    },\r\n    spin: {\r\n      japanese: 'まわる',\r\n      english: 'Spin'\r\n    },\r\n    jump: {\r\n      japanese: 'ジャンプ',\r\n      english: 'Jump'\r\n    },\r\n    dance: {\r\n      japanese: 'ダンス',\r\n      english: 'Dance'\r\n    },\r\n    bowDeep: {\r\n      japanese: 'おじぎ',\r\n      english: 'Deep bow'\r\n    },\r\n    attention: {\r\n      japanese: 'きをつけ',\r\n      english: 'Attention'\r\n    },\r\n    rest: {\r\n      japanese: '休め',\r\n      english: 'Rest'\r\n    },\r\n    whereFrom: {\r\n      japanese: 'どこからきたの？',\r\n      english: 'Where are you from?'\r\n    },\r\n    doingSomething: {\r\n      japanese: '○○していますか？',\r\n      english: 'Are you doing XX?'\r\n    },\r\n    thankYou: {\r\n      japanese: 'ありがとう',\r\n      english: 'Thank you'\r\n    },\r\n    good: {\r\n      japanese: 'いいね',\r\n      english: 'Good'\r\n    },\r\n    ookini: {\r\n      japanese: 'おおきに',\r\n      english: 'Thank you (Kansai dialect)'\r\n    },\r\n    amazing: {\r\n      japanese: 'すごい',\r\n      english: 'Amazing'\r\n    },\r\n    goodLuck: {\r\n      japanese: 'がんばれ',\r\n      english: 'Good luck'\r\n    },\r\n    niceToMeetYou: {\r\n      japanese: 'よろしく',\r\n      english: 'Nice to meet you'\r\n    },\r\n    goodJob: {\r\n      japanese: 'お疲れ様',\r\n      english: 'Good job'\r\n    },\r\n    niceWeather: {\r\n      japanese: 'いいお天気',\r\n      english: 'Nice weather'\r\n    },\r\n    hot: {\r\n      japanese: '暑いですね',\r\n      english: 'It\\'s hot'\r\n    },\r\n    cold: {\r\n      japanese: '寒いですね',\r\n      english: 'It\\'s cold'\r\n    },\r\n    fun: {\r\n      japanese: '楽しい',\r\n      english: 'Fun'\r\n    },\r\n    interesting: {\r\n      japanese: '面白い',\r\n      english: 'Interesting'\r\n    },\r\n    wonderful: {\r\n      japanese: 'すてき',\r\n      english: 'Wonderful'\r\n    },\r\n    cute: {\r\n      japanese: 'かわいい',\r\n      english: 'Cute'\r\n    },\r\n    cool: {\r\n      japanese: 'かっこいい',\r\n      english: 'Cool'\r\n    },\r\n    seeYouTomorrow: {\r\n      japanese: 'また明日',\r\n      english: 'See you tomorrow'\r\n    }\r\n  }), []);\r\n\r\n\r\n  /**\r\n   * ログアウトボタンクリック時のハンドラ\r\n   */\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false); // ログイン状態をfalseに設定\r\n  };\r\n\r\n  // SkyWay App ID と Secret Key\r\n  // 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\r\n  // サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\r\n  const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\r\n  const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\r\n\r\n  // SkyWay認証トークンの生成\r\n  const token = useMemo(() => {\r\n    if (appId == null || secretKey == null) return undefined;\r\n\r\n    return new SkyWayAuthToken({\r\n      jti: uuidV4(), // JWT ID\r\n      iat: nowInSec(), // 発行時刻\r\n      exp: nowInSec() + 60 * 60 * 24, // 有効期限 (24時間)\r\n      version: 3,\r\n      scope: {\r\n        appId: appId,\r\n        rooms: [\r\n          {\r\n            name: \"*\", // すべてのルーム名に適用\r\n            methods: [\"create\", \"close\", \"updateMetadata\"], // ルーム操作の権限\r\n            member: {\r\n              name: \"*\", // すべてのメンバーに適用\r\n              methods: [\"publish\", \"subscribe\", \"updateMetadata\"] // メンバー操作の権限\r\n            }\r\n          }],\r\n        turn: {\r\n          enabled: true // TURNサーバーの使用を許可 (NAT越えのため)\r\n        }\r\n      }\r\n    }).encode(secretKey);\r\n\r\n  }, [appId, secretKey]);\r\n\r\n  /**\r\n   * SkyWayContextの初期化とクリーンアップを行うuseEffect\r\n   * トークンが利用可能になったときに一度だけ実行されます。\r\n   */\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    let currentContext;\r\n    const initContext = async () => {\r\n      try {\r\n        currentContext = await SkyWayContext.Create(token);\r\n        setSkywayContext(currentContext);\r\n        console.log(\"SkyWayContext created successfully.\");\r\n      } catch (error) {\r\n        console.error(\"Failed to create SkyWayContext:\", error);\r\n      }\r\n    };\r\n\r\n    initContext();\r\n\r\n    // コンポーネントのアンマウント時にコンテキストを破棄\r\n    return () => {\r\n      if (currentContext) {\r\n        currentContext.dispose();\r\n        console.log(\"SkyWayContext disposed.\");\r\n      }\r\n    };\r\n  }, [token]); // tokenが変更されたときにのみ実行\r\n\r\n  /**\r\n   * リモートストリームをDOMに追加するヘルパー関数\r\n   * @param {RemoteVideoStream | RemoteAudioStream} stream - 追加するメディアストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\r\n  const attachRemoteStream = (stream, memberId) => {\r\n    if (robotDisplayRef.current && (stream instanceof RemoteVideoStream || stream instanceof RemoteAudioStream)) {\r\n      const video = document.createElement(\"video\");\r\n      video.autoplay = true; // 自動再生\r\n      video.playsInline = true; // インライン再生 (iOSなどで必要)\r\n      video.className = \"remote-video\"; // スタイリング用のクラス\r\n      video.dataset.memberId = memberId; // メンバーIDをデータ属性に保存\r\n      stream.attach(video); // ストリームをビデオ要素のソースに設定\r\n      robotDisplayRef.current.appendChild(video);\r\n      remoteVideoElements.current.set(memberId, video);\r\n      console.log(`Attached stream from ${memberId} to DOM.`);\r\n    } else {\r\n      console.warn(`Attempted to attach non-media stream or robotDisplayRef is null for member ${memberId}.`);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * データストリームの受信を処理するヘルパー関数\r\n   * @param {RemoteDataStream} stream - 受信するデータストリーム\r\n   * @param {string} memberId - ストリームのパブリッシャーのメンバーID\r\n   */\r\n  const handleDataStream = (stream, memberId) => {\r\n    if (stream instanceof RemoteDataStream) {\r\n      stream.onData.add((data) => {\r\n        console.log(`Received data from ${memberId}:`, data);\r\n        // 受信したメッセージを状態に追加\r\n        setReceivedMessages(prevMessages => [...prevMessages, { senderId: memberId, message: data }]);\r\n      });\r\n      console.log(`Listening for data from ${memberId}.`);\r\n    } else {\r\n      console.warn(`Attempted to handle non-data stream as data stream for member ${memberId}.`);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ルームに参加するハンドラ\r\n   * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\r\n   */\r\n  const handleJoinRoom = async () => {\r\n    if (!skywayContext) {\r\n      console.error(\"SkyWayContext is not initialized. Please wait or check token.\");\r\n      return;\r\n    }\r\n    if (!roomName) {\r\n      console.error(\"Room name is empty. Please enter a room name to join.\");\r\n      return;\r\n    }\r\n    if (skywayRoom && me) {\r\n      console.warn(\"Already in a room. Please leave the current room first.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 指定されたルーム名でP2Pルームを作成または検索\r\n      const room = await SkyWayRoom.FindOrCreate(skywayContext, {\r\n        type: \"p2p\", // P2Pルームタイプ\r\n        name: roomName,\r\n      });\r\n\r\n      // roomオブジェクトが有効であることを確認\r\n      if (!room) {\r\n        console.error(\"SkyWayRoom.FindOrCreate returned null or undefined room.\");\r\n        throw new Error(\"Failed to create or find SkyWayRoom.\");\r\n      }\r\n\r\n      setSkywayRoom(room);\r\n      console.log(`SkyWayRoom '${roomName}' found or created.`);\r\n\r\n      // ルームに参加し、自分のメンバー情報を取得\r\n      const localMember = await room.join();\r\n      // localMemberが有効であることを確認\r\n      if (!localMember) {\r\n        console.error(\"room.join() returned null or undefined localMember.\");\r\n        throw new Error(\"Failed to join the room.\");\r\n      }\r\n      setMe(localMember);\r\n      console.log(`Joined room '${roomName}' as member ID: ${localMember.id}`);\r\n\r\n      // 自分のカメラとマイクのストリームを作成し、公開\r\n      const { audio, video } = await SkyWayStreamFactory.createMicrophoneAudioAndCameraStream();\r\n      localStreamRef.current = video; // ローカルビデオストリームを保存\r\n      await localMember.publish(video);\r\n      const publication_audio = await localMember.publish(audio);\r\n      audioPublicationRef.current = publication_audio; // オーディオPublicationを保存\r\n      setIsMuted(false);\r\n      console.log(\"Published local camera and microphone stream.\");\r\n\r\n      // 自分のデータストリームを作成し、公開\r\n      const dataStream = await SkyWayStreamFactory.createDataStream();\r\n      localDataStreamRef.current = dataStream; // ローカルデータストリームを保存\r\n      await localMember.publish(dataStream);\r\n      console.log(\"Published local data stream.\");\r\n\r\n\r\n      // --- 既存のストリームを購読するロジック ---\r\n      // ルーム内の既存の公開ストリームをすべて購読する\r\n      for (const publication of room.publications) {\r\n        // 自分のストリームは購読しない\r\n        if (localMember.id === publication.publisher.id) {\r\n          continue;\r\n        }\r\n        try {\r\n          const { stream } = await localMember.subscribe(publication.id);\r\n          console.log(`Subscribed to existing stream from ${publication.publisher.id}, type: ${publication.contentType}`);\r\n\r\n          if (publication.contentType === 'video' || publication.contentType === 'audio') {\r\n            attachRemoteStream(stream, publication.publisher.id);\r\n          } else if (publication.contentType === 'data') {\r\n            handleDataStream(stream, publication.publisher.id);\r\n          } else {\r\n            console.warn(`Unknown stream content type: ${publication.contentType} from ${publication.publisher.id}`);\r\n          }\r\n        } catch (subscribeError) {\r\n          console.error(`Failed to subscribe to existing stream from ${publication.publisher.id}:`, subscribeError);\r\n        }\r\n      }\r\n\r\n      // --- ルームイベントリスナーの設定 ---\r\n\r\n      // メンバーがルームに参加したときのイベント\r\n      if (room.onMemberJoined) {\r\n        room.onMemberJoined.add((e) => {\r\n          console.log(`Member joined: ${e.member.id}`);\r\n        });\r\n      } else {\r\n        console.error(\"room.onMemberJoined is undefined. This is unexpected.\");\r\n      }\r\n\r\n      // メンバーがルームを離脱したときのイベント\r\n      if (room.onMemberLeft) {\r\n        room.onMemberLeft.add((e) => {\r\n          console.log(`Member left: ${e.member.id}`);\r\n          // 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\r\n          const videoElement = remoteVideoElements.current.get(e.member.id);\r\n          if (videoElement && robotDisplayRef.current) {\r\n            robotDisplayRef.current.removeChild(videoElement);\r\n            remoteVideoElements.current.delete(e.member.id);\r\n            console.log(`Removed video for member ${e.member.id}`);\r\n          }\r\n          // データストリーム関連のクリーンアップもここに追加可能ですが、\r\n          // onDataリスナーはストリームが閉じられると自動的に停止します。\r\n        });\r\n      } else {\r\n        console.error(\"room.onMemberLeft is undefined. This is unexpected.\");\r\n      }\r\n\r\n      // ストリームが公開されたときのイベント\r\n      if (room.onStreamPublished) {\r\n        room.onStreamPublished.add(async (e) => {\r\n          console.log(`Stream published by ${e.publication.publisher.id}, type: ${e.publication.contentType}`);\r\n          // 自分のストリームは購読しない\r\n          if (localMember.id !== e.publication.publisher.id) {\r\n            try {\r\n              // リモートストリームを購読\r\n              const { stream } = await localMember.subscribe(e.publication.id);\r\n              console.log(`Subscribed to stream from ${e.publication.publisher.id}`);\r\n\r\n              if (e.publication.contentType === 'video' || e.publication.contentType === 'audio') {\r\n                attachRemoteStream(stream, e.publication.publisher.id);\r\n              } else if (e.publication.contentType === 'data') {\r\n                handleDataStream(stream, e.publication.publisher.id);\r\n              } else {\r\n                console.warn(`Unknown stream content type: ${e.publication.contentType} from ${e.publication.publisher.id}`);\r\n              }\r\n            } catch (subscribeError) {\r\n              console.error(`Failed to subscribe to stream from ${e.publication.publisher.id}:`, subscribeError);\r\n            }\r\n          } else {\r\n            console.log(`Skipping subscription for own stream: ${e.publication.publisher.id}`);\r\n          }\r\n        });\r\n      } else {\r\n        console.error(\"room.onStreamPublished is undefined. This is unexpected.\");\r\n      }\r\n\r\n      // ストリームが非公開になったときのイベント\r\n      if (room.onStreamUnpublished) {\r\n        room.onStreamUnpublished.add((e) => {\r\n          console.log(`Stream unpublished by ${e.publication.publisher.id}`);\r\n          // 該当ストリームのビデオ要素をDOMから削除し、Mapからも削除\r\n          const videoElement = remoteVideoElements.current.get(e.publication.publisher.id);\r\n          if (videoElement && robotDisplayRef.current) {\r\n            robotDisplayRef.current.removeChild(videoElement);\r\n            remoteVideoElements.current.delete(e.publication.publisher.id);\r\n            console.log(`Removed unpublished video for member ${e.publication.publisher.id}`);\r\n          }\r\n        });\r\n      } else {\r\n        console.error(\"room.onStreamUnpublished is undefined. This is unexpected.\");\r\n      }\r\n\r\n      // `room.onDataPublished` は存在しないため、このブロックは削除します。\r\n      // データは `RemoteDataStream.onData` イベントで受信します。\r\n\r\n    } catch (error) {\r\n      console.error(\"Failed to join room:\", error);\r\n      // エラー発生時に状態をリセットして再試行可能にする\r\n      setSkywayRoom(null);\r\n      setMe(null);\r\n      // エラー時に既存のビデオ要素をクリーンアップ\r\n      if (robotDisplayRef.current) {\r\n        Array.from(robotDisplayRef.current.children).forEach(child => {\r\n          if (child.tagName === 'VIDEO') {\r\n            robotDisplayRef.current.removeChild(child);\r\n          }\r\n        });\r\n      }\r\n      remoteVideoElements.current.clear();\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.stop(); // ローカルストリームを停止\r\n        localStreamRef.current = null;\r\n      }\r\n      if (localDataStreamRef.current) {\r\n        localDataStreamRef.current.close(); // ローカルデータストリームを閉じる\r\n        localDataStreamRef.current = null;\r\n      }\r\n      // ミュート状態もリセット\r\n      setIsMuted(false);\r\n      audioPublicationRef.current = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ルームから退出するハンドラ\r\n   */\r\n  const handleLeaveRoom = async () => {\r\n    if (skywayRoom && me) {\r\n      try {\r\n        // ローカルストリームを停止し、公開を解除\r\n        if (localStreamRef.current) {\r\n          localStreamRef.current.stop();\r\n          localStreamRef.current = null;\r\n          console.log(\"Stopped local media stream.\");\r\n        }\r\n        // ローカルデータストリームを閉じる\r\n        if (localDataStreamRef.current) {\r\n          localDataStreamRef.current.close();\r\n          localDataStreamRef.current = null;\r\n          console.log(\"Closed local data stream.\");\r\n        }\r\n        // オーディオPublicationの参照をクリア\r\n        audioPublicationRef.current = null;\r\n        setIsMuted(false); // ミュート状態をリセット\r\n\r\n        await me.leave(); // ルームから退出\r\n        console.log(`Left room '${roomName}'`);\r\n        skywayRoom.close(); // ルームを閉じる (これはルームの作成者のみが効果的です)\r\n        console.log(\"SkyWay Room closed.\");\r\n      } catch (error) {\r\n        console.error(\"Failed to leave room:\", error);\r\n      } finally {\r\n        // 状態をリセット\r\n        setMe(null);\r\n        setSkywayRoom(null);\r\n        setReceivedMessages([]); // 受信メッセージもクリア\r\n        // すべてのリモートビデオ要素をDOMから削除\r\n        if (robotDisplayRef.current) {\r\n          Array.from(robotDisplayRef.current.children).forEach(child => {\r\n            if (child.tagName === 'VIDEO') {\r\n              robotDisplayRef.current.removeChild(child);\r\n            }\r\n          });\r\n        }\r\n        remoteVideoElements.current.clear();\r\n        // AIモードもオフにする\r\n        setIsAiModeOn(false);\r\n        setAiSuggestions([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * モーションを操作するボタンを押した時の処理\r\n   * @param {string} messageKey - 送信するメッセージのキー (messagesオブジェクトのキー)\r\n   */\r\n  const handleSend = async (messageKey) => {\r\n    if (me && skywayRoom && localDataStreamRef.current) {\r\n      try {\r\n        // 現在の言語に基づいてメッセージを取得\r\n        const messageToSend = messages[messageKey]?.[currentLanguage];\r\n        if (!messageToSend) {\r\n          console.warn(`Message for key \"${messageKey}\" not found in current language \"${currentLanguage}\".`);\r\n          return;\r\n        }\r\n\r\n        // localDataStreamRef.current を使用してデータを送信\r\n        localDataStreamRef.current.write(messageToSend);\r\n        console.log(`Sent message: \"${messageToSend}\"`);\r\n        // 送信したメッセージも自身の画面に表示\r\n        setReceivedMessages(prevMessages => [...prevMessages, { senderId: me.id, message: messageToSend, isLocal: true }]);\r\n      } catch (error) {\r\n        console.error(\"Failed to send data:\", error);\r\n      }\r\n    } else {\r\n      console.warn(\"Cannot send message: Not in a room, 'me' object is not available, or data stream is not ready.\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * マイクのミュート/ミュート解除を切り替えるハンドラ\r\n   */\r\n  const handleMute = async () => {\r\n    console.log(\"start\");\r\n    if (!audioPublicationRef.current) {\r\n      console.warn(\"Audio publication not available. Cannot toggle mute.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (isMuted) {\r\n        // 現在ミュート状態なら、ミュートを解除\r\n        await audioPublicationRef.current.enable();\r\n        console.log(\"Microphone unmuted.\");\r\n      } else {\r\n        // 現在ミュート状態でないなら、ミュート\r\n        await audioPublicationRef.current.disable();\r\n        console.log(\"Microphone muted.\");\r\n      }\r\n      setIsMuted(!isMuted); // ミュート状態をトグル\r\n    } catch (error) {\r\n      console.error(\"Failed to toggle microphone mute state:\", error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 言語を切り替えるハンドラ\r\n   */\r\n  const handleToggleLanguage = () => {\r\n    setCurrentLanguage(prevLang => (prevLang === 'japanese' ? 'english' : 'japanese'));\r\n  };\r\n\r\n  /**\r\n   * AIモードを切り替えるハンドラ\r\n   * AIモードがONになったら、2つのランダムな提案を生成します。\r\n   */\r\n  const handleAiModeToggle = () => {\r\n    setIsAiModeOn(prev => {\r\n      const newAiModeState = !prev;\r\n      if (newAiModeState) {\r\n        // AIモードがONになったら、2つのランダムな提案を生成\r\n        const messageKeys = Object.keys(messages);\r\n        let suggestion1Key, suggestion2Key;\r\n\r\n        do {\r\n          suggestion1Key = messageKeys[Math.floor(Math.random() * messageKeys.length)];\r\n          suggestion2Key = messageKeys[Math.floor(Math.random() * messageKeys.length)];\r\n        } while (suggestion1Key === suggestion2Key); // 2つの提案が異なることを保証\r\n\r\n        setAiSuggestions([\r\n          { key: suggestion1Key, text: messages[suggestion1Key][currentLanguage] },\r\n          { key: suggestion2Key, text: messages[suggestion2Key][currentLanguage] }\r\n        ]);\r\n      } else {\r\n        // AIモードがOFFになったら提案をクリア\r\n        setAiSuggestions([]);\r\n      }\r\n      return newAiModeState;\r\n    });\r\n  };\r\n\r\n  // 言語が変更されたときにAI提案のテキストを更新するuseEffect\r\n  useEffect(() => {\r\n    if (isAiModeOn && aiSuggestions.length > 0) {\r\n      setAiSuggestions(prevSuggestions => prevSuggestions.map(s => ({\r\n        ...s,\r\n        text: messages[s.key][currentLanguage]\r\n      })));\r\n    }\r\n  }, [currentLanguage, isAiModeOn, messages]);\r\n\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"header\">\r\n        <div className=\"header-left\">\r\n          <button className=\"motion-btn\" disabled={isAiModeOn}>モーション</button>\r\n          <span className=\"robot-status\">\r\n            操作しているロボット：RX78-myakumyaku\r\n          </span>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\r\n          <button className=\"voice-btn\" disabled={isAiModeOn}>ボイス</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-container\">\r\n        <div className=\"side-panel\">\r\n          <div className=\"side-panel-content\">\r\n            {Object.keys(messages).slice(0, 17).map(key => ( // 左側のボタン数を調整\r\n              <button\r\n                key={key}\r\n                onClick={() => handleSend(key)}\r\n                className=\"side-btn\"\r\n                disabled={isAiModeOn || !me} // AIモード中は無効化\r\n              >\r\n                {messages[key].japanese} {/* ここを修正: 常に日本語表示 */}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"main-area\">\r\n          <div className=\"room-controls\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"ルーム名を入力\"\r\n              value={roomName}\r\n              onChange={(e) => setRoomName(e.target.value)}\r\n              className=\"room-input\"\r\n              disabled={!!me} // ルーム参加中は入力不可にする\r\n            />\r\n            {!me ? ( // ルームに参加していない場合\r\n              <button onClick={handleJoinRoom} className=\"join-room-btn\" disabled={!skywayContext || !roomName}>\r\n                ルームに参加\r\n              </button>\r\n            ) : ( // ルームに参加している場合\r\n              <button onClick={handleLeaveRoom} className=\"leave-room-btn\">\r\n                ルームを退出\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className=\"robot-display\" ref={robotDisplayRef}>\r\n            {/* リモートのビデオストリームがここに動的に追加されます */}\r\n            {me ? (\r\n              <div className=\"room-info\">\r\n                ルームID: {roomName} / 自分のID: {me.id}\r\n              </div>\r\n            ) : (\r\n              <p>ルームに参加してください</p>\r\n            )}\r\n\r\n            {/* AIからの提案表示 */}\r\n            {isAiModeOn && aiSuggestions.length > 0 && (\r\n              <div className=\"ai-suggestions\">\r\n                {aiSuggestions.map((suggestion, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => handleSend(suggestion.key)}\r\n                    className=\"ai-suggestion-btn\"\r\n                  >\r\n                    {suggestion.text}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"side-panel right\">\r\n          <div className=\"side-panel-content\">\r\n            {Object.keys(messages).slice(17).map(key => ( // 右側のボタン数を調整\r\n              <button\r\n                key={key}\r\n                onClick={() => handleSend(key)}\r\n                className=\"side-btn\"\r\n                disabled={isAiModeOn || !me} // AIモード中は無効化\r\n              >\r\n                {messages[key].japanese} {/* ここを修正: 常に日本語表示 */}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom-controls\">\r\n        <button\r\n          className={`control-btn ai-btn ${isAiModeOn ? 'ai-mode-on' : ''}`}\r\n          onClick={handleAiModeToggle}\r\n          disabled={!me} // ルームに参加していない場合は無効\r\n        >\r\n          🤖 AIモード {isAiModeOn ? 'ON' : 'OFF'}\r\n        </button>\r\n        <button\r\n          className={`control-btn mic-btn ${isMuted ? 'muted' : ''}`} // ミュート状態に応じてクラスを追加\r\n          onClick={handleMute}\r\n          id=\"micBtn\"\r\n          disabled={!me || !audioPublicationRef.current || isAiModeOn} // ルームに参加していない、またはオーディオが公開されていない、AIモード中は無効\r\n        >\r\n          {isMuted ? '🔇 マイクミュート' : '🎤 マイクON'} {/* ミュート状態に応じてアイコンとテキストを変更 */}\r\n        </button>\r\n        <button className=\"control-btn manual-btn\" id=\"manualBtn\" disabled={isAiModeOn}>\r\n          📋 マニュアル\r\n        </button>\r\n        <button\r\n          className=\"control-btn greeting-btn\"\r\n          id=\"languageBtn\"\r\n          onClick={handleToggleLanguage} // 言語切り替えハンドラを設定\r\n          disabled={isAiModeOn} // AIモード中は無効化\r\n        >\r\n          👋 {currentLanguage === 'japanese' ? 'にほんご' : 'English'} {/* 現在の言語に応じてボタンのテキストを変更 */}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}