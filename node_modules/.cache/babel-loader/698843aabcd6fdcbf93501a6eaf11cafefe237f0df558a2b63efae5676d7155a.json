{"ast":null,"code":"var _jsxFileName = \"C:\\\\banpaku_2025\\\\banpaku\\\\src\\\\home.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useMemo, useRef, useState } from \"react\";\n// import { useNavigate } from 'react-router-dom';\n// import \"./style.css\"\n// import {\n//   nowInSec,\n//   SkyWayAuthToken,\n//   SkyWayContext,\n//   SkyWayRoom,\n//   SkyWayStreamFactory,\n//   uuidV4,\n//   LocalP2PRoomMember,\n// } from '@skyway-sdk/room';\n\n// /**\n//  * ホーム画面コンポーネント\n//  * @param {object} props - プロパティ\n//  * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\n//  */\n// function Home({setIsLoggedIn}) {\n//     //ルーム名\n//     const [ roomName, setRoomName ] = useState(\"\"); \n//     //自分の参加者情報\n//     const [ me, setMe ] = useState();\n\n//     const navigate = useNavigate();\n\n//   /**\n//    * ログアウトボタンクリック時のハンドラ\n//    */\n\n//     const handleLogout = () => {\n//     setIsLoggedIn(false); // ログイン状態をfalseに設定\n//     navigate('/'); // ログアウト後、ログインページへ遷移\n//     };\n\n//     const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\n//     const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\n\n//     //tokenの生成\n//     const token = useMemo(() => {\n//     if (appId == null || secretKey == null) return undefined;\n\n//         return new SkyWayAuthToken({\n//             jti: uuidV4(),\n//             iat: nowInSec(),\n//             exp: nowInSec() + 60 * 60 * 24,\n//             version: 3,\n//             scope: {\n//                 appId: appId,\n//                 rooms: [\n//                 {\n//                 name: \"*\",\n//                 methods: [\"create\", \"close\", \"updateMetadata\"],\n//                 member: {\n//                     name: \"*\",\n//                     methods: [\"publish\", \"subscribe\", \"updateMetadata\"]\n//                 }\n//                 }],\n//                 turn: {\n//                 enabled: true\n//                 }\n//             }\n//         }).encode(secretKey);\n\n//     }, [appId, secretKey]);\n\n//     useEffect(() => {\n\n//     })\n\n//     return(\n//     <>\n//         <meta charSet=\"UTF-8\" />\n//         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n//         <title>ロボットチャット - RX78-myakumyaku</title>\n//         <link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" />\n//         <div className=\"header\">\n//             <div className=\"header-left\">\n//             <button className=\"motion-btn\">モーション</button>\n//             <span className=\"robot-status\">\n//                 操作しているロボット：RX78-myakumyaku\n//             </span>\n//             </div>\n//             <div className=\"header-right\">\n//             <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\n//             <button className=\"voice-btn\">ボイス</button>\n//             </div>\n//         </div>\n//         <div className=\"main-container\">\n//             <div className=\"side-panel\">\n//             <div className=\"side-panel-content\">\n//                 <button className=\"side-btn\">こんにちは</button>\n//                 <button className=\"side-btn\">バイバイ</button>\n//                 <button className=\"side-btn\">ペコリ</button>\n//                 <button className=\"side-btn\">バタバタ</button>\n//                 <button className=\"side-btn\">うえをむく</button>\n//                 <button className=\"side-btn\">したをむく</button>\n//                 <button className=\"side-btn\">みぎをむく</button>\n//                 <button className=\"side-btn\">ひだりをむく</button>\n//                 <button className=\"side-btn\">うなずく</button>\n//                 <button className=\"side-btn\">かしげる</button>\n//                 <button className=\"side-btn\">まわる</button>\n//                 <button className=\"side-btn\">ジャンプ</button>\n//                 <button className=\"side-btn\">ダンス</button>\n//                 <button className=\"side-btn\">おじぎ</button>\n//                 <button className=\"side-btn\">きをつけ</button>\n//                 <button className=\"side-btn\">休め</button>\n//             </div>\n//             </div>\n//             <div className=\"main-area\">\n//             <div className=\"robot-display\"></div>\n//             </div>\n//             <div className=\"side-panel right\">\n//             <div className=\"side-panel-content\">\n//                 <button className=\"side-btn\">こんにちは</button>\n//                 <button className=\"side-btn\">どこからきたの？</button>\n//                 <button className=\"side-btn\">バイバイ</button>\n//                 <button className=\"side-btn\">○○していますか？</button>\n//                 <button className=\"side-btn\">ありがとう</button>\n//                 <button className=\"side-btn\">いいね</button>\n//                 <button className=\"side-btn\">おおきに</button>\n//                 <button className=\"side-btn\">すごい</button>\n//                 <button className=\"side-btn\">がんばれ</button>\n//                 <button className=\"side-btn\">よろしく</button>\n//                 <button className=\"side-btn\">お疲れ様</button>\n//                 <button className=\"side-btn\">いいお天気</button>\n//                 <button className=\"side-btn\">暑いですね</button>\n//                 <button className=\"side-btn\">寒いですね</button>\n//                 <button className=\"side-btn\">楽しい</button>\n//                 <button className=\"side-btn\">面白い</button>\n//                 <button className=\"side-btn\">すてき</button>\n//                 <button className=\"side-btn\">かわいい</button>\n//                 <button className=\"side-btn\">かっこいい</button>\n//                 <button className=\"side-btn\">また明日</button>\n//             </div>\n//             </div>\n//         </div>\n//         <div className=\"bottom-controls\">\n//             <button className=\"control-btn ai-btn\">🤖 AIでいあんON</button>\n//             <button className=\"control-btn mic-btn\" id=\"micBtn\">\n//             🎤\n//             </button>\n//             <button className=\"control-btn manual-btn\" id=\"manualBtn\">\n//             📋 マニュアル\n//             </button>\n//             <button className=\"control-btn greeting-btn\" id=\"languageBtn\">\n//             👋 にほんご\n//             </button>\n//         </div>\n//     </>\n\n//     )\n// }\n\n// export default Home;\n\n// import React, { useEffect, useMemo, useRef, useState } from \"react\";\n// import './style.css'\n// // SkyWay SDKをnpmからインポートします (すべてのエクスポートをSkyWaySDKオブジェクトとして取得)\n// import * as SkyWaySDK from '@skyway-sdk/room';\n\n// // アプリケーションのメインコンポーネント\n// function Hoem() {\n//     // ログイン状態を管理するステート\n//     const [isLoggedIn, setIsLoggedIn] = useState(true); // 初期状態をログイン済みとする\n//     // SkyWayルーム名\n//     const [roomName, setRoomName] = useState(\"your-robot-room\"); // ここに適切なルーム名を設定してください。ロボット側も同じルーム名で接続する必要があります。\n//     // 自身のSkyWay参加者情報\n//     const [me, setMe] = useState(null);\n//     // リモートの映像を表示するためのvideo要素への参照\n//     const remoteVideoRef = useRef(null);\n//     // ローカルの映像を表示するためのvideo要素への参照\n//     const localVideoRef = useRef(null); // ローカル映像用Refを追加\n//     // 映像が再生中かどうかを追跡するステート\n//     const [isRemoteVideoPlaying, setIsRemoteVideoPlaying] = useState(false);\n//     // ローカルの接続状態メッセージ\n//     const [connectionStatus, setConnectionStatus] = useState(\"SkyWayに接続中...\");\n\n//     /**\n//      * ログアウトボタンクリック時のハンドラ\n//      * このデモではログイン状態をfalseにするだけで、実際のページ遷移は行いません。\n//      */\n//     const handleLogout = () => {\n//         setIsLoggedIn(false); // ログイン状態をfalseに設定\n//         // 実際のアプリケーションでは、ここでログインページへ遷移します\n//         console.log(\"Logged out. In a real app, you would navigate to the login page.\");\n//     };\n\n//     // SkyWay App ID と Secret Key は、ご自身のものを設定してください。\n//     // この値はデモ用であり、本番環境では安全な方法で管理する必要があります。\n//     const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\n//     const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\n\n//     // SkyWay認証トークンの生成\n//     const token = useMemo(() => {\n//         // App IDまたはSecret Keyが不足している場合はトークン生成をスキップ\n//         if (!appId || !secretKey) {\n//             console.log(\"SkyWay App ID or Secret Key is missing, skipping token generation.\");\n//             setConnectionStatus(\"SkyWay App IDまたはSecret Keyが不足しています。\");\n//             return undefined;\n//         }\n\n//         return new SkyWaySDK.SkyWayAuthToken({ // SkyWaySDK.SkyWayAuthTokenに変更\n//             jti: SkyWaySDK.uuidV4(), // SkyWaySDK.uuidV4に変更\n//             iat: SkyWaySDK.nowInSec(), // SkyWaySDK.nowInSecに変更\n//             exp: SkyWaySDK.nowInSec() + 60 * 60 * 24, // SkyWaySDK.nowInSecに変更\n//             version: 3,\n//             scope: {\n//                 appId: appId,\n//                 rooms: [\n//                     {\n//                         name: \"*\", // すべてのルーム名にアクセス許可\n//                         methods: [\"create\", \"close\", \"updateMetadata\"],\n//                         member: {\n//                             name: \"*\", // すべてのメンバーにアクセス許可\n//                             methods: [\"publish\", \"subscribe\", \"updateMetadata\"]\n//                         }\n//                     }\n//                 ],\n//                 turn: {\n//                     enabled: true // TURNサーバーの使用を許可\n//                 }\n//             }\n//         }).encode(secretKey);\n//     }, [appId, secretKey]);\n\n//     // SkyWayルームへの接続とストリームの購読処理\n//     useEffect(() => {\n//         let localStream = null; // ローカルストリームを保持するための変数\n\n//         const joinRoom = async () => {\n//             // トークンまたはルーム名が利用可能でない場合はルーム参加をスキップ\n//             if (!token || !roomName) {\n//                 console.log(\"SkyWay token or room name not available, skipping room join.\");\n//                 setConnectionStatus(\"SkyWayトークンまたはルーム名が利用できません。\");\n//                 return;\n//             }\n\n//             try {\n//                 setConnectionStatus(\"SkyWayルームに接続中...\");\n//                 // SkyWayコンテキストの作成\n//                 const context = await SkyWaySDK.SkyWayContext.Create(token); // SkyWaySDK.SkyWayContextに変更\n//                 // SkyWayルームへの参加または作成\n//                 const room = await SkyWaySDK.SkyWayRoom.FindOrCreate(context, { // SkyWaySDK.SkyWayRoomに変更\n//                     name: roomName,\n//                     type: \"p2p\", // P2Pルームとして設定\n//                 });\n//                 // ルームに参加し、自身のメンバー情報を取得\n//                 const newMe = await room.join();\n//                 setMe(newMe);\n//                 console.log(`Joined room: ${roomName} as member: ${newMe.id}`);\n//                 setConnectionStatus(`ルームに参加しました: ${roomName} (ID: ${newMe.id.substring(0, 8)}...)`);\n\n//                 // ローカルのカメラとマイクのストリームを取得\n//                 try {\n//                     // SkyWayStreamFactoryが正しくインポートされているか確認\n//                     // このチェックはSkyWaySDK.*にすることで不要になりますが、念のため残します\n//                     if (typeof SkyWaySDK.SkyWayStreamFactory.createMicrophoneAudioAndCameraStream !== 'function') {\n//                         throw new Error(\"SkyWaySDK.SkyWayStreamFactory.createMicrophoneAudioAndCameraStream is not a function. Check SkyWay SDK import.\");\n//                     }\n//                     localStream = await SkyWaySDK.SkyWayStreamFactory.createMicrophoneAudioAndCameraStream(); // SkyWaySDK.SkyWayStreamFactoryに変更\n//                     if (localVideoRef.current) {\n//                         localVideoRef.current.srcObject = localStream.mediaStream;\n\n//                         localVideoRef.current.play();\n//                         console.log(\"Local video stream started.\");\n//                     }\n//                     // ローカルストリームをSkyWayルームに公開\n//                     await newMe.publish(localStream);\n//                     console.log(\"Local stream published to SkyWay.\");\n//                 } catch (mediaError) {\n//                     console.error(\"Failed to get local media stream or publish it:\", mediaError.name);\n//                     setConnectionStatus(`カメラ/マイクへのアクセスに失敗しました: ${mediaError.message}`);\n//                 }\n\n//                 // リモートメンバーがストリームを公開したときのイベントリスナー\n//                 newMe.onStreamPublished.add(async (e) => {\n//                     const { stream } = e;\n//                     console.log(`Stream published by ${e.publication.publisher.id}: ${stream.id}, ContentType: ${stream.contentType}`);\n//                     // 映像ストリームのみを対象とする\n//                     if (stream.contentType === \"video\") {\n//                         console.log(`Attempting to subscribe to video stream from ${e.publication.publisher.id}`);\n//                         // ストリームを購読\n//                         const subscribedStream = await newMe.subscribe(stream);\n//                         // video要素にストリームを設定し、再生を開始\n//                         if (remoteVideoRef.current) {\n//                             remoteVideoRef.current.srcObject = subscribedStream.mediaStream;\n//                             remoteVideoRef.current.play()\n//                                 .then(() => {\n//                                     console.log(\"Remote video stream started successfully.\");\n//                                     setIsRemoteVideoPlaying(true); // 映像が再生されたことを記録\n//                                 })\n//                                 .catch((error) => {\n//                                     console.error(\"Failed to play remote video (autoplay blocked?):\", error);\n//                                     setIsRemoteVideoPlaying(false); // 再生失敗\n//                                 });\n//                         }\n//                     }\n//                 });\n\n//                 // 既にルームにいるメンバーのストリームを購読する\n//                 // これは、あなたがルームに参加する前に他のメンバーが既にストリームを公開していた場合に必要です。\n//                 for (const member of room.members) {\n//                     if (member.id === newMe.id) continue; // 自身を除く\n//                     for (const publication of member.publications) {\n//                         // 映像ストリームのみを対象とする\n//                         if (publication.contentType === \"video\") {\n//                             console.log(`Attempting to subscribe to existing video stream from ${publication.publisher.id}`);\n//                             const subscribedStream = await newMe.subscribe(publication);\n//                             if (remoteVideoRef.current) {\n//                                 remoteVideoRef.current.srcObject = subscribedStream.mediaStream;\n//                                 remoteVideoRef.current.play()\n//                                     .then(() => {\n//                                         console.log(\"Existing remote video stream started successfully.\");\n//                                         setIsRemoteVideoPlaying(true); // 映像が再生されたことを記録\n//                                     })\n//                                     .catch((error) => {\n//                                         console.error(\"Failed to play existing remote video (autoplay blocked?):\", error);\n//                                         setIsRemoteVideoPlaying(false); // 再生失敗\n//                                     });\n//                             }\n//                         }\n//                     }\n//                 }\n\n//             } catch (error) {\n//                 console.error(\"Failed to join SkyWay room:\", error);\n//                 setConnectionStatus(`SkyWayルームへの接続に失敗しました: ${error.message}`);\n//             }\n//         };\n\n//         // ログイン状態がtrueの場合のみSkyWay接続を試みる\n//         if (isLoggedIn) {\n//             joinRoom();\n//         }\n\n//         // コンポーネントがアンマウントされる際のクリーンアップ関数\n//         return () => {\n//             // meがnullでない場合のみleaveを呼び出す\n//             if (me) {\n//                 console.log(`Leaving room: ${roomName}`);\n//                 me.leave(); // ルームから退出\n//                 setMe(null); // meステートをリセット (これはコンポーネントが完全にアンマウントされる場合にのみ意味があります)\n//             }\n//             // ローカルストリームも停止\n//             if (localStream) {\n//                 localStream.mediaStream.getTracks().forEach(track => track.stop());\n//                 console.log(\"Local stream tracks stopped.\");\n//             }\n//         };\n//     }, [token, roomName, isLoggedIn]); // 依存配列からmeを削除しました\n\n//     // ログインしていない場合は何も表示しない（実際のアプリではログイン画面を表示）\n//     if (!isLoggedIn) {\n//         return (\n//             <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', fontSize: '24px' }}>\n//                 <p>ログアウトしました。ログインしてください。</p>\n//             </div>\n//         );\n//     }\n\n//     return(\n//         <>\n//             <meta charSet=\"UTF-8\" />\n//             <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n//             <title>ロボットチャット - RX78-myakumyaku</title>\n//             <div className=\"header\">\n//                 <div className=\"header-left\">\n//                     <button className=\"motion-btn\">モーション</button>\n//                     <span className=\"robot-status\">\n//                         操作しているロボット：RX78-myakumyaku\n//                     </span>\n//                 </div>\n//                 <div className=\"header-right\">\n//                     <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\n//                     <button className=\"voice-btn\">ボイス</button>\n//                 </div>\n//             </div>\n//             <div className=\"main-container\">\n//                 <div className=\"side-panel\">\n//                     <div className=\"side-panel-content\">\n//                         <button className=\"side-btn\">こんにちは</button>\n//                         <button className=\"side-btn\">バイバイ</button>\n//                         <button className=\"side-btn\">ペコリ</button>\n//                         <button className=\"side-btn\">バタバタ</button>\n//                         <button className=\"side-btn\">うえをむく</button>\n//                         <button className=\"side-btn\">したをむく</button>\n//                         <button className=\"side-btn\">みぎをむく</button>\n//                         <button className=\"side-btn\">ひだりをむく</button>\n//                         <button className=\"side-btn\">うなずく</button>\n//                         <button className=\"side-btn\">かしげる</button>\n//                         <button className=\"side-btn\">まわる</button>\n//                         <button className=\"side-btn\">ジャンプ</button>\n//                         <button className=\"side-btn\">ダンス</button>\n//                         <button className=\"side-btn\">おじぎ</button>\n//                         <button className=\"side-btn\">きをつけ</button>\n//                         <button className=\"side-btn\">休め</button>\n//                     </div>\n//                 </div>\n//                 <div className=\"main-area\">\n//                     <div className=\"robot-display\">\n//                         {/* ローカルの映像を表示するためのvideo要素 (自分のカメラ映像) */}\n//                         <video ref={localVideoRef} autoPlay playsInline muted style={{ width: '100%', height: '50%', objectFit: 'contain', borderBottom: '1px solid gray' }} />\n//                         {/* リモートの映像を表示するためのvideo要素 (他のメンバーのカメラ映像) */}\n//                         <video ref={remoteVideoRef} autoPlay playsInline muted style={{ width: '100%', height: '50%', objectFit: 'contain' }} />\n//                         {!isRemoteVideoPlaying && (\n//                             <div style={{\n//                                 position: 'absolute',\n//                                 top: '50%',\n//                                 left: '50%',\n//                                 transform: 'translate(-50%, -50%)',\n//                                 color: 'white',\n//                                 fontSize: '20px',\n//                                 background: 'rgba(0, 0, 0, 0.7)',\n//                                 padding: '10px 20px',\n//                                 borderRadius: '10px',\n//                                 zIndex: 10,\n//                                 textAlign: 'center'\n//                             }}>\n//                                 {connectionStatus}\n//                                 <br />\n//                                 他のメンバーの映像を待機中...\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//                 <div className=\"side-panel right\">\n//                     <div className=\"side-panel-content\">\n//                         <button className=\"side-btn\">こんにちは</button>\n//                         <button className=\"side-btn\">どこからきたの？</button>\n//                         <button className=\"side-btn\">バイバイ</button>\n//                         <button className=\"side-btn\">○○していますか？</button>\n//                         <button className=\"side-btn\">ありがとう</button>\n//                         <button className=\"side-btn\">いいね</button>\n//                         <button className=\"side-btn\">おおきに</button>\n//                         <button className=\"side-btn\">すごい</button>\n//                         <button className=\"side-btn\">がんばれ</button>\n//                         <button className=\"side-btn\">よろしく</button>\n//                         <button className=\"side-btn\">お疲れ様</button>\n//                         <button className=\"side-btn\">いいお天気</button>\n//                         <button className=\"side-btn\">暑いですね</button>\n//                         <button className=\"side-btn\">寒いですね</button>\n//                         <button className=\"side-btn\">楽しい</button>\n//                         <button className=\"side-btn\">面白い</button>\n//                         <button className=\"side-btn\">すてき</button>\n//                         <button className=\"side-btn\">かわいい</button>\n//                         <button className=\"side-btn\">かっこいい</button>\n//                         <button className=\"side-btn\">また明日</button>\n//                     </div>\n//                 </div>\n//             </div>\n//             <div className=\"bottom-controls\">\n//                 <button className=\"control-btn ai-btn\">🤖 AIでいあんON</button>\n//                 <button className=\"control-btn mic-btn\" id=\"micBtn\">\n//                     🎤\n//                 </button>\n//                 <button className=\"control-btn manual-btn\" id=\"manualBtn\">\n//                     📋 マニュアル\n//                 </button>\n//                 <button className=\"control-btn greeting-btn\" id=\"languageBtn\">\n//                     👋 にほんご\n//                 </button>\n//             </div>\n//         </>\n//     );\n// }\n\n// export default Hoem;\n\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport 'style.css';\n// import { useNavigate } from 'react-router-dom'; // ルーティングを使用する場合はコメントを解除してください\nimport { nowInSec, SkyWayAuthToken, SkyWayContext, SkyWayRoom, SkyWayStreamFactory,\n// 必要に応じてローカルストリームを公開するために使用\nuuidV4, LocalP2PRoomMember } from '@skyway-sdk/room';\n\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home({\n  setIsLoggedIn\n}) {\n  _s();\n  // ルーム名\n  const [roomName, setRoomName] = useState(\"\");\n  // 自分の参加者情報 (ルームに参加すると設定されます)\n  const [me, setMe] = useState(null);\n  // SkyWayコンテキストのインスタンス\n  const [skywayContext, setSkywayContext] = useState(null);\n  // SkyWayルームのインスタンス\n  const [skywayRoom, setSkywayRoom] = useState(null);\n  // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\n  const remoteVideoElements = useRef(new Map());\n  // リモートビデオを表示するDOM要素への参照\n  const robotDisplayRef = useRef(null);\n\n  // const navigate = useNavigate(); // ルーティングを使用する場合はコメントを解除してください\n\n  /**\r\n   * ログアウトボタンクリック時のハンドラ\r\n   */\n  const handleLogout = () => {\n    setIsLoggedIn(false); // ログイン状態をfalseに設定\n    // navigate('/'); // ログアウト後、ログインページへ遷移 (ルーティングを使用する場合)\n  };\n\n  // SkyWay App ID と Secret Key\n  // 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\n  // サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\n  const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\n  const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\n\n  // SkyWay認証トークンの生成\n  const token = useMemo(() => {\n    if (appId == null || secretKey == null) return undefined;\n    return new SkyWayAuthToken({\n      jti: uuidV4(),\n      // JWT ID\n      iat: nowInSec(),\n      // 発行時刻\n      exp: nowInSec() + 60 * 60 * 24,\n      // 有効期限 (24時間)\n      version: 3,\n      scope: {\n        appId: appId,\n        rooms: [{\n          name: \"*\",\n          // すべてのルーム名に適用\n          methods: [\"create\", \"close\", \"updateMetadata\"],\n          // ルーム操作の権限\n          member: {\n            name: \"*\",\n            // すべてのメンバーに適用\n            methods: [\"publish\", \"subscribe\", \"updateMetadata\"] // メンバー操作の権限\n          }\n        }],\n        turn: {\n          enabled: true // TURNサーバーの使用を許可 (NAT越えのため)\n        }\n      }\n    }).encode(secretKey);\n  }, [appId, secretKey]);\n\n  /**\r\n   * SkyWayContextの初期化とクリーンアップを行うuseEffect\r\n   * トークンが利用可能になったときに一度だけ実行されます。\r\n   */\n  useEffect(() => {\n    if (!token) return;\n    let currentContext;\n    const initContext = async () => {\n      try {\n        currentContext = await SkyWayContext.Create(token);\n        setSkywayContext(currentContext);\n        console.log(\"SkyWayContext created successfully.\");\n      } catch (error) {\n        console.error(\"Failed to create SkyWayContext:\", error);\n      }\n    };\n    initContext();\n\n    // コンポーネントのアンマウント時にコンテキストを破棄\n    return () => {\n      if (currentContext) {\n        currentContext.dispose();\n        console.log(\"SkyWayContext disposed.\");\n      }\n    };\n  }, [token]); // tokenが変更されたときにのみ実行\n\n  /**\r\n   * ルームに参加するハンドラ\r\n   * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\r\n   */\n  const handleJoinRoom = async () => {\n    if (!skywayContext) {\n      console.error(\"SkyWayContext is not initialized. Please wait or check token.\");\n      return;\n    }\n    if (!roomName) {\n      console.error(\"Room name is empty. Please enter a room name to join.\");\n      return;\n    }\n    if (skywayRoom && me) {\n      console.warn(\"Already in a room. Please leave the current room first.\");\n      return;\n    }\n    try {\n      // 指定されたルーム名でP2Pルームを作成または検索\n      const room = await SkyWayRoom.FindOrCreate(skywayContext, {\n        type: \"p2p\",\n        // P2Pルームタイプ\n        name: roomName\n      });\n      setSkywayRoom(room);\n      console.log(`SkyWayRoom '${roomName}' found or created.`);\n\n      // ルームに参加し、自分のメンバー情報を取得\n      const localMember = await room.join();\n      setMe(localMember);\n      console.log(`Joined room '${roomName}' as member ID: ${localMember.id}`);\n\n      // --- ルームイベントリスナーの設定 ---\n\n      // メンバーがルームに参加したときのイベント\n      room.onMemberJoined.add(e => {\n        console.log(`Member joined: ${e.member.id}`);\n      });\n\n      // メンバーがルームを離脱したときのイベント\n      room.onMemberLeft.add(e => {\n        console.log(`Member left: ${e.member.id}`);\n        // 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\n        const videoElement = remoteVideoElements.current.get(e.member.id);\n        if (videoElement && robotDisplayRef.current) {\n          robotDisplayRef.current.removeChild(videoElement);\n          remoteVideoElements.current.delete(e.member.id);\n          console.log(`Removed video for member ${e.member.id}`);\n        }\n      });\n\n      // ストリームが公開されたときのイベント\n      room.onStreamPublished.add(async e => {\n        console.log(`Stream published by ${e.publication.publisher.id}`);\n        // 自分のストリームは購読しない (LocalP2PRoomMember.id と publication.publisher.id を比較)\n        if (localMember && localMember.id !== e.publication.publisher.id) {\n          try {\n            // リモートストリームを購読\n            const {\n              stream\n            } = await localMember.subscribe(e.publication.id);\n            console.log(`Subscribed to stream from ${e.publication.publisher.id}`);\n\n            // 購読したストリームを新しいビデオ要素にアタッチし、robot-displayに追加\n            if (robotDisplayRef.current) {\n              const video = document.createElement(\"video\");\n              video.autoplay = true; // 自動再生\n              video.playsInline = true; // インライン再生 (iOSなどで必要)\n              video.srcObject = stream; // ストリームをビデオ要素のソースに設定\n              video.className = \"remote-video\"; // スタイリング用のクラス\n              video.dataset.memberId = e.publication.publisher.id; // メンバーIDをデータ属性に保存\n              robotDisplayRef.current.appendChild(video);\n              remoteVideoElements.current.set(e.publication.publisher.id, video);\n              console.log(`Attached stream from ${e.publication.publisher.id} to DOM.`);\n            }\n          } catch (subscribeError) {\n            console.error(`Failed to subscribe to stream from ${e.publication.publisher.id}:`, subscribeError);\n          }\n        } else {\n          console.log(`Skipping subscription for own stream or local member not ready: ${e.publication.publisher.id}`);\n        }\n      });\n\n      // ストリームが非公開になったときのイベント\n      room.onStreamUnpublished.add(e => {\n        console.log(`Stream unpublished by ${e.publication.publisher.id}`);\n        // 該当ストリームのビデオ要素をDOMから削除し、Mapからも削除\n        const videoElement = remoteVideoElements.current.get(e.publication.publisher.id);\n        if (videoElement && robotDisplayRef.current) {\n          robotDisplayRef.current.removeChild(videoElement);\n          remoteVideoElements.current.delete(e.publication.publisher.id);\n          console.log(`Removed unpublished video for member ${e.publication.publisher.id}`);\n        }\n      });\n\n      // オプション: 自分のカメラとマイクのストリームを公開する場合\n      // const streamFactory = new SkyWayStreamFactory();\n      // const localStream = await streamFactory.createCameraAndMicrophoneStreams();\n      // await localMember.publish(localStream);\n      // console.log(\"Published local camera and microphone stream.\");\n    } catch (error) {\n      console.error(\"Failed to join room:\", error);\n      // エラー発生時に状態をリセットして再試行可能にする\n      setSkywayRoom(null);\n      setMe(null);\n      // エラー時に既存のビデオ要素をクリーンアップ\n      if (robotDisplayRef.current) {\n        Array.from(robotDisplayRef.current.children).forEach(child => {\n          if (child.tagName === 'VIDEO') {\n            robotDisplayRef.current.removeChild(child);\n          }\n        });\n      }\n      remoteVideoElements.current.clear();\n    }\n  };\n\n  /**\r\n   * ルームから退出するハンドラ\r\n   */\n  const handleLeaveRoom = async () => {\n    if (skywayRoom && me) {\n      try {\n        await me.leave(); // ルームから退出\n        console.log(`Left room '${roomName}'`);\n        skywayRoom.close(); // ルームを閉じる (これはルームの作成者のみが効果的です)\n        console.log(\"SkyWay Room closed.\");\n      } catch (error) {\n        console.error(\"Failed to leave room:\", error);\n      } finally {\n        // 状態をリセット\n        setMe(null);\n        setSkywayRoom(null);\n        // すべてのリモートビデオ要素をDOMから削除\n        if (robotDisplayRef.current) {\n          Array.from(robotDisplayRef.current.children).forEach(child => {\n            if (child.tagName === 'VIDEO') {\n              robotDisplayRef.current.removeChild(child);\n            }\n          });\n        }\n        remoteVideoElements.current.clear();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"motion-btn\",\n          children: \"\\u30E2\\u30FC\\u30B7\\u30E7\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"robot-status\",\n          children: \"\\u64CD\\u4F5C\\u3057\\u3066\\u3044\\u308B\\u30ED\\u30DC\\u30C3\\u30C8\\uFF1ARX78-myakumyaku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"voice-btn\",\n          children: \"\\u30DC\\u30A4\\u30B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-panel-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3053\\u3093\\u306B\\u3061\\u306F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u30D0\\u30A4\\u30D0\\u30A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u30DA\\u30B3\\u30EA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u30D0\\u30BF\\u30D0\\u30BF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3046\\u3048\\u3092\\u3080\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3057\\u305F\\u3092\\u3080\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u307F\\u304E\\u3092\\u3080\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3072\\u3060\\u308A\\u3092\\u3080\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3046\\u306A\\u305A\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u304B\\u3057\\u3052\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u307E\\u308F\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u30B8\\u30E3\\u30F3\\u30D7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u30C0\\u30F3\\u30B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u304A\\u3058\\u304E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u304D\\u3092\\u3064\\u3051\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u4F11\\u3081\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u30EB\\u30FC\\u30E0\\u540D\\u3092\\u5165\\u529B\",\n            value: roomName,\n            onChange: e => setRoomName(e.target.value),\n            className: \"room-input\",\n            disabled: !!me // ルーム参加中は入力不可にする\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 13\n          }, this), !me ?\n          /*#__PURE__*/\n          // ルームに参加していない場合\n          _jsxDEV(\"button\", {\n            onClick: handleJoinRoom,\n            className: \"join-room-btn\",\n            disabled: !skywayContext || !roomName,\n            children: \"\\u30EB\\u30FC\\u30E0\\u306B\\u53C2\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 15\n          }, this) :\n          /*#__PURE__*/\n          // ルームに参加している場合\n          _jsxDEV(\"button\", {\n            onClick: handleLeaveRoom,\n            className: \"leave-room-btn\",\n            children: \"\\u30EB\\u30FC\\u30E0\\u3092\\u9000\\u51FA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"robot-display\",\n          ref: robotDisplayRef,\n          children: me ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room-info\",\n            children: [\"\\u30EB\\u30FC\\u30E0ID: \", roomName, \" / \\u81EA\\u5206\\u306EID: \", me.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u30EB\\u30FC\\u30E0\\u306B\\u53C2\\u52A0\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-panel right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"side-panel-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3053\\u3093\\u306B\\u3061\\u306F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3069\\u3053\\u304B\\u3089\\u304D\\u305F\\u306E\\uFF1F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u30D0\\u30A4\\u30D0\\u30A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u25CB\\u25CB\\u3057\\u3066\\u3044\\u307E\\u3059\\u304B\\uFF1F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3042\\u308A\\u304C\\u3068\\u3046\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3044\\u3044\\u306D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u304A\\u304A\\u304D\\u306B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3059\\u3054\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u304C\\u3093\\u3070\\u308C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3088\\u308D\\u3057\\u304F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u304A\\u75B2\\u308C\\u69D8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3044\\u3044\\u304A\\u5929\\u6C17\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u6691\\u3044\\u3067\\u3059\\u306D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u5BD2\\u3044\\u3067\\u3059\\u306D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u697D\\u3057\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u9762\\u767D\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u3059\\u3066\\u304D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u304B\\u308F\\u3044\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u304B\\u3063\\u3053\\u3044\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"side-btn\",\n            children: \"\\u307E\\u305F\\u660E\\u65E5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn ai-btn\",\n        children: \"\\uD83E\\uDD16 AI\\u3067\\u3044\\u3042\\u3093ON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn mic-btn\",\n        id: \"micBtn\",\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn manual-btn\",\n        id: \"manualBtn\",\n        children: \"\\uD83D\\uDCCB \\u30DE\\u30CB\\u30E5\\u30A2\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn greeting-btn\",\n        id: \"languageBtn\",\n        children: \"\\uD83D\\uDC4B \\u306B\\u307B\\u3093\\u3054\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"kH1Cd4pOECDAmZaL68jFSqsQj+8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","nowInSec","SkyWayAuthToken","SkyWayContext","SkyWayRoom","SkyWayStreamFactory","uuidV4","LocalP2PRoomMember","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","setIsLoggedIn","_s","roomName","setRoomName","me","setMe","skywayContext","setSkywayContext","skywayRoom","setSkywayRoom","remoteVideoElements","Map","robotDisplayRef","handleLogout","appId","secretKey","token","undefined","jti","iat","exp","version","scope","rooms","name","methods","member","turn","enabled","encode","currentContext","initContext","Create","console","log","error","dispose","handleJoinRoom","warn","room","FindOrCreate","type","localMember","join","id","onMemberJoined","add","e","onMemberLeft","videoElement","current","get","removeChild","delete","onStreamPublished","publication","publisher","stream","subscribe","video","document","createElement","autoplay","playsInline","srcObject","className","dataset","memberId","appendChild","set","subscribeError","onStreamUnpublished","Array","from","children","forEach","child","tagName","clear","handleLeaveRoom","leave","close","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","target","disabled","ref","_c","$RefreshReg$"],"sources":["C:/banpaku_2025/banpaku/src/home.js"],"sourcesContent":["// import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\n// import { useNavigate } from 'react-router-dom';\r\n// import \"./style.css\"\r\n// import {\r\n//   nowInSec,\r\n//   SkyWayAuthToken,\r\n//   SkyWayContext,\r\n//   SkyWayRoom,\r\n//   SkyWayStreamFactory,\r\n//   uuidV4,\r\n//   LocalP2PRoomMember,\r\n// } from '@skyway-sdk/room';\r\n\r\n// /**\r\n//  * ホーム画面コンポーネント\r\n//  * @param {object} props - プロパティ\r\n//  * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n//  */\r\n// function Home({setIsLoggedIn}) {\r\n//     //ルーム名\r\n//     const [ roomName, setRoomName ] = useState(\"\"); \r\n//     //自分の参加者情報\r\n//     const [ me, setMe ] = useState();\r\n\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//   /**\r\n//    * ログアウトボタンクリック時のハンドラ\r\n//    */\r\n\r\n//     const handleLogout = () => {\r\n//     setIsLoggedIn(false); // ログイン状態をfalseに設定\r\n//     navigate('/'); // ログアウト後、ログインページへ遷移\r\n//     };\r\n\r\n//     const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\r\n//     const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\r\n\r\n//     //tokenの生成\r\n//     const token = useMemo(() => {\r\n//     if (appId == null || secretKey == null) return undefined;\r\n\r\n//         return new SkyWayAuthToken({\r\n//             jti: uuidV4(),\r\n//             iat: nowInSec(),\r\n//             exp: nowInSec() + 60 * 60 * 24,\r\n//             version: 3,\r\n//             scope: {\r\n//                 appId: appId,\r\n//                 rooms: [\r\n//                 {\r\n//                 name: \"*\",\r\n//                 methods: [\"create\", \"close\", \"updateMetadata\"],\r\n//                 member: {\r\n//                     name: \"*\",\r\n//                     methods: [\"publish\", \"subscribe\", \"updateMetadata\"]\r\n//                 }\r\n//                 }],\r\n//                 turn: {\r\n//                 enabled: true\r\n//                 }\r\n//             }\r\n//         }).encode(secretKey);\r\n\r\n//     }, [appId, secretKey]);\r\n\r\n//     useEffect(() => {\r\n        \r\n//     })\r\n\r\n    \r\n\r\n\r\n\r\n\r\n//     return(\r\n//     <>\r\n//         <meta charSet=\"UTF-8\" />\r\n//         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n//         <title>ロボットチャット - RX78-myakumyaku</title>\r\n//         <link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" />\r\n//         <div className=\"header\">\r\n//             <div className=\"header-left\">\r\n//             <button className=\"motion-btn\">モーション</button>\r\n//             <span className=\"robot-status\">\r\n//                 操作しているロボット：RX78-myakumyaku\r\n//             </span>\r\n//             </div>\r\n//             <div className=\"header-right\">\r\n//             <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\r\n//             <button className=\"voice-btn\">ボイス</button>\r\n//             </div>\r\n//         </div>\r\n//         <div className=\"main-container\">\r\n//             <div className=\"side-panel\">\r\n//             <div className=\"side-panel-content\">\r\n//                 <button className=\"side-btn\">こんにちは</button>\r\n//                 <button className=\"side-btn\">バイバイ</button>\r\n//                 <button className=\"side-btn\">ペコリ</button>\r\n//                 <button className=\"side-btn\">バタバタ</button>\r\n//                 <button className=\"side-btn\">うえをむく</button>\r\n//                 <button className=\"side-btn\">したをむく</button>\r\n//                 <button className=\"side-btn\">みぎをむく</button>\r\n//                 <button className=\"side-btn\">ひだりをむく</button>\r\n//                 <button className=\"side-btn\">うなずく</button>\r\n//                 <button className=\"side-btn\">かしげる</button>\r\n//                 <button className=\"side-btn\">まわる</button>\r\n//                 <button className=\"side-btn\">ジャンプ</button>\r\n//                 <button className=\"side-btn\">ダンス</button>\r\n//                 <button className=\"side-btn\">おじぎ</button>\r\n//                 <button className=\"side-btn\">きをつけ</button>\r\n//                 <button className=\"side-btn\">休め</button>\r\n//             </div>\r\n//             </div>\r\n//             <div className=\"main-area\">\r\n//             <div className=\"robot-display\"></div>\r\n//             </div>\r\n//             <div className=\"side-panel right\">\r\n//             <div className=\"side-panel-content\">\r\n//                 <button className=\"side-btn\">こんにちは</button>\r\n//                 <button className=\"side-btn\">どこからきたの？</button>\r\n//                 <button className=\"side-btn\">バイバイ</button>\r\n//                 <button className=\"side-btn\">○○していますか？</button>\r\n//                 <button className=\"side-btn\">ありがとう</button>\r\n//                 <button className=\"side-btn\">いいね</button>\r\n//                 <button className=\"side-btn\">おおきに</button>\r\n//                 <button className=\"side-btn\">すごい</button>\r\n//                 <button className=\"side-btn\">がんばれ</button>\r\n//                 <button className=\"side-btn\">よろしく</button>\r\n//                 <button className=\"side-btn\">お疲れ様</button>\r\n//                 <button className=\"side-btn\">いいお天気</button>\r\n//                 <button className=\"side-btn\">暑いですね</button>\r\n//                 <button className=\"side-btn\">寒いですね</button>\r\n//                 <button className=\"side-btn\">楽しい</button>\r\n//                 <button className=\"side-btn\">面白い</button>\r\n//                 <button className=\"side-btn\">すてき</button>\r\n//                 <button className=\"side-btn\">かわいい</button>\r\n//                 <button className=\"side-btn\">かっこいい</button>\r\n//                 <button className=\"side-btn\">また明日</button>\r\n//             </div>\r\n//             </div>\r\n//         </div>\r\n//         <div className=\"bottom-controls\">\r\n//             <button className=\"control-btn ai-btn\">🤖 AIでいあんON</button>\r\n//             <button className=\"control-btn mic-btn\" id=\"micBtn\">\r\n//             🎤\r\n//             </button>\r\n//             <button className=\"control-btn manual-btn\" id=\"manualBtn\">\r\n//             📋 マニュアル\r\n//             </button>\r\n//             <button className=\"control-btn greeting-btn\" id=\"languageBtn\">\r\n//             👋 にほんご\r\n//             </button>\r\n//         </div>\r\n//     </>\r\n\r\n//     )\r\n// }\r\n\r\n\r\n// export default Home;\r\n\r\n// import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\n// import './style.css'\r\n// // SkyWay SDKをnpmからインポートします (すべてのエクスポートをSkyWaySDKオブジェクトとして取得)\r\n// import * as SkyWaySDK from '@skyway-sdk/room';\r\n\r\n// // アプリケーションのメインコンポーネント\r\n// function Hoem() {\r\n//     // ログイン状態を管理するステート\r\n//     const [isLoggedIn, setIsLoggedIn] = useState(true); // 初期状態をログイン済みとする\r\n//     // SkyWayルーム名\r\n//     const [roomName, setRoomName] = useState(\"your-robot-room\"); // ここに適切なルーム名を設定してください。ロボット側も同じルーム名で接続する必要があります。\r\n//     // 自身のSkyWay参加者情報\r\n//     const [me, setMe] = useState(null);\r\n//     // リモートの映像を表示するためのvideo要素への参照\r\n//     const remoteVideoRef = useRef(null);\r\n//     // ローカルの映像を表示するためのvideo要素への参照\r\n//     const localVideoRef = useRef(null); // ローカル映像用Refを追加\r\n//     // 映像が再生中かどうかを追跡するステート\r\n//     const [isRemoteVideoPlaying, setIsRemoteVideoPlaying] = useState(false);\r\n//     // ローカルの接続状態メッセージ\r\n//     const [connectionStatus, setConnectionStatus] = useState(\"SkyWayに接続中...\");\r\n\r\n//     /**\r\n//      * ログアウトボタンクリック時のハンドラ\r\n//      * このデモではログイン状態をfalseにするだけで、実際のページ遷移は行いません。\r\n//      */\r\n//     const handleLogout = () => {\r\n//         setIsLoggedIn(false); // ログイン状態をfalseに設定\r\n//         // 実際のアプリケーションでは、ここでログインページへ遷移します\r\n//         console.log(\"Logged out. In a real app, you would navigate to the login page.\");\r\n//     };\r\n\r\n//     // SkyWay App ID と Secret Key は、ご自身のものを設定してください。\r\n//     // この値はデモ用であり、本番環境では安全な方法で管理する必要があります。\r\n//     const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\r\n//     const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\r\n\r\n//     // SkyWay認証トークンの生成\r\n//     const token = useMemo(() => {\r\n//         // App IDまたはSecret Keyが不足している場合はトークン生成をスキップ\r\n//         if (!appId || !secretKey) {\r\n//             console.log(\"SkyWay App ID or Secret Key is missing, skipping token generation.\");\r\n//             setConnectionStatus(\"SkyWay App IDまたはSecret Keyが不足しています。\");\r\n//             return undefined;\r\n//         }\r\n\r\n//         return new SkyWaySDK.SkyWayAuthToken({ // SkyWaySDK.SkyWayAuthTokenに変更\r\n//             jti: SkyWaySDK.uuidV4(), // SkyWaySDK.uuidV4に変更\r\n//             iat: SkyWaySDK.nowInSec(), // SkyWaySDK.nowInSecに変更\r\n//             exp: SkyWaySDK.nowInSec() + 60 * 60 * 24, // SkyWaySDK.nowInSecに変更\r\n//             version: 3,\r\n//             scope: {\r\n//                 appId: appId,\r\n//                 rooms: [\r\n//                     {\r\n//                         name: \"*\", // すべてのルーム名にアクセス許可\r\n//                         methods: [\"create\", \"close\", \"updateMetadata\"],\r\n//                         member: {\r\n//                             name: \"*\", // すべてのメンバーにアクセス許可\r\n//                             methods: [\"publish\", \"subscribe\", \"updateMetadata\"]\r\n//                         }\r\n//                     }\r\n//                 ],\r\n//                 turn: {\r\n//                     enabled: true // TURNサーバーの使用を許可\r\n//                 }\r\n//             }\r\n//         }).encode(secretKey);\r\n//     }, [appId, secretKey]);\r\n\r\n//     // SkyWayルームへの接続とストリームの購読処理\r\n//     useEffect(() => {\r\n//         let localStream = null; // ローカルストリームを保持するための変数\r\n\r\n//         const joinRoom = async () => {\r\n//             // トークンまたはルーム名が利用可能でない場合はルーム参加をスキップ\r\n//             if (!token || !roomName) {\r\n//                 console.log(\"SkyWay token or room name not available, skipping room join.\");\r\n//                 setConnectionStatus(\"SkyWayトークンまたはルーム名が利用できません。\");\r\n//                 return;\r\n//             }\r\n\r\n//             try {\r\n//                 setConnectionStatus(\"SkyWayルームに接続中...\");\r\n//                 // SkyWayコンテキストの作成\r\n//                 const context = await SkyWaySDK.SkyWayContext.Create(token); // SkyWaySDK.SkyWayContextに変更\r\n//                 // SkyWayルームへの参加または作成\r\n//                 const room = await SkyWaySDK.SkyWayRoom.FindOrCreate(context, { // SkyWaySDK.SkyWayRoomに変更\r\n//                     name: roomName,\r\n//                     type: \"p2p\", // P2Pルームとして設定\r\n//                 });\r\n//                 // ルームに参加し、自身のメンバー情報を取得\r\n//                 const newMe = await room.join();\r\n//                 setMe(newMe);\r\n//                 console.log(`Joined room: ${roomName} as member: ${newMe.id}`);\r\n//                 setConnectionStatus(`ルームに参加しました: ${roomName} (ID: ${newMe.id.substring(0, 8)}...)`);\r\n\r\n//                 // ローカルのカメラとマイクのストリームを取得\r\n//                 try {\r\n//                     // SkyWayStreamFactoryが正しくインポートされているか確認\r\n//                     // このチェックはSkyWaySDK.*にすることで不要になりますが、念のため残します\r\n//                     if (typeof SkyWaySDK.SkyWayStreamFactory.createMicrophoneAudioAndCameraStream !== 'function') {\r\n//                         throw new Error(\"SkyWaySDK.SkyWayStreamFactory.createMicrophoneAudioAndCameraStream is not a function. Check SkyWay SDK import.\");\r\n//                     }\r\n//                     localStream = await SkyWaySDK.SkyWayStreamFactory.createMicrophoneAudioAndCameraStream(); // SkyWaySDK.SkyWayStreamFactoryに変更\r\n//                     if (localVideoRef.current) {\r\n//                         localVideoRef.current.srcObject = localStream.mediaStream;\r\n                        \r\n//                         localVideoRef.current.play();\r\n//                         console.log(\"Local video stream started.\");\r\n//                     }\r\n//                     // ローカルストリームをSkyWayルームに公開\r\n//                     await newMe.publish(localStream);\r\n//                     console.log(\"Local stream published to SkyWay.\");\r\n//                 } catch (mediaError) {\r\n//                     console.error(\"Failed to get local media stream or publish it:\", mediaError.name);\r\n//                     setConnectionStatus(`カメラ/マイクへのアクセスに失敗しました: ${mediaError.message}`);\r\n//                 }\r\n\r\n\r\n//                 // リモートメンバーがストリームを公開したときのイベントリスナー\r\n//                 newMe.onStreamPublished.add(async (e) => {\r\n//                     const { stream } = e;\r\n//                     console.log(`Stream published by ${e.publication.publisher.id}: ${stream.id}, ContentType: ${stream.contentType}`);\r\n//                     // 映像ストリームのみを対象とする\r\n//                     if (stream.contentType === \"video\") {\r\n//                         console.log(`Attempting to subscribe to video stream from ${e.publication.publisher.id}`);\r\n//                         // ストリームを購読\r\n//                         const subscribedStream = await newMe.subscribe(stream);\r\n//                         // video要素にストリームを設定し、再生を開始\r\n//                         if (remoteVideoRef.current) {\r\n//                             remoteVideoRef.current.srcObject = subscribedStream.mediaStream;\r\n//                             remoteVideoRef.current.play()\r\n//                                 .then(() => {\r\n//                                     console.log(\"Remote video stream started successfully.\");\r\n//                                     setIsRemoteVideoPlaying(true); // 映像が再生されたことを記録\r\n//                                 })\r\n//                                 .catch((error) => {\r\n//                                     console.error(\"Failed to play remote video (autoplay blocked?):\", error);\r\n//                                     setIsRemoteVideoPlaying(false); // 再生失敗\r\n//                                 });\r\n//                         }\r\n//                     }\r\n//                 });\r\n\r\n//                 // 既にルームにいるメンバーのストリームを購読する\r\n//                 // これは、あなたがルームに参加する前に他のメンバーが既にストリームを公開していた場合に必要です。\r\n//                 for (const member of room.members) {\r\n//                     if (member.id === newMe.id) continue; // 自身を除く\r\n//                     for (const publication of member.publications) {\r\n//                         // 映像ストリームのみを対象とする\r\n//                         if (publication.contentType === \"video\") {\r\n//                             console.log(`Attempting to subscribe to existing video stream from ${publication.publisher.id}`);\r\n//                             const subscribedStream = await newMe.subscribe(publication);\r\n//                             if (remoteVideoRef.current) {\r\n//                                 remoteVideoRef.current.srcObject = subscribedStream.mediaStream;\r\n//                                 remoteVideoRef.current.play()\r\n//                                     .then(() => {\r\n//                                         console.log(\"Existing remote video stream started successfully.\");\r\n//                                         setIsRemoteVideoPlaying(true); // 映像が再生されたことを記録\r\n//                                     })\r\n//                                     .catch((error) => {\r\n//                                         console.error(\"Failed to play existing remote video (autoplay blocked?):\", error);\r\n//                                         setIsRemoteVideoPlaying(false); // 再生失敗\r\n//                                     });\r\n//                             }\r\n//                         }\r\n//                     }\r\n//                 }\r\n\r\n//             } catch (error) {\r\n//                 console.error(\"Failed to join SkyWay room:\", error);\r\n//                 setConnectionStatus(`SkyWayルームへの接続に失敗しました: ${error.message}`);\r\n//             }\r\n//         };\r\n\r\n//         // ログイン状態がtrueの場合のみSkyWay接続を試みる\r\n//         if (isLoggedIn) {\r\n//             joinRoom();\r\n//         }\r\n\r\n//         // コンポーネントがアンマウントされる際のクリーンアップ関数\r\n//         return () => {\r\n//             // meがnullでない場合のみleaveを呼び出す\r\n//             if (me) {\r\n//                 console.log(`Leaving room: ${roomName}`);\r\n//                 me.leave(); // ルームから退出\r\n//                 setMe(null); // meステートをリセット (これはコンポーネントが完全にアンマウントされる場合にのみ意味があります)\r\n//             }\r\n//             // ローカルストリームも停止\r\n//             if (localStream) {\r\n//                 localStream.mediaStream.getTracks().forEach(track => track.stop());\r\n//                 console.log(\"Local stream tracks stopped.\");\r\n//             }\r\n//         };\r\n//     }, [token, roomName, isLoggedIn]); // 依存配列からmeを削除しました\r\n\r\n//     // ログインしていない場合は何も表示しない（実際のアプリではログイン画面を表示）\r\n//     if (!isLoggedIn) {\r\n//         return (\r\n//             <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', fontSize: '24px' }}>\r\n//                 <p>ログアウトしました。ログインしてください。</p>\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n//     return(\r\n//         <>\r\n//             <meta charSet=\"UTF-8\" />\r\n//             <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n//             <title>ロボットチャット - RX78-myakumyaku</title>\r\n//             <div className=\"header\">\r\n//                 <div className=\"header-left\">\r\n//                     <button className=\"motion-btn\">モーション</button>\r\n//                     <span className=\"robot-status\">\r\n//                         操作しているロボット：RX78-myakumyaku\r\n//                     </span>\r\n//                 </div>\r\n//                 <div className=\"header-right\">\r\n//                     <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\r\n//                     <button className=\"voice-btn\">ボイス</button>\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"main-container\">\r\n//                 <div className=\"side-panel\">\r\n//                     <div className=\"side-panel-content\">\r\n//                         <button className=\"side-btn\">こんにちは</button>\r\n//                         <button className=\"side-btn\">バイバイ</button>\r\n//                         <button className=\"side-btn\">ペコリ</button>\r\n//                         <button className=\"side-btn\">バタバタ</button>\r\n//                         <button className=\"side-btn\">うえをむく</button>\r\n//                         <button className=\"side-btn\">したをむく</button>\r\n//                         <button className=\"side-btn\">みぎをむく</button>\r\n//                         <button className=\"side-btn\">ひだりをむく</button>\r\n//                         <button className=\"side-btn\">うなずく</button>\r\n//                         <button className=\"side-btn\">かしげる</button>\r\n//                         <button className=\"side-btn\">まわる</button>\r\n//                         <button className=\"side-btn\">ジャンプ</button>\r\n//                         <button className=\"side-btn\">ダンス</button>\r\n//                         <button className=\"side-btn\">おじぎ</button>\r\n//                         <button className=\"side-btn\">きをつけ</button>\r\n//                         <button className=\"side-btn\">休め</button>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"main-area\">\r\n//                     <div className=\"robot-display\">\r\n//                         {/* ローカルの映像を表示するためのvideo要素 (自分のカメラ映像) */}\r\n//                         <video ref={localVideoRef} autoPlay playsInline muted style={{ width: '100%', height: '50%', objectFit: 'contain', borderBottom: '1px solid gray' }} />\r\n//                         {/* リモートの映像を表示するためのvideo要素 (他のメンバーのカメラ映像) */}\r\n//                         <video ref={remoteVideoRef} autoPlay playsInline muted style={{ width: '100%', height: '50%', objectFit: 'contain' }} />\r\n//                         {!isRemoteVideoPlaying && (\r\n//                             <div style={{\r\n//                                 position: 'absolute',\r\n//                                 top: '50%',\r\n//                                 left: '50%',\r\n//                                 transform: 'translate(-50%, -50%)',\r\n//                                 color: 'white',\r\n//                                 fontSize: '20px',\r\n//                                 background: 'rgba(0, 0, 0, 0.7)',\r\n//                                 padding: '10px 20px',\r\n//                                 borderRadius: '10px',\r\n//                                 zIndex: 10,\r\n//                                 textAlign: 'center'\r\n//                             }}>\r\n//                                 {connectionStatus}\r\n//                                 <br />\r\n//                                 他のメンバーの映像を待機中...\r\n//                             </div>\r\n//                         )}\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"side-panel right\">\r\n//                     <div className=\"side-panel-content\">\r\n//                         <button className=\"side-btn\">こんにちは</button>\r\n//                         <button className=\"side-btn\">どこからきたの？</button>\r\n//                         <button className=\"side-btn\">バイバイ</button>\r\n//                         <button className=\"side-btn\">○○していますか？</button>\r\n//                         <button className=\"side-btn\">ありがとう</button>\r\n//                         <button className=\"side-btn\">いいね</button>\r\n//                         <button className=\"side-btn\">おおきに</button>\r\n//                         <button className=\"side-btn\">すごい</button>\r\n//                         <button className=\"side-btn\">がんばれ</button>\r\n//                         <button className=\"side-btn\">よろしく</button>\r\n//                         <button className=\"side-btn\">お疲れ様</button>\r\n//                         <button className=\"side-btn\">いいお天気</button>\r\n//                         <button className=\"side-btn\">暑いですね</button>\r\n//                         <button className=\"side-btn\">寒いですね</button>\r\n//                         <button className=\"side-btn\">楽しい</button>\r\n//                         <button className=\"side-btn\">面白い</button>\r\n//                         <button className=\"side-btn\">すてき</button>\r\n//                         <button className=\"side-btn\">かわいい</button>\r\n//                         <button className=\"side-btn\">かっこいい</button>\r\n//                         <button className=\"side-btn\">また明日</button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"bottom-controls\">\r\n//                 <button className=\"control-btn ai-btn\">🤖 AIでいあんON</button>\r\n//                 <button className=\"control-btn mic-btn\" id=\"micBtn\">\r\n//                     🎤\r\n//                 </button>\r\n//                 <button className=\"control-btn manual-btn\" id=\"manualBtn\">\r\n//                     📋 マニュアル\r\n//                 </button>\r\n//                 <button className=\"control-btn greeting-btn\" id=\"languageBtn\">\r\n//                     👋 にほんご\r\n//                 </button>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default Hoem;\r\n\r\n\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport 'style.css';\r\n// import { useNavigate } from 'react-router-dom'; // ルーティングを使用する場合はコメントを解除してください\r\nimport {\r\n  nowInSec,\r\n  SkyWayAuthToken,\r\n  SkyWayContext,\r\n  SkyWayRoom,\r\n  SkyWayStreamFactory, // 必要に応じてローカルストリームを公開するために使用\r\n  uuidV4,\r\n  LocalP2PRoomMember,\r\n} from '@skyway-sdk/room';\r\n\r\n/**\r\n * ホーム画面コンポーネント\r\n * @param {object} props - プロパティ\r\n * @param {function} props.setIsLoggedIn - ログイン状態を設定する関数\r\n */\r\nfunction Home({ setIsLoggedIn }) {\r\n  // ルーム名\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  // 自分の参加者情報 (ルームに参加すると設定されます)\r\n  const [me, setMe] = useState(null);\r\n  // SkyWayコンテキストのインスタンス\r\n  const [skywayContext, setSkywayContext] = useState(null);\r\n  // SkyWayルームのインスタンス\r\n  const [skywayRoom, setSkywayRoom] = useState(null);\r\n  // リモートビデオ要素を管理するためのMap (memberId -> videoElement)\r\n  const remoteVideoElements = useRef(new Map());\r\n  // リモートビデオを表示するDOM要素への参照\r\n  const robotDisplayRef = useRef(null);\r\n\r\n  // const navigate = useNavigate(); // ルーティングを使用する場合はコメントを解除してください\r\n\r\n  /**\r\n   * ログアウトボタンクリック時のハンドラ\r\n   */\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false); // ログイン状態をfalseに設定\r\n    // navigate('/'); // ログアウト後、ログインページへ遷移 (ルーティングを使用する場合)\r\n  };\r\n\r\n  // SkyWay App ID と Secret Key\r\n  // 注意: 本番環境では、これらのキーをクライアントサイドにハードコードせず、\r\n  // サーバーサイドでトークンを生成してクライアントに安全に渡すことを強く推奨します。\r\n  const appId = useMemo(() => \"4490dcb5-dbe8-4028-ba0a-6d0d143e4515\", []);\r\n  const secretKey = useMemo(() => \"40HHGEIOx0BRByPdxqwUswK0a+7v2JaeaJ9CcFjMdAQ=\", []);\r\n\r\n  // SkyWay認証トークンの生成\r\n  const token = useMemo(() => {\r\n    if (appId == null || secretKey == null) return undefined;\r\n\r\n    return new SkyWayAuthToken({\r\n      jti: uuidV4(), // JWT ID\r\n      iat: nowInSec(), // 発行時刻\r\n      exp: nowInSec() + 60 * 60 * 24, // 有効期限 (24時間)\r\n      version: 3,\r\n      scope: {\r\n        appId: appId,\r\n        rooms: [\r\n          {\r\n            name: \"*\", // すべてのルーム名に適用\r\n            methods: [\"create\", \"close\", \"updateMetadata\"], // ルーム操作の権限\r\n            member: {\r\n              name: \"*\", // すべてのメンバーに適用\r\n              methods: [\"publish\", \"subscribe\", \"updateMetadata\"] // メンバー操作の権限\r\n            }\r\n          }],\r\n        turn: {\r\n          enabled: true // TURNサーバーの使用を許可 (NAT越えのため)\r\n        }\r\n      }\r\n    }).encode(secretKey);\r\n\r\n  }, [appId, secretKey]);\r\n\r\n  /**\r\n   * SkyWayContextの初期化とクリーンアップを行うuseEffect\r\n   * トークンが利用可能になったときに一度だけ実行されます。\r\n   */\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    let currentContext;\r\n    const initContext = async () => {\r\n      try {\r\n        currentContext = await SkyWayContext.Create(token);\r\n        setSkywayContext(currentContext);\r\n        console.log(\"SkyWayContext created successfully.\");\r\n      } catch (error) {\r\n        console.error(\"Failed to create SkyWayContext:\", error);\r\n      }\r\n    };\r\n\r\n    initContext();\r\n\r\n    // コンポーネントのアンマウント時にコンテキストを破棄\r\n    return () => {\r\n      if (currentContext) {\r\n        currentContext.dispose();\r\n        console.log(\"SkyWayContext disposed.\");\r\n      }\r\n    };\r\n  }, [token]); // tokenが変更されたときにのみ実行\r\n\r\n  /**\r\n   * ルームに参加するハンドラ\r\n   * SkyWayContextが初期化され、ルーム名が入力されている場合に実行されます。\r\n   */\r\n  const handleJoinRoom = async () => {\r\n    if (!skywayContext) {\r\n      console.error(\"SkyWayContext is not initialized. Please wait or check token.\");\r\n      return;\r\n    }\r\n    if (!roomName) {\r\n      console.error(\"Room name is empty. Please enter a room name to join.\");\r\n      return;\r\n    }\r\n    if (skywayRoom && me) {\r\n      console.warn(\"Already in a room. Please leave the current room first.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 指定されたルーム名でP2Pルームを作成または検索\r\n      const room = await SkyWayRoom.FindOrCreate(skywayContext, {\r\n        type: \"p2p\", // P2Pルームタイプ\r\n        name: roomName,\r\n      });\r\n      setSkywayRoom(room);\r\n      console.log(`SkyWayRoom '${roomName}' found or created.`);\r\n\r\n      // ルームに参加し、自分のメンバー情報を取得\r\n      const localMember = await room.join();\r\n      setMe(localMember);\r\n      console.log(`Joined room '${roomName}' as member ID: ${localMember.id}`);\r\n\r\n      // --- ルームイベントリスナーの設定 ---\r\n\r\n      // メンバーがルームに参加したときのイベント\r\n      room.onMemberJoined.add((e) => {\r\n        console.log(`Member joined: ${e.member.id}`);\r\n      });\r\n\r\n      // メンバーがルームを離脱したときのイベント\r\n      room.onMemberLeft.add((e) => {\r\n        console.log(`Member left: ${e.member.id}`);\r\n        // 該当メンバーのビデオ要素をDOMから削除し、Mapからも削除\r\n        const videoElement = remoteVideoElements.current.get(e.member.id);\r\n        if (videoElement && robotDisplayRef.current) {\r\n          robotDisplayRef.current.removeChild(videoElement);\r\n          remoteVideoElements.current.delete(e.member.id);\r\n          console.log(`Removed video for member ${e.member.id}`);\r\n        }\r\n      });\r\n\r\n      // ストリームが公開されたときのイベント\r\n      room.onStreamPublished.add(async (e) => {\r\n        console.log(`Stream published by ${e.publication.publisher.id}`);\r\n        // 自分のストリームは購読しない (LocalP2PRoomMember.id と publication.publisher.id を比較)\r\n        if (localMember && localMember.id !== e.publication.publisher.id) {\r\n          try {\r\n            // リモートストリームを購読\r\n            const { stream } = await localMember.subscribe(e.publication.id);\r\n            console.log(`Subscribed to stream from ${e.publication.publisher.id}`);\r\n\r\n            // 購読したストリームを新しいビデオ要素にアタッチし、robot-displayに追加\r\n            if (robotDisplayRef.current) {\r\n              const video = document.createElement(\"video\");\r\n              video.autoplay = true; // 自動再生\r\n              video.playsInline = true; // インライン再生 (iOSなどで必要)\r\n              video.srcObject = stream; // ストリームをビデオ要素のソースに設定\r\n              video.className = \"remote-video\"; // スタイリング用のクラス\r\n              video.dataset.memberId = e.publication.publisher.id; // メンバーIDをデータ属性に保存\r\n              robotDisplayRef.current.appendChild(video);\r\n              remoteVideoElements.current.set(e.publication.publisher.id, video);\r\n              console.log(`Attached stream from ${e.publication.publisher.id} to DOM.`);\r\n            }\r\n          } catch (subscribeError) {\r\n            console.error(`Failed to subscribe to stream from ${e.publication.publisher.id}:`, subscribeError);\r\n          }\r\n        } else {\r\n          console.log(`Skipping subscription for own stream or local member not ready: ${e.publication.publisher.id}`);\r\n        }\r\n      });\r\n\r\n      // ストリームが非公開になったときのイベント\r\n      room.onStreamUnpublished.add((e) => {\r\n        console.log(`Stream unpublished by ${e.publication.publisher.id}`);\r\n        // 該当ストリームのビデオ要素をDOMから削除し、Mapからも削除\r\n        const videoElement = remoteVideoElements.current.get(e.publication.publisher.id);\r\n        if (videoElement && robotDisplayRef.current) {\r\n          robotDisplayRef.current.removeChild(videoElement);\r\n          remoteVideoElements.current.delete(e.publication.publisher.id);\r\n          console.log(`Removed unpublished video for member ${e.publication.publisher.id}`);\r\n        }\r\n      });\r\n\r\n      // オプション: 自分のカメラとマイクのストリームを公開する場合\r\n      // const streamFactory = new SkyWayStreamFactory();\r\n      // const localStream = await streamFactory.createCameraAndMicrophoneStreams();\r\n      // await localMember.publish(localStream);\r\n      // console.log(\"Published local camera and microphone stream.\");\r\n\r\n    } catch (error) {\r\n      console.error(\"Failed to join room:\", error);\r\n      // エラー発生時に状態をリセットして再試行可能にする\r\n      setSkywayRoom(null);\r\n      setMe(null);\r\n      // エラー時に既存のビデオ要素をクリーンアップ\r\n      if (robotDisplayRef.current) {\r\n        Array.from(robotDisplayRef.current.children).forEach(child => {\r\n          if (child.tagName === 'VIDEO') {\r\n            robotDisplayRef.current.removeChild(child);\r\n          }\r\n        });\r\n      }\r\n      remoteVideoElements.current.clear();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ルームから退出するハンドラ\r\n   */\r\n  const handleLeaveRoom = async () => {\r\n    if (skywayRoom && me) {\r\n      try {\r\n        await me.leave(); // ルームから退出\r\n        console.log(`Left room '${roomName}'`);\r\n        skywayRoom.close(); // ルームを閉じる (これはルームの作成者のみが効果的です)\r\n        console.log(\"SkyWay Room closed.\");\r\n      } catch (error) {\r\n        console.error(\"Failed to leave room:\", error);\r\n      } finally {\r\n        // 状態をリセット\r\n        setMe(null);\r\n        setSkywayRoom(null);\r\n        // すべてのリモートビデオ要素をDOMから削除\r\n        if (robotDisplayRef.current) {\r\n          Array.from(robotDisplayRef.current.children).forEach(child => {\r\n            if (child.tagName === 'VIDEO') {\r\n              robotDisplayRef.current.removeChild(child);\r\n            }\r\n          });\r\n        }\r\n        remoteVideoElements.current.clear();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n \r\n      <div className=\"header\">\r\n        <div className=\"header-left\">\r\n          <button className=\"motion-btn\">モーション</button>\r\n          <span className=\"robot-status\">\r\n            操作しているロボット：RX78-myakumyaku\r\n          </span>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <button onClick={handleLogout} className=\"logout-btn\">ログアウト</button>\r\n          <button className=\"voice-btn\">ボイス</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-container\">\r\n        <div className=\"side-panel\">\r\n          <div className=\"side-panel-content\">\r\n            <button className=\"side-btn\">こんにちは</button>\r\n            <button className=\"side-btn\">バイバイ</button>\r\n            <button className=\"side-btn\">ペコリ</button>\r\n            <button className=\"side-btn\">バタバタ</button>\r\n            <button className=\"side-btn\">うえをむく</button>\r\n            <button className=\"side-btn\">したをむく</button>\r\n            <button className=\"side-btn\">みぎをむく</button>\r\n            <button className=\"side-btn\">ひだりをむく</button>\r\n            <button className=\"side-btn\">うなずく</button>\r\n            <button className=\"side-btn\">かしげる</button>\r\n            <button className=\"side-btn\">まわる</button>\r\n            <button className=\"side-btn\">ジャンプ</button>\r\n            <button className=\"side-btn\">ダンス</button>\r\n            <button className=\"side-btn\">おじぎ</button>\r\n            <button className=\"side-btn\">きをつけ</button>\r\n            <button className=\"side-btn\">休め</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"main-area\">\r\n          <div className=\"room-controls\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"ルーム名を入力\"\r\n              value={roomName}\r\n              onChange={(e) => setRoomName(e.target.value)}\r\n              className=\"room-input\"\r\n              disabled={!!me} // ルーム参加中は入力不可にする\r\n            />\r\n            {!me ? ( // ルームに参加していない場合\r\n              <button onClick={handleJoinRoom} className=\"join-room-btn\" disabled={!skywayContext || !roomName}>\r\n                ルームに参加\r\n              </button>\r\n            ) : ( // ルームに参加している場合\r\n              <button onClick={handleLeaveRoom} className=\"leave-room-btn\">\r\n                ルームを退出\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className=\"robot-display\" ref={robotDisplayRef}>\r\n            {/* リモートのビデオストリームがここに動的に追加されます */}\r\n            {me ? (\r\n              <div className=\"room-info\">\r\n                ルームID: {roomName} / 自分のID: {me.id}\r\n              </div>\r\n            ) : (\r\n              <p>ルームに参加してください</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"side-panel right\">\r\n          <div className=\"side-panel-content\">\r\n            <button className=\"side-btn\">こんにちは</button>\r\n            <button className=\"side-btn\">どこからきたの？</button>\r\n            <button className=\"side-btn\">バイバイ</button>\r\n            <button className=\"side-btn\">○○していますか？</button>\r\n            <button className=\"side-btn\">ありがとう</button>\r\n            <button className=\"side-btn\">いいね</button>\r\n            <button className=\"side-btn\">おおきに</button>\r\n            <button className=\"side-btn\">すごい</button>\r\n            <button className=\"side-btn\">がんばれ</button>\r\n            <button className=\"side-btn\">よろしく</button>\r\n            <button className=\"side-btn\">お疲れ様</button>\r\n            <button className=\"side-btn\">いいお天気</button>\r\n            <button className=\"side-btn\">暑いですね</button>\r\n            <button className=\"side-btn\">寒いですね</button>\r\n            <button className=\"side-btn\">楽しい</button>\r\n            <button className=\"side-btn\">面白い</button>\r\n            <button className=\"side-btn\">すてき</button>\r\n            <button className=\"side-btn\">かわいい</button>\r\n            <button className=\"side-btn\">かっこいい</button>\r\n            <button className=\"side-btn\">また明日</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom-controls\">\r\n        <button className=\"control-btn ai-btn\">🤖 AIでいあんON</button>\r\n        <button className=\"control-btn mic-btn\" id=\"micBtn\">\r\n          🎤\r\n        </button>\r\n        <button className=\"control-btn manual-btn\" id=\"manualBtn\">\r\n          📋 マニュアル\r\n        </button>\r\n        <button className=\"control-btn greeting-btn\" id=\"languageBtn\">\r\n          👋 にほんご\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnE,OAAO,WAAW;AAClB;AACA,SACEC,QAAQ,EACRC,eAAe,EACfC,aAAa,EACbC,UAAU,EACVC,mBAAmB;AAAE;AACrBC,MAAM,EACNC,kBAAkB,Q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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}